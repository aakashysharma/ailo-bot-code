{
  "openapi": "3.0.0",
  "info": {
    "title": "Utdanning.no API (prod)",
    "description": "",
    "version": "(v2.13.51)"
  },
  "servers": [
    {
      "url": "https://api.utdanning.no/",
      "description": ""
    }
  ],
  "paths": {
    "/arbeidsmarkedskart/endring_arbeidsmarked": {
      "get": {
        "operationId": "api_arbeidsmarkedskartendring_arbeidsmarked_get_collection",
        "tags": [
          "Arbeidsmarkedskart"
        ],
        "responses": {
          "200": {
            "description": "Endring_arbeidsmarked collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Endring_arbeidsmarked.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Endring i arbeidsmarkedet gjennom Ã¥rene",
        "description": "Retrieves the collection of Endring_arbeidsmarked resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id's. To retrieve statistics all employees, regardless of occupation, use special value y_alle.\n        Some example values: <ul><li><code>y_sykepleier</code></li><li><code>y_sykepleier,y_lege,y_elektriker</code></li><li><code>y_alle</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk08",
            "in": "query",
            "description": "Comma-separated string of styrk08 codes's.\n        Some example values: <ul><li><code>2223</code></li><li><code>7411,2223</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommune",
            "in": "query",
            "description": "Comma-separated string of Norwegian municipality IDs.\n        Some example values: <ul><li><code>5501</code></li><li><code>0301</code></li><li><code>5501,1804</code></li><li><code>0301,4601,5001,1103,4204,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylke",
            "in": "query",
            "description": "Comma-separated string of fylke numbers.\n        Some example values: <ul><li><code>03</code></li><li><code>03,42</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of one or more years (YYYY) to retrieve employment numbers. Earliest statistics with sufficient data quality is normally 2016.\n        Some example values: <ul><li><code>2022</code></li><li><code>2021</code></li><li><code>2020</code></li><li><code>2019</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "region",
            "in": "query",
            "description": "Get employment statistics aggregated by eighter municipality, county or country.\n        Available values: <ul><li><code>fylke</code></li><li><code>kommune</code></li><li><code>norge</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ba_region_nr",
            "in": "query",
            "description": "Currently not in use (due to de-anonymization data confidentiality issues). Comma-separated string of 159 Bo- og arbeidsmarkedsregion (ba_regions)\n        Some example values: <ul><li><code>BA005</code></li><li><code>BA005,BA048</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "antall_aarsverk",
            "in": "query",
            "description": "Threshold value of minimum number of man-years worked (antall aarsverk)\n        Some example values: <ul><li><code>5</code></li><li><code>100</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "antall_ansatte",
            "in": "query",
            "description": "Threshold value of mimium number of employees (antall_ansatte)\n        Some example values: <ul><li><code>5</code></li><li><code>10</code></li><li><code>100</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/arbeidsmarkedskart/endring_arbeidsmarked/{id}": {
      "parameters": []
    },
    "/arbeidsmarkedskart/stedsvelger": {
      "get": {
        "operationId": "api_arbeidsmarkedskartstedsvelger_get_collection",
        "tags": [
          "Arbeidsmarkedskart"
        ],
        "responses": {
          "200": {
            "description": "Stedsvelger_Fylke collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Stedsvelger_Fylke"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all counties and municipalities given certain criteria",
        "description": "Retrieves the collection of Stedsvelger_Fylke resources.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "har_videregaende_skoler",
            "in": "query",
            "description": "returner bare entiteter som har minst en videregÃ¥ende skole",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "har_bedrifter",
            "in": "query",
            "description": "returner bare entiteter som har minst en bedrift",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/arbeidsmarkedskart/stillingsutlysning": {
      "get": {
        "operationId": "api_arbeidsmarkedskartstillingsutlysning_get_collection",
        "tags": [
          "Arbeidsmarkedskart"
        ],
        "responses": {
          "200": {
            "description": "Stillingsutlysning collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stillingsutlysning.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Stillingsutlysninger per kommune, Ã¥r og yrke",
        "description": "Retrieves the collection of Stillingsutlysning resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk08",
            "in": "query",
            "description": "Comma-separated string of styrk08 codes's.\n        Some example values: <ul><li><code>2223</code></li><li><code>7411,2223</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommune",
            "in": "query",
            "description": "Comma-separated string of Norwegian municipality IDs.\n        Some example values: <ul><li><code>5501</code></li><li><code>0301</code></li><li><code>5501,1804</code></li><li><code>0301,4601,5001,1103,4204,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of one or more years (YYYY) to retrieve employment numbers. Earliest statistics with sufficient data quality is normally 2016.\n        Some example values: <ul><li><code>2022</code></li><li><code>2021</code></li><li><code>2020</code></li><li><code>2019</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "region",
            "in": "query",
            "description": "Get employment statistics aggregated by eighter municipality, county or country.\n        Available values: <ul><li><code>fylke</code></li><li><code>kommune</code></li><li><code>norge</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ba_region_nr",
            "in": "query",
            "description": "Currently not in use (due to de-anonymization data confidentiality issues). Comma-separated string of 159 Bo- og arbeidsmarkedsregion (ba_regions)\n        Some example values: <ul><li><code>BA005</code></li><li><code>BA005,BA048</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id's. To retrieve statistics all employees, regardless of occupation, use special value y_alle.\n        Some example values: <ul><li><code>y_sykepleier</code></li><li><code>y_sykepleier,y_lege,y_elektriker</code></li><li><code>y_alle</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/arbeidsmarkedskart/stillingsutlysning/{id}": {
      "parameters": []
    },
    "/arbeidsmarkedskart/tidsserie": {
      "get": {
        "operationId": "api_arbeidsmarkedskarttidsserie_get_collection",
        "tags": [
          "Arbeidsmarkedskart"
        ],
        "responses": {
          "200": {
            "description": "Tidsserie collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tidsserie.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Tidsserie for en kommuner/fylker fra 2016 til dags dato",
        "description": "Retrieves the collection of Tidsserie resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommune",
            "in": "query",
            "description": "Comma-separated string of Norwegian municipality IDs.\n        Some example values: <ul><li><code>5501</code></li><li><code>0301</code></li><li><code>5501,1804</code></li><li><code>0301,4601,5001,1103,4204,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylke",
            "in": "query",
            "description": "Comma-separated string of fylke numbers.\n        Some example values: <ul><li><code>03</code></li><li><code>03,42</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/arbeidsmarkedskart/tidsserie/{id}": {
      "parameters": []
    },
    "/finnlarebedrift/aarsverk/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/antall_stillinger/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/bedrift/{id}": {
      "get": {
        "operationId": "api_finnlarebedriftbedrift_id_get",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrift resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bedrift.jsonld-bedrift.item"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir komplett informasjon om hver bedrift.",
        "description": "Retrieves a Bedrift resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bedrift identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/bedrifter_alle": {
      "get": {
        "operationId": "api_finnlarebedriftbedrifter_alle_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_alle collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_alle.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Bedrifter_alle resources.",
        "description": "Retrieves the collection of Bedrifter_alle resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field and order to sort by.\n        Valid fields and sort order: <ul><li><code>ansatte_totalt desc|asc</code></li><li><code>lopende_kontrakter_totalt desc|asc</code></li><li><code>navn desc|asc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "statlige_etater",
            "in": "query",
            "description": "Show all government agencies (statlige etater)\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkeskommuner",
            "in": "query",
            "description": "Show all fylkeskommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommuner",
            "in": "query",
            "description": "Show all kommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjonsform",
            "in": "query",
            "description": "Comma-separated string of the type of enhet.\n        Accepted values: <ul><li><code>statlig</code></li><li><code>fylkeskommunal</code></li><li><code>kommunal</code></li><li><code>offentlig_foretak</code></li><li><code>andre</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling_valgte_fag",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active with selected fagomrade/programomrade",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/bedrifter_godkjente": {
      "get": {
        "operationId": "api_finnlarebedriftbedrifter_godkjente_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_godkjente collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_godkjente.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Bedrifter_godkjente resources.",
        "description": "Retrieves the collection of Bedrifter_godkjente resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to include.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field and order to sort by.\n        Valid fields and sort order: <ul><li><code>ansatte_totalt desc|asc</code></li><li><code>lopende_kontrakter_totalt desc|asc</code></li><li><code>navn desc|asc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "statlige_etater",
            "in": "query",
            "description": "Show all government agencies (statlige etater)\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkeskommuner",
            "in": "query",
            "description": "Show all fylkeskommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommuner",
            "in": "query",
            "description": "Show all kommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjonsform",
            "in": "query",
            "description": "Comma-separated string of the type of enhet.\n        Accepted values: <ul><li><code>statlig</code></li><li><code>fylkeskommunal</code></li><li><code>kommunal</code></li><li><code>offentlig_foretak</code></li><li><code>andre</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling_valgte_fag",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active with selected fagomrade/programomrade",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/bedrifter_ikke_godkjente": {
      "get": {
        "operationId": "api_finnlarebedriftbedrifter_ikke_godkjente_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_ikke_godkjente collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_ikke_godkjente.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Bedrifter_ikke_godkjente resources.",
        "description": "Retrieves the collection of Bedrifter_ikke_godkjente resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field and order to sort by.\n        Valid fields and sort order: <ul><li><code>ansatte_totalt desc|asc</code></li><li><code>lopende_kontrakter_totalt desc|asc</code></li><li><code>navn desc|asc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "statlige_etater",
            "in": "query",
            "description": "Show all government agencies (statlige etater)\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkeskommuner",
            "in": "query",
            "description": "Show all fylkeskommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommuner",
            "in": "query",
            "description": "Show all kommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjonsform",
            "in": "query",
            "description": "Comma-separated string of the type of enhet.\n        Accepted values: <ul><li><code>statlig</code></li><li><code>fylkeskommunal</code></li><li><code>kommunal</code></li><li><code>offentlig_foretak</code></li><li><code>andre</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling_valgte_fag",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active with selected fagomrade/programomrade",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/bedrifter_m_lareplass": {
      "get": {
        "operationId": "api_finnlarebedriftbedrifter_m_lareplass_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_m_lareplass collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_m_lareplass.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Bedrifter_m_lareplass resources.",
        "description": "Retrieves the collection of Bedrifter_m_lareplass resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling_valgte_fag",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active with selected fagomrade/programomrade",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field and order to sort by.\n        Valid fields and sort order: <ul><li><code>ansatte_totalt desc|asc</code></li><li><code>lopende_kontrakter_totalt desc|asc</code></li><li><code>navn desc|asc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "statlige_etater",
            "in": "query",
            "description": "Show all government agencies (statlige etater)\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkeskommuner",
            "in": "query",
            "description": "Show all fylkeskommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommuner",
            "in": "query",
            "description": "Show all kommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjonsform",
            "in": "query",
            "description": "Comma-separated string of the type of enhet.\n        Accepted values: <ul><li><code>statlig</code></li><li><code>fylkeskommunal</code></li><li><code>kommunal</code></li><li><code>offentlig_foretak</code></li><li><code>andre</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/bedriftsinfo/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/bedriftsliste": {
      "get": {
        "operationId": "api_finnlarebedriftbedriftsliste_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrift collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrift.jsonld-bedrift.collection"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir generell informasjon om hver bedrift.",
        "description": "Retrieves the collection of Bedrift resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk98",
            "in": "query",
            "description": "Comma-separated string of syrk98 codes.\n        Example values: <ul><li><code>9132103</code></li><li><code>0113115</code></li><li><code>0113115</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "child_documents[]",
            "in": "query",
            "description": "Which child documents to get. Expected values: <ul><li><code>2.virksomhet.roller</code></li><li><code>2.virksomhet.yrkeskode_styrk98</code></li><li><code>2.virksomhet.yrke</code></li><li><code>2.virksomhet.forelder</code></li><li><code>2.virksomhet.annen_godkjenning</code></li><li><code>2.virksomhet.vigo_godkjenning</code></li><li><code>2.virksomhet.avtale_yff</code></li><li><code>2.virksomhet.garanti</code></li></ul><br><strong>Only applies to item resource</strong> <em>(pending bugfix on swagger)</em>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "inc_par_chd",
            "in": "query",
            "description": "Fetch also the child documents for the <strong>parent</strong> entities.<br><strong>Only applies to item resource</strong> <em>(pending bugfix on swagger)</em>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "inc_ch_chd",
            "in": "query",
            "description": "Fetch also the child documents for the <strong>child</strong> entities.<br><strong>Only applies to item resource</strong> <em>(pending bugfix on swagger)</em>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/bedriftsstorrelse/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/combinations": {
      "get": {
        "operationId": "api_finnlarebedriftcombinations_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Finnlarebedrift_Combinations collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Finnlarebedrift_Combinations"
                  }
                }
              }
            }
          }
        },
        "summary": "FÃ¥ alle kombinasjoner av bedrifter som er godkjent i alle fylker",
        "description": "Retrieves the collection of Finnlarebedrift_Combinations resources.",
        "parameters": [
          {
            "name": "min_count",
            "in": "query",
            "description": "The minimum count a municipality needs to be in the list. Default <code>1</code>\n        Some example values: <ul><li><code>1</code></li><li><code>5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/YFF": {
      "get": {
        "operationId": "api_finnlarebedriftfacetYFF_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "YFF collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/YFF.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en liste over bedrifter med YFF-avtale",
        "description": "Retrieves the collection of YFF resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/aarsverk": {
      "get": {
        "operationId": "api_finnlarebedriftfacetaarsverk_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Aarsverk collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Aarsverk.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om Ã¥rsverk per alders-gruppe.",
        "description": "Retrieves the collection of Aarsverk resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/antall_stillinger": {
      "get": {
        "operationId": "api_finnlarebedriftfacetantall_stillinger_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Antall_stillinger collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Antall_stillinger.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Facet for alle utlyste lÃ¦rlingestillinger",
        "description": "Retrieves the collection of Antall_stillinger resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/bedrifter_alle": {
      "get": {
        "operationId": "api_finnlarebedriftfacetbedrifter_alle_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_alle_facet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_alle_facet.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir antall bedrifter.",
        "description": "Retrieves the collection of Bedrifter_alle_facet resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/bedrifter_godkjente": {
      "get": {
        "operationId": "api_finnlarebedriftfacetbedrifter_godkjente_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_godkjente_facet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_godkjente_facet.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir antall godkjente bedrifter.",
        "description": "Retrieves the collection of Bedrifter_godkjente_facet resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to include.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/bedrifter_ikke_godkjente": {
      "get": {
        "operationId": "api_finnlarebedriftfacetbedrifter_ikke_godkjente_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_ikke_godkjente_facet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_ikke_godkjente_facet.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir antall ikke godkjente bedrifter.",
        "description": "Retrieves the collection of Bedrifter_ikke_godkjente_facet resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/bedrifter_m_lareplass": {
      "get": {
        "operationId": "api_finnlarebedriftfacetbedrifter_m_lareplass_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedrifter_m_lareplass_facet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedrifter_m_lareplass_facet.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir antall bedrifter med ledig lÃ¦replass.",
        "description": "Retrieves the collection of Bedrifter_m_lareplass_facet resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling_valgte_fag",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active with selected fagomrade/programomrade",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laereplassgaranti",
            "in": "query",
            "description": "Filter bedrifter by the presence of a lareplassgaranti. Leave unset for a value of 'both'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/bedriftsinfo": {
      "get": {
        "operationId": "api_finnlarebedriftfacetbedriftsinfo_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedriftsinfo collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedriftsinfo.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om bedrifter.",
        "description": "Retrieves the collection of Bedriftsinfo resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/bedriftsstorrelse": {
      "get": {
        "operationId": "api_finnlarebedriftfacetbedriftsstorrelse_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Bedriftsstorrelse collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bedriftsstorrelse.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en liste med antall bedrifter innefor en gitt bedriftsstÃ¸rrelse kategori.",
        "description": "Retrieves the collection of Bedriftsstorrelse resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/godkjenninger": {
      "get": {
        "operationId": "api_finnlarebedriftfacetgodkjenninger_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Godkjenninger collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Godkjenninger.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om hvor mange bedrifter som har forskjellige godkjenninger.",
        "description": "Retrieves the collection of Godkjenninger resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/larling": {
      "get": {
        "operationId": "api_finnlarebedriftfacetlarling_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Larling collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Larling.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om lÃ¦rling-statusen til alle bedrifter.",
        "description": "Retrieves the collection of Larling resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/larlinger": {
      "get": {
        "operationId": "api_finnlarebedriftfacetlarlinger_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Larlinger collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Larlinger.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Facet med antall bedrifter innenfor en gitt verdi",
        "description": "Retrieves the collection of Larlinger resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/larlinger_aarsverk_naringer": {
      "get": {
        "operationId": "api_finnlarebedriftfacetlarlinger_aarsverk_naringer_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Larlinger_aarsverk_naringer collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Larlinger_aarsverk_naringer.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "",
        "description": "Retrieves the collection of Larlinger_aarsverk_naringer resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "naringskode",
            "in": "query",
            "description": "Show companies (bedrifter) belonging to the chosen Standard Industrial Classification code (nÃ¦ringskode, NACE).\n        Boolean values: <ul><li><code>41</code></li><li><code>73</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/larlinger_aarsverk_naringer/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/facet/larlinger_i_valgte_fag": {
      "get": {
        "operationId": "api_finnlarebedriftfacetlarlinger_i_valgte_fag_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Larlinger_Valgte_Fag collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Larlinger_Valgte_Fag.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Facet med antall bedrifter innenfor en gitt verdi",
        "description": "Retrieves the collection of Larlinger_Valgte_Fag resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/latefy": {
      "get": {
        "operationId": "api_finnlarebedriftfacetlatefy_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Latefy collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Latefy.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Latefy resources.",
        "description": "Retrieves the collection of Latefy resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/lateko": {
      "get": {
        "operationId": "api_finnlarebedriftfacetlateko_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Lateko collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Lateko.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Lateko resources.",
        "description": "Retrieves the collection of Lateko resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/opplaring": {
      "get": {
        "operationId": "api_finnlarebedriftfacetopplaring_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Opplaring collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opplaring.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om opplÃ¦ringskontor.",
        "description": "Retrieves the collection of Opplaring resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/opplaringskontor": {
      "get": {
        "operationId": "api_finnlarebedriftfacetopplaringskontor_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Opplaringskontor collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opplaringskontor.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Fasett som viser hvor mange bedrifter som er et opplÃ¦ringskontor",
        "description": "Retrieves the collection of Opplaringskontor resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/facet/sted": {
      "get": {
        "operationId": "api_finnlarebedriftfacetsted_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Sted collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Sted.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Sted resources.",
        "description": "Retrieves the collection of Sted resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/fagvelger": {
      "get": {
        "operationId": "api_finnlarebedriftfagvelger_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Finnlarebedrift_Fagvelger collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Finnlarebedrift_Fagvelger"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir et JSON dokument med fagvelgerdata til finnlÃ¦rebedrift",
        "description": "Retrieves the collection of Finnlarebedrift_Fagvelger resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/garanti": {
      "get": {
        "operationId": "api_finnlarebedriftgaranti_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Garanti collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Garanti.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir generell liste.",
        "description": "Retrieves the collection of Garanti resources.",
        "parameters": [
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/garanti/garantier": {
      "get": {
        "operationId": "api_finnlarebedriftgarantigarantier_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "GarantiGarantier collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GarantiGarantier.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en liste over garantier gitt av en koordinator filtrert pÃ¥ fylket til bedriften med garanti",
        "description": "Retrieves the collection of GarantiGarantier resources.",
        "parameters": [
          {
            "name": "lareplassgarantist",
            "in": "query",
            "description": "Search by orgnr of lareplassgarantist. Accepts a single value.\n                    <ul><li><code>964982953</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/godkjenninger/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/larling/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/larlinger/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/larlinger_i_valgte_fag/{value}": {
      "parameters": []
    },
    "/finnlarebedrift/naringskodevelger": {
      "get": {
        "operationId": "api_finnlarebedriftnaringskodevelger_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Finnlarebedrift_Naringskodevelger collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Finnlarebedrift_Naringskodevelger"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir et JSON dokument med nÃ¦ringskoder til finnlÃ¦rebedrift",
        "description": "Retrieves the collection of Finnlarebedrift_Naringskodevelger resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/naringskodevelger/{id}": {
      "parameters": []
    },
    "/finnlarebedrift/navnesok": {
      "get": {
        "operationId": "api_finnlarebedriftnavnesok_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Navnesok collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navnesok"
                  }
                }
              }
            }
          }
        },
        "summary": "Gets up to 10 results from a search on a company name or orgnr",
        "description": "Retrieves the collection of Navnesok resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search for orgnr or navn:\n                    min length 4\n                    <ul><li><code>kunnskapsdepartementet</code></li><li><code>872417842</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/result": {
      "get": {
        "operationId": "api_finnlarebedriftresult_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Result collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Result.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Result resources.",
        "description": "Retrieves the collection of Result resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Used to filter on search terms.\n        Result will contain bedrifter with the search term value in its name.\n        Example values: <ul><li><code>data</code></li><li><code>kommune</code></li><li><code>skole</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling",
            "in": "query",
            "description": "Comma-separated string of the bedrifts larling status.\n        Accepted values: <ul><li><code>godkjent_har_larling</code></li><li><code>godkjent_uten_larling</code></li><li><code>utlopt</code></li><li><code>ikke_godkjent</code></li><li><code>avtale_yff</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larling_ekskluder",
            "in": "query",
            "description": "Comma-separated string of which larlinge conditions to exclude.\nAccepted values: <ul><li><code>arvede_godkjenninger</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aarsverk",
            "in": "query",
            "description": "Comma-separated string of age-groups.\n        All possible values: <ul><li><code>ag0</code></li><li><code>ag1</code></li><li><code>ag2</code></li><li><code>ag3</code></li><li><code>ag4</code></li><li><code>ag5</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaring",
            "in": "query",
            "description": "Filter based on the opplaringskontor a bedrift belongs to.\n                        Example values:\n                    <ul><li><code>ingen</code></li><li><code>alle</code></li><li><code>orgnr for opplÃ¦ringskontor</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gk",
            "in": "query",
            "description": "Comma-separated string of godkjenninger.\n        Accepted values: <ul><li><code>\"sentralt godkjent\"</code></li><li><code>\"Smilefjestilsyn\"</code></li><li><code>\"Mesterbedrift\"</code></li><li><code>\"Godkjent renholdsbedrift\"</code></li><li><code>\"Godkjent kjÃ¸retÃ¸yverksted\"</code></li><li><code>\"Ekomnettautorisasjon\"</code></li><li><code>\"Godkjent elvirksomhet\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sted",
            "in": "query",
            "description": "Comma-separated string of county IDs (2 digit) or municipality IDs (4 digit).\n        Some example values: <ul><li><code>03</code></li><li><code>0301</code></li><li><code>5501</code></li><li><code>0301,5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fag",
            "in": "query",
            "description": "Comma-separated string of fag codes.\n        Some example values: <ul><li><code>ELELE3</code></li><li><code>TPALU3</code></li><li><code>ELDAT3,TPGPT3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "YFF",
            "in": "query",
            "description": "Vis alle bedrifter med YFF-avtale",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "larlinger_i_valgte_fag",
            "in": "query",
            "description": "Comma-separated string of antall lÃ¦rlinger in selected Fag\n        All possible values: <ul><li><code>al0</code></li><li><code>al1</code></li><li><code>al2</code></li><li><code>al3</code></li><li><code>al4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "bedriftsstorrelse",
            "in": "query",
            "description": "Comma-separated string of the size of the bedrift.\n        Accepted values: <ul><li><code>liten_bedrift</code></li><li><code>mellomstor_bedrift</code></li><li><code>stor_bedrift</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "opplaringskontor",
            "in": "query",
            "description": "Vis alle opplÃ¦ringskontor",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ledig_stilling_valgte_fag",
            "in": "query",
            "description": "Filter based on if the bedrift has a jobb posting active with selected fagomrade/programomrade",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Field and order to sort by.\n        Valid fields and sort order: <ul><li><code>ansatte_totalt desc|asc</code></li><li><code>lopende_kontrakter_totalt desc|asc</code></li><li><code>navn desc|asc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "statlige_etater",
            "in": "query",
            "description": "Show all government agencies (statlige etater)\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkeskommuner",
            "in": "query",
            "description": "Show all fylkeskommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommuner",
            "in": "query",
            "description": "Show all kommuner\n        Boolean values: <ul><li><code>true|false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjonsform",
            "in": "query",
            "description": "Comma-separated string of the type of enhet.\n        Accepted values: <ul><li><code>statlig</code></li><li><code>fylkeskommunal</code></li><li><code>kommunal</code></li><li><code>offentlig_foretak</code></li><li><code>andre</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/finnlarebedrift/stedsvelger": {
      "get": {
        "operationId": "api_finnlarebedriftstedsvelger_get_collection",
        "tags": [
          "Finnlarebedrift"
        ],
        "responses": {
          "200": {
            "description": "Finnlarebedrift_Stedsvelger collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Finnlarebedrift_Stedsvelger"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir et JSON dokument med stedsvelgerdata til finnlÃ¦rebedrift",
        "description": "Retrieves the collection of Finnlarebedrift_Stedsvelger resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/ga4/paths": {
      "get": {
        "operationId": "api_ga4paths_get_collection",
        "tags": [
          "Ga4"
        ],
        "responses": {
          "200": {
            "description": "Paths collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Paths"
                  }
                }
              }
            }
          }
        },
        "summary": "Url for sidene pÃ¥ utdanning.no som vi viser views for pÃ¥ ga4/views",
        "description": "Retrieves the collection of Paths resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/ga4/views": {
      "get": {
        "operationId": "api_ga4views_get_collection",
        "tags": [
          "Ga4"
        ],
        "responses": {
          "200": {
            "description": "Views collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Views"
                  }
                }
              }
            }
          }
        },
        "summary": "Antall visninger pÃ¥ alle urlene pÃ¥ utdanning.no",
        "description": "Retrieves the collection of Views resources.",
        "parameters": [
          {
            "name": "sti",
            "in": "query",
            "description": "En enkel sti for Ã¥ fÃ¥ antall visninger pÃ¥ en gitt url\n        Some example values: <ul><li><code>/</code></li><li><code>/yrker</code></li><li><code>/tema</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "intervall_type",
            "in": "query",
            "description": "Valg for Ã¥ filtere pÃ¥ datointervall.\n        Alternativer: <ul><li><code>year</code></li><li><code>month</code></li><li><code>week</code></li><li><code>day</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "intervall",
            "in": "query",
            "description": "Valg for Ã¥ hente spesifikk data.\n        Alternativer: <ul><li><code>2023-06-07</code></li><li><code>2023-06-07,2023-06-08 Gir data for 2023-06-07 og 2023-06-08</code></li><li><code>2023-06-05:2023-06-12 Gir data fra 2023-06-05 til 2023-06-12</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/jobbkompasset/forside": {
      "get": {
        "operationId": "api_jobbkompassetforside_get_collection",
        "tags": [
          "Jobbkompasset"
        ],
        "responses": {
          "200": {
            "description": "Forside collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Forside.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Alle temaer og kategorier i jobbkompasset",
        "description": "Retrieves the collection of Forside resources.",
        "parameters": [],
        "deprecated": false,
        "x-method": "get"
      },
      "parameters": []
    },
    "/jobbkompasset/yrker": {
      "get": {
        "operationId": "yrke",
        "tags": [
          "Jobbkompasset"
        ],
        "responses": {
          "200": {
            "description": "Yrker collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Yrker.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Alle yrker i jobbkompasset",
        "description": "Retrieves the collection of Yrker resources.",
        "parameters": [
          {
            "name": "tema",
            "in": "query",
            "description": "Single string that takes one tema.\n        Expected values: <ul><li><code>Industri, elektronikk, transport og sikkerhet</code></li><li><code>Mennesker, helse, mat og natur</code></li><li><code>Design, kultur, sport og reiseliv</code></li><li><code>Teknologi, samfunn, handel og Ã¸konomi</code></li></ul>\n        <br><strong>Parameters with special characters must be enclosed in \"\"</strong>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kategori",
            "in": "query",
            "description": "Single string that takes one kategori.\n        Example values: <ul><li><code>Mennesker</code></li><li><code>Industri, bygg og anlegg</code></li><li><code>Landbruk, fiskeri og havbruk</code></li><li><code>Mekanikk, teknikk og elektronikk</code></li></ul>\n        <br><strong>Parameters with special characters must be enclosed in \"\"</strong>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "interesse",
            "in": "query",
            "description": "Single string that takes one interesse.\n        Example values: <ul><li><code>Helse</code></li><li><code>Religion</code></li><li><code>Bygg og anlegg</code></li></ul>\n        <br><strong>Parameters with special characters must be enclosed in \"\"</strong>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false,
        "x-method": "get"
      },
      "parameters": []
    },
    "/karakterkalkulator/points": {
      "get": {
        "operationId": "api_karakterkalkulatorpoints_get_collection",
        "tags": [
          "Karakterkalkulator"
        ],
        "responses": {
          "200": {
            "description": "Points collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Points.jsonld-points.collection"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir innholdet av en gitt fil. Brukes pÃ¥ utdanning.no/karakterkalkulator/.",
        "description": "Retrieves the collection of Points resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "filename",
            "in": "query",
            "description": "Choose which file should be displayed.\n        Possible filenames to choose: <ul><li><code>fag_built.json</code></li><li><code>kravelementer.json</code></li><li><code>kravkoder_logikk_SO.json</code></li><li><code>poenggrenser_history_per_code.json</code></li><li><code>points_per_subject_per_category.json</code></li><li><code>UHG_forenklet_kravkodelogikk_redusert.json</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/kategorisystemer/nus": {
      "get": {
        "operationId": "api_kategorisystemernus_get_collection",
        "tags": [
          "Kategorisystemer"
        ],
        "responses": {
          "200": {
            "description": "KategorisystemerNus collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KategorisystemerNus"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over nus koder",
        "description": "Retrieves the collection of KategorisystemerNus resources.",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Which value to start from\n          Some example values: <ul><li><code>0</code></li><li><code>500</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many values to fetch at a time\n          Some example values: <ul><li><code>500</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/kategorisystemer/nus/{nus_kode}": {
      "get": {
        "operationId": "api_kategorisystemernus_nus_kode_get",
        "tags": [
          "Kategorisystemer"
        ],
        "responses": {
          "200": {
            "description": "KategorisystemerNus resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategorisystemerNus"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir en nus kode",
        "description": "Retrieves a KategorisystemerNus resource.",
        "parameters": [
          {
            "name": "nus_kode",
            "in": "path",
            "description": "KategorisystemerNus identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/kategorisystemer/styrk08": {
      "get": {
        "operationId": "api_kategorisystemerstyrk08_get_collection",
        "tags": [
          "Kategorisystemer"
        ],
        "responses": {
          "200": {
            "description": "Kategorisystemer_Styrk08 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kategorisystemer_Styrk08"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over styrk08 koder, og tilhÃ¸rende yrker",
        "description": "Retrieves the collection of Kategorisystemer_Styrk08 resources.",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Takes a column name, and 'asc' or 'desc'\n        Expected values: <ul><li><code>styrk08_navn asc</code></li><li><code>antall_personer desc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specify which columns to show out\n        Expected values: <ul><li><code>styrk08_navn,styrk08_kortnavn</code></li><li><code>antall_personer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/kategorisystemer/styrk08/{yrkeskode_styrk08}": {
      "get": {
        "operationId": "api_kategorisystemerstyrk08_yrkeskode_styrk08_get",
        "tags": [
          "Kategorisystemer"
        ],
        "responses": {
          "200": {
            "description": "Kategorisystemer_Styrk08 resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kategorisystemer_Styrk08"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir en styrk08 kode",
        "description": "Retrieves a Kategorisystemer_Styrk08 resource.",
        "parameters": [
          {
            "name": "yrkeskode_styrk08",
            "in": "path",
            "description": "Kategorisystemer_Styrk08 identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/kategorisystemer/styrk98": {
      "get": {
        "operationId": "api_kategorisystemerstyrk98_get_collection",
        "tags": [
          "Kategorisystemer"
        ],
        "responses": {
          "200": {
            "description": "KategorisystemerStyrk98 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KategorisystemerStyrk98"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over styrk98 koder",
        "description": "Retrieves the collection of KategorisystemerStyrk98 resources.",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Which value to start from\n          Some example values: <ul><li><code>0</code></li><li><code>500</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many values to fetch at a time\n          Some example values: <ul><li><code>500</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/kategorisystemer/styrk98/{styrk98_kode}": {
      "get": {
        "operationId": "api_kategorisystemerstyrk98_styrk98_kode_get",
        "tags": [
          "Kategorisystemer"
        ],
        "responses": {
          "200": {
            "description": "KategorisystemerStyrk98 resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KategorisystemerStyrk98"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir en styrk98 kode",
        "description": "Retrieves a KategorisystemerStyrk98 resource.",
        "parameters": [
          {
            "name": "styrk98_kode",
            "in": "path",
            "description": "KategorisystemerStyrk98 identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/legacy-lopet/lopet": {
      "get": {
        "operationId": "api_legacy-lopetlopet_get_collection",
        "tags": [
          "Legacy-Lopet"
        ],
        "responses": {
          "200": {
            "description": "Lopet collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lopet"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om hvert enkelt studietilbud pÃ¥ VGS",
        "description": "Retrieves the collection of Lopet resources.",
        "parameters": [
          {
            "name": "up",
            "in": "query",
            "description": "Comma-separated string of utdanningsprogramkode.\n        Example value: <ul><li><code>BA</code></li><li><code>EL</code></li><li><code>ST</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "trinn",
            "in": "query",
            "description": "Filter based on the year of the school. WARNING is not correct for programs going over multiple years\n         Expected values: <ul><li><code>1</code></li><li><code>2</code></li><li><code>3</code></li><li><code>4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "vilbli_org_id",
            "in": "query",
            "description": "A comma separated list of vilbli_org_ids (schools) in the form of vilbli_no_addr_xxxx.\n        Example values <ul><li><code>vilbi_no_addr_8711</code></li><li><code>vilbli_no_addr_8510</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "historical",
            "in": "query",
            "description": "Whether to fetch old lopet or new lopet",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/legacy-lopet/program": {
      "get": {
        "operationId": "api_legacy-lopetprogram_get_collection",
        "tags": [
          "Legacy-Lopet"
        ],
        "responses": {
          "200": {
            "description": "Program collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Program"
                  }
                }
              }
            }
          }
        },
        "summary": "Get program",
        "description": "Retrieves the collection of Program resources.",
        "parameters": [
          {
            "name": "grep10",
            "in": "query",
            "description": "Comma-separated string of programomradekode10 codes.\n        Example values: <ul><li><code>ELELE2N-HM</code></li><li><code>ELELE2N-HM,ELDEL2--ST</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "grep6",
            "in": "query",
            "description": "Comma-separated string of programomradekode6 codes.\n        Example values: <ul><li><code>ELELE1</code></li><li><code>ELELE1,BABAT1</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "historical",
            "in": "query",
            "description": "Whether to fetch old lopet or new lopet",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/legacy-lopet/sted": {
      "get": {
        "operationId": "api_legacy-lopetsted_get_collection",
        "tags": [
          "Legacy-Lopet"
        ],
        "responses": {
          "200": {
            "description": "Legacy_Lopet_Sted collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Legacy_Lopet_Sted"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir oversikt over sted og skoler",
        "description": "Retrieves the collection of Legacy_Lopet_Sted resources.",
        "parameters": [
          {
            "name": "up",
            "in": "query",
            "description": "Comma-separated string of utdanningsprogramkode.\n        Example value: <ul><li><code>BA</code></li><li><code>EL</code></li><li><code>ST</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "trinn",
            "in": "query",
            "description": "Filter based on the year of the school. WARNING is not correct for programs going over multiple years\n         Expected values: <ul><li><code>1</code></li><li><code>2</code></li><li><code>3</code></li><li><code>4</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "vilbli_org_id",
            "in": "query",
            "description": "A comma separated list of vilbli_org_ids (schools) in the form of vilbli_no_addr_xxxx.\n        Example values <ul><li><code>vilbi_no_addr_8711</code></li><li><code>vilbli_no_addr_8510</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "historical",
            "in": "query",
            "description": "Whether to fetch old lopet or new lopet",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/legacy-lopet/utdanningsprogram": {
      "get": {
        "operationId": "api_legacy-lopetutdanningsprogram_get_collection",
        "tags": [
          "Legacy-Lopet"
        ],
        "responses": {
          "200": {
            "description": "Utdanningsprogram collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utdanningsprogram"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om hvert utdanningsprogram.",
        "description": "Retrieves the collection of Utdanningsprogram resources.",
        "parameters": [
          {
            "name": "historical",
            "in": "query",
            "description": "Whether to fetch old lopet or new lopet",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/artikkel": {
      "get": {
        "operationId": "api_linjeartikkel_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_Artikkel collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Linje_Artikkel"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir alle artikkel entitetene.",
        "description": "Retrieves the collection of Linje_Artikkel resources.",
        "parameters": [
          {
            "name": "Kategori",
            "in": "query",
            "description": "Comma-separated string of categories.\n        <br> NB: Quotes are necessary for names with spaces eg: \"Om VGO\"",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Comma-separated string of fields.\n        Some example values: <ul><li><code>nid,tittel,ingress</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "Nid",
            "in": "query",
            "description": "Comma-separated string of nids.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/artikkel/{nid}": {
      "get": {
        "operationId": "api_linjeartikkel_nid_get",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_Artikkel resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linje_Artikkel"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir en individuell artikkel entitet",
        "description": "Retrieves a Linje_Artikkel resource.",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "description": "Linje_Artikkel identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/artikkel_kategori": {
      "get": {
        "operationId": "api_linjeartikkel_kategori_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_Artikkel_Kategori collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Linje_Artikkel_Kategori"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir alle kategoriene, og hvor mange av hver",
        "description": "Retrieves the collection of Linje_Artikkel_Kategori resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/faq": {
      "get": {
        "operationId": "api_linjefaq_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_FAQ collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Linje_FAQ"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir alle faq entitetene",
        "description": "Retrieves the collection of Linje_FAQ resources.",
        "parameters": [
          {
            "name": "Kategori",
            "in": "query",
            "description": "Comma-separated string of categories.\n        <br> NB: Quotes are necessary for names with spaces eg: \"Om VGO\"",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Comma-separated string of fields.\n        Some example values: <ul><li><code>nid,tittel,ingress</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "Nid",
            "in": "query",
            "description": "Comma-separated string of nids.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/faq/{nid}": {
      "get": {
        "operationId": "api_linjefaq_nid_get",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_FAQ resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linje_FAQ"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir en individuell artikkel entitet",
        "description": "Retrieves a Linje_FAQ resource.",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "description": "Linje_FAQ identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/faq_kategori": {
      "get": {
        "operationId": "api_linjefaq_kategori_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_FAQ_Kategori collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Linje_FAQ_Kategori"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir alle kategoriene, og hvor mange av hver",
        "description": "Retrieves the collection of Linje_FAQ_Kategori resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/kalender": {
      "get": {
        "operationId": "api_linjekalender_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_Kalender collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Linje_Kalender"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir alle kalender entitetene",
        "description": "Retrieves the collection of Linje_Kalender resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/kalender/{nid}": {
      "get": {
        "operationId": "api_linjekalender_nid_get",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Linje_Kalender resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Linje_Kalender"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir en individuell kalender entitet",
        "description": "Retrieves a Linje_Kalender resource.",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "description": "Linje_Kalender identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/programomrade": {
      "get": {
        "operationId": "api_linjeprogramomrade_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Programomrade collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Programomrade"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en nested liste med programomrader",
        "description": "Retrieves the collection of Programomrade resources.",
        "parameters": [
          {
            "name": "vg1",
            "in": "query",
            "description": "Should it only load vg1 classes\n        Some example values: <ul><li><code>true</code></li><li><code>false</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "Programomradekode10",
            "in": "query",
            "description": "Comma-separated string of vg1 programs\n        Some example values: <ul><li><code>BABAT1----</code></li><li><code>ELELE1----</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Comma-separated string of fields.\n        Some example values: <ul><li><code>programomrade_tittel,children</code></li><li><code>is_krysslop,children</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/programomrade/{programomradekode10}": {
      "get": {
        "operationId": "api_linjeprogramomrade_programomradekode10_get",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Programomrade resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Programomrade"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir et individuelt programomrÃ¥de",
        "description": "Retrieves a Programomrade resource.",
        "parameters": [
          {
            "name": "programomradekode10",
            "in": "path",
            "description": "Programomrade identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/linje/skoleliste": {
      "get": {
        "operationId": "api_linjeskoleliste_get_collection",
        "tags": [
          "Linje"
        ],
        "responses": {
          "200": {
            "description": "Skoleliste collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skoleliste"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en nested liste med fylker, med kommuner i fylket og skoler",
        "description": "Retrieves the collection of Skoleliste resources.",
        "parameters": [
          {
            "name": "Fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes.\n        Some example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/nav_export/programomraader": {
      "get": {
        "operationId": "api_nav_exportprogramomraader_get_collection",
        "tags": [
          "Nav-Export"
        ],
        "responses": {
          "200": {
            "description": "NavExportProgramomraade collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NavExportProgramomraade"
                  }
                }
              }
            }
          }
        },
        "summary": "Eksport til Nav med Programomraader og Nus",
        "description": "",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/onet/onet_by_occupation": {
      "get": {
        "operationId": "api_onetonet_by_occupation_get_collection",
        "tags": [
          "Onet"
        ],
        "responses": {
          "200": {
            "description": "Onet_by_occupation collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Onet_by_occupation.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Onet_by_occupation resources.",
        "description": "Retrieves the collection of Onet_by_occupation resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 10
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno ids. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "element_id",
            "in": "query",
            "description": "Multi-value string of element ids.\n          Some example values: <ul><li><code>4.A.1.a.1</code></li><li><code>2.A.1.a</code></li><li><code>2.C.1.a</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gt",
            "in": "query",
            "description": "Greater than value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lt",
            "in": "query",
            "description": "Less than value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "eq",
            "in": "query",
            "description": "Equals value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/onet/onet_by_value": {
      "get": {
        "operationId": "api_onetonet_by_value_get_collection",
        "tags": [
          "Onet"
        ],
        "responses": {
          "200": {
            "description": "Onet_by_value collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Onet_by_value.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Onet_by_value resources.",
        "description": "Retrieves the collection of Onet_by_value resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 10
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno ids. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "element_id",
            "in": "query",
            "description": "Multi-value string of element ids.\n          Some example values: <ul><li><code>4.A.1.a.1</code></li><li><code>2.A.1.a</code></li><li><code>2.C.1.a</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort on both importance and level\n          Allowed values: <ul><li><code>asc</code></li><li><code>desc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "value",
            "in": "query",
            "description": "Multi-value string of element id, filter type and value\n          Some example values: <ul><li><code>\"1.A.1.a.1 > 60\"</code></li><li><code>\"1.A.1.a.1 > 60\", \"1.A.1.a.2 > 50\"</code></li><li><code>\"1.A.1.a.1 > 60\", \"1.A.1.a.2 > 50\", \"1.A.1.a.3 < 30\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lonn",
            "in": "query",
            "description": "Filter on lÃ¸nn. Only get yrker with greater or equal value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/onet/onet_by_yrke": {
      "get": {
        "operationId": "api_onetonet_by_yrke_get_collection",
        "tags": [
          "Onet"
        ],
        "responses": {
          "200": {
            "description": "Onet_by_yrke collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Onet_by_yrke.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Onet_by_yrke resources.",
        "description": "Retrieves the collection of Onet_by_yrke resources.",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "description": "Multi-value string of element id, filter type and value\n          Some example values: <ul><li><code>\"1.A.1.a.1 > 60\"</code></li><li><code>\"1.A.1.a.1 > 60\", \"1.A.1.a.2 > 50\"</code></li><li><code>\"1.A.1.a.1 > 60\", \"1.A.1.a.2 > 50\", \"1.A.1.a.3 < 30\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lonn",
            "in": "query",
            "description": "Filter on lÃ¸nn. Only get yrker with greater or equal value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nus",
            "in": "query",
            "description": "Filter on utdanningsniva\n          Allowed values: <ul><li><code>nus0</code></li><li><code>nus4</code></li><li><code>nus5</code></li><li><code>nus6</code></li><li><code>nus7</code></li><li><code>nus8</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/onet/onet_types": {
      "get": {
        "operationId": "api_onetonet_types_get_collection",
        "tags": [
          "Onet"
        ],
        "responses": {
          "200": {
            "description": "Onet_types collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Onet_types.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Onet_types resources.",
        "description": "Retrieves the collection of Onet_types resources.",
        "parameters": [
          {
            "name": "onet_type",
            "in": "query",
            "description": "Multi-value string of onet types.\n          Expected values: <ul><li><code>abilities</code></li><li><code>work_activities</code></li><li><code>skills</code></li><li><code>knowledge</code></li><li><code>work_styles</code></li><li><code>work_values</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/onet/yrker": {
      "get": {
        "operationId": "api_onetyrker_get_collection",
        "tags": [
          "Onet"
        ],
        "responses": {
          "200": {
            "description": "Onet_by_yrker collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Onet_by_yrker.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Onet_by_yrker resources.",
        "description": "Retrieves the collection of Onet_by_yrker resources.",
        "parameters": [
          {
            "name": "programomradekode6",
            "in": "query",
            "description": "String of programomradekode6 koder.\n          Example values: <ul><li><code>BABAT1</code></li><li><code>ELELE1</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanning_kommune",
            "in": "query",
            "description": "String of municipality id (kommunenummer) of an education.\n          Example values: <ul><li><code>0301</code></li><li><code>5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrke_kommune",
            "in": "query",
            "description": "String of Norwegian Municipality ID (kommunenummer) of an occupation.\n          Example values: <ul><li><code>0301</code></li><li><code>5501</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "interesser",
            "in": "query",
            "description": "Multivalue string of interesser.\n          Example values: <ul><li><code>Helse</code></li><li><code>Mennesker</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "value",
            "in": "query",
            "description": "Multi-value string of element id, filter type and value\n          Some example values: <ul><li><code>\"1.A.1.a.1 > 60\"</code></li><li><code>\"1.A.1.a.1 > 60\", \"1.A.1.a.2 > 50\"</code></li><li><code>\"1.A.1.a.1 > 60\", \"1.A.1.a.2 > 50\", \"1.A.1.a.3 < 30\"</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sortering",
            "in": "query",
            "description": "Sort on name, larlinger, lonn or aarsverk\n          Allowed values: <ul><li><code>larlinger:asc</code></li><li><code>aarsverk:desc</code></li><li><code>tittel:asc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "is_onet",
            "in": "query",
            "description": "Include only ONET professions. Default is true. Set to false to include all",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/onet/yrker_interesse": {
      "get": {
        "operationId": "api_onetyrker_interesse_get_collection",
        "tags": [
          "Onet"
        ],
        "responses": {
          "200": {
            "description": "Yrker_interesse collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Yrker_interesse"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Yrker_interesse resources.",
        "description": "Retrieves the collection of Yrker_interesse resources.",
        "parameters": [
          {
            "name": "element_id",
            "in": "query",
            "description": "Multi-value string of element ids.\n          Some example values: <ul><li><code>4.A.1.a.1</code></li><li><code>2.A.1.a</code></li><li><code>2.C.1.a</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/emne": {
      "get": {
        "operationId": "api_ovttasemne_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasEmne collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasEmne"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasEmne resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "Prefix\n        Some example values: <ul><li><code>0|</code></li><li><code>1|</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/innholdstype": {
      "get": {
        "operationId": "api_ovttasinnholdstype_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasInnholdstype collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasInnholdstype"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasInnholdstype resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/language": {
      "get": {
        "operationId": "api_ovttaslanguage_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasLanguage collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasLanguage"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasLanguage resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/nivaa": {
      "get": {
        "operationId": "api_ovttasnivaa_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasNivaa collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasNivaa"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasNivaa resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/result": {
      "get": {
        "operationId": "api_ovttasresult_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasSearchResult collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasSearchResult"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasSearchResult resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Hvilket sidenummer Ã¥ hente\n        Some example values: <ul><li><code>1</code></li><li><code>2</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "rows",
            "in": "query",
            "description": "Hvor mange rader Ã¥ hente\n        Some example values: <ul><li><code>20</code></li><li><code>40</code></li><li><code>60</code></li><li><code>80</code></li><li><code>100</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Hvilken mÃ¥te Ã¥ sortere pÃ¥\n        Some example values: <ul><li><code>date</code></li><li><code>rel</code></li><li><code>abc</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/suggest": {
      "get": {
        "operationId": "api_ovttassuggest_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasSuggest collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasSuggest"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasSuggest resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/ovttas/tilgjengelighet": {
      "get": {
        "operationId": "api_ovttastilgjengelighet_get_collection",
        "tags": [
          "Ovttas"
        ],
        "responses": {
          "200": {
            "description": "OvttasTilgjengelighet collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OvttasTilgjengelighet"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir sÃ¸keresultat fra ovttas",
        "description": "Retrieves the collection of OvttasTilgjengelighet resources.",
        "parameters": [
          {
            "name": "emne",
            "in": "query",
            "description": "Emne\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "spraak",
            "in": "query",
            "description": "SprÃ¥kfasett\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Hvilket sprÃ¥k Ã¥ hente\n        Some example values: <ul><li><code>nb</code></li><li><code>se</code></li><li><code>smj</code></li><li><code>sma</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nivaa",
            "in": "query",
            "description": "Hvilket nivÃ¥ Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "q",
            "in": "query",
            "description": "Hva Ã¥ sÃ¸ke pÃ¥\n        Some example values: <ul><li><code>samisk</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "term",
            "in": "query",
            "description": "Terms\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tilgjengelighet",
            "in": "query",
            "description": "Tilgjengelighet tid\n        Some example values: <ul><li><code></code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/personalisering/malgruppe": {
      "get": {
        "operationId": "api_personaliseringmalgruppe_get_collection",
        "tags": [
          "Personalisering"
        ],
        "responses": {
          "200": {
            "description": "Malgruppe collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Malgruppe"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Malgruppe resources.",
        "description": "Retrieves the collection of Malgruppe resources.",
        "parameters": [
          {
            "name": "malgruppe",
            "in": "query",
            "description": "Kommaseparert string med mÃ¥lgrupper. Eksempelverdier: <ul><li><code>ungdomskoleeleven</code></li><li><code>yrkesfageleven,voksen_uten_fagbrev</code></li><li><code>Yrkesfageleven,studenten</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "viktighetsgrad",
            "in": "query",
            "description": "Kommaseparert string med viktighetsgrader. Gyldige verdier: <ul><li><code>Alle</code></li><li><code>SvÃ¦rt viktig</code></li><li><code>Ganske viktig</code></li><li><code>Litt viktig</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innholdstype",
            "in": "query",
            "description": "Kommaseparert string med innholdstyper. Eksempelverdier: <ul><li><code>Alle</code></li><li><code>Artikkel</code></li><li><code>Yrke</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsmarked/i10": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsmarkedi10_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i10 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i10"
                  }
                }
              }
            }
          }
        },
        "summary": "Andelen helt og delvis ledige i arbeidmarkedet.",
        "description": "Returns a collection of i10 objects alongside a faceted list of matching fields.\n        Requests with more than 25 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "year",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "month",
            "in": "query",
            "description": "Comma-separated string of months to filter results by. Months are mapped 1-12,\n        starting with January. Example values: <ul><li><code>1</code></li><li><code>2,3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsmarked/i11": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsmarkedi11_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i11 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i11"
                  }
                }
              }
            }
          }
        },
        "summary": "Andelen helt ledige per utlyste stilling.",
        "description": "Returns a collection of i11 objects alongside a faceted list of matching fields.\n        Requests with more than 25 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "year",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "month",
            "in": "query",
            "description": "Comma-separated string of months to filter results by. Months are mapped 1-12,\n        starting with January. Example values: <ul><li><code>1</code></li><li><code>2,3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsmarked/i6": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsmarkedi6_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i6 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i6"
                  }
                }
              }
            }
          }
        },
        "summary": "Sysselsatte etter nÃ¦ring og region.",
        "description": "Returns a collection of i6 objects alongside a faceted list of matching fields.\n        Requests with more than 25 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nace",
            "in": "query",
            "description": "Comma-separated string of NACE2007 code intervals. Example values: <ul><li><code>01-03</code></li><li><code>49-53</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsmarked/i7": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsmarkedi7_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i7 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i7"
                  }
                }
              }
            }
          }
        },
        "summary": "Sysselsatte innvandrere etter innvandringsgrunn.",
        "description": "Returns a collection of i7 objects alongside a faceted list of matching fields.\n        Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to both if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innvandrerkategori",
            "in": "query",
            "description": "Comma separated string of innvandrerkategori codes, describing the reason for immigrating. <ul><li><code>TOT: Alle</code></li><li><code>AND: Andre grunner</code></li><li><code>ARB: Arbeidsinnvandrere</code></li><li><code>FAM: Familieinnvandrede</code></li><li><code>FLY: Flyktninger</code></li><li><code>UOP: Uoppgitt</code></li><li><code>UTD: Utdanning (inkl. au-pair)</code></li></ul> Examples: <ul><li><code>TOT</code></li><li><code>UTD,FLY,TOT</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsmarked/i8": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsmarkedi8_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i8 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i8"
                  }
                }
              }
            }
          }
        },
        "summary": "LÃ¸nnstakere uten fast bosted (utenlandske lÃ¸nnstakere pÃ¥ midlertidig opphold) per 1000 sysselsatt.",
        "description": "Returns a collection of i8 objects alongside a faceted list of matching fields.\n        Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nace",
            "in": "query",
            "description": "Comma-separated string of NACE2007 code intervals. Example values: <ul><li><code>01-03</code></li><li><code>49-53</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsstyrker/i1": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsstyrkeri1_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i1 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i1"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel av befolkningen som er en del av arbeidsstyrken.",
        "description": "Returns a collection of i1 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>15+</code></li><li><code>15-29</code></li><li><code>30-61</code></li><li><code>62+</code></li></ul> Examples: <ul><li><code>15+</code></li><li><code>15-29,30-61</code></li><li><code>62+,15-29</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innvandrerkategori",
            "in": "query",
            "description": "Comma separated string of innvandrerkategori codes. <ul><li><code>A: Immigrants + Non-immigrants</code></li><li><code>U: Non-immigrants only</code></li><li><code>I: Immigrants only</code></li></ul> Examples: <ul><li><code>A</code></li><li><code>A,U</code></li><li><code>I,U</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsstyrker/i2": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsstyrkeri2_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i2 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i2"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel av befolkningen fordelt pÃ¥ aldersgrupper.",
        "description": "Returns a collection of i2 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>0-5</code></li><li><code>16-19</code></li><li><code>20-66</code></li><li><code>6-15</code></li><li><code>67+</code></li></ul> Examples: <ul><li><code>16-19</code></li><li><code>20-66,67+</code></li><li><code>62+,0-5</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsstyrker/i3": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsstyrkeri3_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i3 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i3"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel sysselsatte med 100 % stilling.",
        "description": "Returns a collection of i3 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>15-74</code></li><li><code>20-66</code></li></ul> Examples: <ul><li><code>15-74</code></li><li><code>20-66,15-74</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/arbeidsstyrker/i4i5": {
      "get": {
        "operationId": "api_regionalkompetansearbeidsstyrkeri4i5_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i4i5 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i4i5"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel sysselsatte med videregÃ¥ende som hÃ¸yeste utdanningsnivÃ¥.",
        "description": "Returns a collection of i4 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>15-74</code></li><li><code>20-66</code></li></ul> Examples: <ul><li><code>15-74</code></li><li><code>20-66,15-74</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsniva",
            "in": "query",
            "description": "Comma separated string of education groups to base aggregate values and object ratios on. This\n        filter does not affect the contents of individual data objects. Valid values: <ul><li><code>GSK: Grunnskole</code></li><li><code>VGS: VideregÃ¥ende Skole</code></li><li><code>HOK: HÃ¸yere utdanning, kort (t.o.m 4 Ã¥r)</code></li><li><code>HOL: HÃ¸yere utdanning, lang (4+ Ã¥r)</code></li><li><code>UOP: Uopgitt eller ukjent utdanningsnivÃ¥</code></li></ul> Examples: <ul><li><code>GSK, VGS</code></li><li><code>HOK, GSK, VGS</code></li></ul> Defaults to all groups if not present",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to both if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/kompetansetilgang/i13i14i15": {
      "get": {
        "operationId": "api_regionalkompetansekompetansetilgangi13i14i15_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i13i14i15 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i13i14i15"
                  }
                }
              }
            }
          }
        },
        "summary": "Befolkningen 16 Ã¥r og over etter kjÃ¸nn og utdanningsnivÃ¥.",
        "description": "Returns a collection of i13i14i15 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsniva",
            "in": "query",
            "description": "Comma separated string of education groups to base aggregate values and object ratios on. This\n        filter does not affect the contents of individual data objects. Valid values: <ul><li><code>GSK: Grunnskole</code></li><li><code>VGS: VideregÃ¥ende Skole</code></li><li><code>FSK: Fagskole</code></li><li><code>HOK: HÃ¸yere utdanning, kort (t.o.m 4 Ã¥r)</code></li><li><code>HOL: HÃ¸yere utdanning, lang (4+ Ã¥r)</code></li></ul> Examples: <ul><li><code>GSK, VGS</code></li><li><code>HOK, GSK, VGS</code></li></ul> Defaults to all groups if not present",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/kompetansetilgang/i16": {
      "get": {
        "operationId": "api_regionalkompetansekompetansetilgangi16_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i16 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i16"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel i videregÃ¥ende opplÃ¦ring pÃ¥  yrkesfag.",
        "description": "Returns a collection of i16 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/kompetansetilgang/i17": {
      "get": {
        "operationId": "api_regionalkompetansekompetansetilgangi17_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i17 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i17"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel sÃ¸kere som har fÃ¥tt godkjente lÃ¦rekontrakter innen utgangen av Ã¥ret.",
        "description": "Returns a collection of i17 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsprogram",
            "in": "query",
            "description": "Comma separated string of utdanningsprogram codes. <ul><li><code>TOT: Alle utdanningsprogram</code></li><li><code>BA: Bygg- og anleggsteknikk</code></li><li><code>DH: Design og hÃ¥ndverk</code></li><li><code>EL: Elektro og datateknologi</code></li><li><code>FD: FrisÃ¸r, blomster, interiÃ¸r og eksponeringsdesign</code></li><li><code>HS: Helse- og oppvekstfag</code></li><li><code>DT: HÃ¥ndverk, design og produktutvikling</code></li><li><code>IM: Informasjonsteknologi og medieproduksjon</code></li><li><code>MK: Medier og kommunikasjon (gammel ordning)</code></li><li><code>NA: Naturbruk</code></li><li><code>RM: Restaurant- og matfag</code></li><li><code>SR: Salg, service og reiseliv</code></li><li><code>SS: Service og samferdsel</code></li><li><code>TP: Teknologi- og industrifag</code></li></ul> Examples: <ul><li><code>BA</code></li><li><code>HS</code></li><li><code>HS,BA</code></li></ul> Defaults to showing all codes if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/kompetansetilgang/i18": {
      "get": {
        "operationId": "api_regionalkompetansekompetansetilgangi18_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "fylkenr": {
                        "type": "string",
                        "description": "Numerical code for the region."
                      },
                      "regionstype": {
                        "type": "string"
                      },
                      "dato": {
                        "type": "string"
                      },
                      "studiested": {
                        "type": "string"
                      },
                      "studieplasser": {
                        "type": "integer"
                      },
                      "forstevalg": {
                        "type": "integer"
                      },
                      "ratio": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Andelen fÃ¸rstevalgssÃ¸kere i fagskole og hÃ¸yere utdanning per studieplass etter lÃ¦restedsfylke",
        "description": "Returns a collection of i18 objects alongside faceting data and aggregates.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "studiested",
            "in": "query",
            "description": "Comma separated string of utdanningsprogram codes. <ul><li><code>UH: Universitet og HÃ¸yskole</code></li><li><code>FS: Fagskole</code></li></ul> Examples: <ul><li><code>UH</code></li><li><code>FS</code></li><li><code>UH,FS</code></li></ul> Defaults to showing all codes if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/kompetansetilgang/i19i20i21i22": {
      "get": {
        "operationId": "api_regionalkompetansekompetansetilgangi19i20i21i22_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i19i20i21i22 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i19i20i21i22"
                  }
                }
              }
            }
          }
        },
        "summary": "Kompetansebygging i arbeidslivet.",
        "description": "Returns a collection of i19i20i21i22 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "laeringstype",
            "in": "query",
            "description": "Comma-separated string learning method groupings to filter results by. Valid values: <ul><li><code>TOT: I alt</code></li><li><code>FUD: Formell utdanning</code></li><li><code>FVU: Formell videreutdanning</code></li><li><code>IFO: Ikke-formell opplÃ¦ring</code></li><li><code>LIA: LÃ¦ringsintensivt arbeid</code></li><li><code>ING: Hverken deltatt i formell eller ikke-formell opplÃ¦ring</code></li></ul> Defaults to all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/stedsvelger": {
      "get": {
        "operationId": "api_regionalkompetansestedsvelger_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "regionnummer": {
                        "type": "string",
                        "description": "Numerical code for the region."
                      },
                      "regionnavn": {
                        "type": "string",
                        "description": "Common name of the region."
                      },
                      "gyldig_fra": {
                        "type": "string",
                        "description": "Start date of active period (inclusive). A value of '1970-01-01' means a region existed before data about transitions exists."
                      },
                      "gyldig_til": {
                        "type": "string",
                        "description": "End date of active period (inclusive). A value of '9999-12-31' means there is no known end date for the active period"
                      },
                      "gyldig": {
                        "type": "boolean",
                        "description": "Indicates if the region is currently in use."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Stedsvelger for regionalkompetanse.",
        "description": "Returns an overview of region names and codes, alongside the time period they are or were valid for.",
        "parameters": [
          {
            "name": "gyldig_fra",
            "in": "query",
            "description": "Lower bound (inclusive) for 'gyldig_fra' as a date in YYYY-MM-DD format. <ul><li><code>2020-01-01</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gyldig_til",
            "in": "query",
            "description": "Upper bound (inclusive) for 'gyldig_til' as a date in YYYY-MM-DD format. <ul><li><code>2024-01-01</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionnavn",
            "in": "query",
            "description": "Comma-separated string of region names to filter results by. Example values: <ul><li><code>Troms</code></li><li><code>Oslo,Troms</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionkode",
            "in": "query",
            "description": "Comma-separated string of region codes to filter results by. Example values: <ul><li><code>03</code></li><li><code>11,03</code></li><li><code>50,0301</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "vis_utvidet",
            "in": "query",
            "description": "Boolean value on whether to return historical and future regions in the result. False by default.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/tilknytning/i24": {
      "get": {
        "operationId": "api_regionalkompetansetilknytningi24_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i24 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i24"
                  }
                }
              }
            }
          }
        },
        "summary": "Andelen sysselsatte etter alder og utdanningsnivÃ¥.",
        "description": "Returns a collection of i24 objects alongside a faceted list of matching fields. Requests with more than 25 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>15-24</code></li><li><code>15-74</code></li><li><code>20-66</code></li><li><code>25-29</code></li><li><code>30-39</code></li><li><code>40-54</code></li><li><code>55-61</code></li><li><code>62-66</code></li><li><code>67-74</code></li></ul> Examples: <ul><li><code>15-24</code></li><li><code>15-74,40-54</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsniva",
            "in": "query",
            "description": "Comma separated string of education groups to filter resylts by. Valid values: <ul><li><code>GSK: Grunnskole</code></li><li><code>VGS: VideregÃ¥ende Skole</code></li><li><code>HOK: HÃ¸yere utdanning, kort (t.o.m 4 Ã¥r)</code></li><li><code>HOL: HÃ¸yere utdanning, lang (4+ Ã¥r)</code></li><li><code>UOP: Uoppgitt utdanning</code></li><li><code>ALL: Alle utdanningsnivÃ¥er</code></li></ul> Examples: <ul><li><code>GSK,VGS</code></li><li><code>HOK,GSK,VGS</code></li></ul> Defaults to all groups if not present",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/tilknytning/i25i26": {
      "get": {
        "operationId": "api_regionalkompetansetilknytningi25i26_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i25i26 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i25i26"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel av befolkningen som er utenfor arbeid, utdanning og arbeidsmarkedstiltak",
        "description": "Returns a collection of i25i26 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>15+</code></li><li><code>15-29</code></li><li><code>30-61</code></li><li><code>62+</code></li></ul> Examples: <ul><li><code>15+</code></li><li><code>15-29,30-61</code></li><li><code>62+,15-29</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innvandrerkategori",
            "in": "query",
            "description": "Comma separated string of innvandrerkategori codes. <ul><li><code>A: Immigrants + Non-immigrants</code></li><li><code>U: Non-immigrants only</code></li><li><code>I: Immigrants only</code></li></ul> Examples: <ul><li><code>A</code></li><li><code>A,U</code></li><li><code>I,U</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/tilknytning/i27": {
      "get": {
        "operationId": "api_regionalkompetansetilknytningi27_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i27 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i27"
                  }
                }
              }
            }
          }
        },
        "summary": "Mottakere av ufÃ¸retrygd som andel av befolkningen 18-67 Ã¥r  (Aldersstandardiserte tall)",
        "description": "Returns a collection of i27 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kvartal",
            "in": "query",
            "description": "Comma-separated string quarter values to filter results by. Valid values: <ul><li><code>1</code></li><li><code>2</code></li><li><code>3</code></li><li><code>4</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/tilknytning/i29": {
      "get": {
        "operationId": "api_regionalkompetansetilknytningi29_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i29 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i29"
                  }
                }
              }
            }
          }
        },
        "summary": "Andel som bor i husholdninger med lavinntekt.",
        "description": "Returns a collection of i29 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer). Example values: <ul><li><code>1554</code></li><li><code>1554,1122</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>ALL</code></li><li><code>00-17</code></li><li><code>18-34</code></li><li><code>35-49</code></li><li><code>50-66</code></li><li><code>67+</code></li></ul> Examples: <ul><li><code>00-17</code></li><li><code>50-66,00-17</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/tilknytning/i30i31": {
      "get": {
        "operationId": "api_regionalkompetansetilknytningi30i31_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i30i31 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i30i31"
                  }
                }
              }
            }
          }
        },
        "summary": "Ikke fullfÃ¸rt videregÃ¥ende opplÃ¦ring",
        "description": "Returns a collection of i30i31 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsprogram",
            "in": "query",
            "description": "Comma separated string of utdanningsprogram codes. <ul><li><code>A: Alle</code></li><li><code>Y: Yrkesfag</code></li><li><code>S: Studieforberedende</code></li></ul> Examples: <ul><li><code>A</code></li><li><code>Y</code></li><li><code>S,Y</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kjonn",
            "in": "query",
            "description": "Comma-separated string of gender groupings to filter results by. Valid values: <ul><li><code>M</code></li><li><code>F</code></li><li><code>B</code></li></ul> Defaults to all if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/regionalkompetanse/videreutdanning/i23": {
      "get": {
        "operationId": "api_regionalkompetansevidereutdanningi23_get_collection",
        "tags": [
          "Regionalkompetanse"
        ],
        "responses": {
          "200": {
            "description": "i23 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/i23"
                  }
                }
              }
            }
          }
        },
        "summary": "OppnÃ¥tte fag-og-svennebrev av voksne (25 Ã¥r og over) per 1000 sysselsatte.",
        "description": "Returns a collection of i23 objects alongside a faceted list of matching fields. Requests with more than 10 000 results are rejected.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes. Example values: <ul><li><code>50</code></li><li><code>50,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "regionstype",
            "in": "query",
            "description": "Comma separated string of region types to filter results by. Valid values: <ul><li><code>L</code></li><li><code>F</code></li><li><code>K</code></li><li><code>E</code></li></ul> Examples: <ul><li><code>L</code></li><li><code>L,F</code></li></ul> Defaults to 'L,F,K' if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dato",
            "in": "query",
            "description": "Comma-separated string of years to filter results by. Example values: <ul><li><code>2019</code></li><li><code>2020,2021</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "aldersgruppe",
            "in": "query",
            "description": "Comma separated string of age groups to filter results by. Valid values: <ul><li><code>15-19</code></li><li><code>15-74</code></li><li><code>20-24</code></li><li><code>25-39</code></li><li><code>40-54</code></li><li><code>55-66</code></li><li><code>67-74</code></li></ul> Examples: <ul><li><code>15-19</code></li><li><code>40-54,55-66</code></li><li><code>67-74,15-19</code></li></ul> Defaults to showing all groups if not present.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "facet_only",
            "in": "query",
            "description": "Return faceting data only when set to true, ignoring the limit on returned values. Defaults to true if no fields are set.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/arbeidsledighet": {
      "get": {
        "operationId": "api_sammenligningarbeidsledighet_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Arbeidsledighet collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Arbeidsledighet"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om arbeidsledighet for yrker/utdanninger.",
        "description": "Retrieves the collection of Arbeidsledighet resources.",
        "parameters": [
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/arbeidsmarked": {
      "get": {
        "operationId": "api_sammenligningarbeidsmarked_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Arbeidsmarked collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Arbeidsmarked"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om arbeidsmarkedet for alle yrker/utdanninger.",
        "description": "Retrieves the collection of Arbeidsmarked resources.",
        "parameters": [
          {
            "name": "nus",
            "in": "query",
            "description": "Multi-valued string.\n        Example value: <ul><li><code>661120</code></li><li><code>457129</code></li><li><code>754115</code></li><li><code>641115</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "retning",
            "in": "query",
            "description": "Multi-valued string.\n        Expected value: <ul><li><code>uno_id2styrk08</code></li><li><code>uno_id2nus</code></li><li><code>uno_id2nus_kortnavn</code></li><li><code>nus_kortnavn2styrk08</code></li><li><code>nus2styrk08</code></li><li><code>styrk082nus</code></li><li><code>styrk082nus_kort</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk08",
            "in": "query",
            "description": "Comma-separated string of yrkeskode_styrk08.\n        Example values:  <ul><li><code>2221</code></li><li><code>5223</code></li><li><code>0110</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/entrepenorskap": {
      "get": {
        "operationId": "api_sammenligningentrepenorskap_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Entrepenorskap collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entrepenorskap"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om entrepenÃ¸rskap",
        "description": "Retrieves the collection of Entrepenorskap resources.",
        "parameters": [
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/fellesstyrk98": {
      "get": {
        "operationId": "api_sammenligningfellesstyrk98_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "FellesStyrk98 collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FellesStyrk98"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir alle yrker som deler en eller flere styrk98-koder med valgt yrke.",
        "description": "Retrieves the collection of FellesStyrk98 resources.",
        "parameters": [
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/interesser": {
      "get": {
        "operationId": "api_sammenligninginteresser_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Interesser collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interesser"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over alle interessen yrkene og utdanningene er tagget med",
        "description": "Retrieves the collection of Interesser resources.",
        "parameters": [
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innholdstype",
            "in": "query",
            "description": "Single value string.\n        Expected value: <ul><li><code>yrke</code></li><li><code>utdanningsbeskrivelse</code></li><li><code>styrk08</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/lonn": {
      "get": {
        "operationId": "api_sammenligninglonn_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Lonn collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lonn"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om lÃ¸nn for yrke/utdanninger basert pÃ¥ ansiennitet, alder, sektor og arbeidstid",
        "description": "Retrieves the collection of Lonn resources.",
        "parameters": [
          {
            "name": "arbeidstid",
            "in": "query",
            "description": "Single value string.\n        Expected value: <ul><li><code>H</code></li><li><code>D</code></li><li><code>A</code></li></ul>\n        H â Heltid, D â Deltid, A â BÃ¥de deltid og heltid",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sektor",
            "in": "query",
            "description": "Single values string\n        Expected value: <ul><li><code>S</code></li><li><code>K</code></li><li><code>A</code></li><li><code>P</code></li></ul>\n        A â Alle sektorer, S â Sektor, K â (fylkes-)kommunal, P â Privat",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "historie",
            "in": "query",
            "description": "Boolean to show historisk data",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/main": {
      "get": {
        "operationId": "api_sammenligningmain_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Main collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Main"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over metadata og id-er tilknyttet hver uno_id",
        "description": "Retrieves the collection of Main resources.",
        "parameters": [
          {
            "name": "felt",
            "in": "query",
            "description": "Multi-valued string. All felt in a main document.\n        Some example values: <ul><li><code>nus</code></li><li><code>innholdstype</code></li><li><code>styrk08</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innholdstype",
            "in": "query",
            "description": "Single value string.\n        Expected value: <ul><li><code>yrke</code></li><li><code>utdanningsbeskrivelse</code></li><li><code>styrk08</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "interesser",
            "in": "query",
            "description": "Comma-separated string of interesser. > NB: Quotes are necessary for names with spaces eg: \"Olje, gass og energi\"\\. Can't use space after each interesse. \n        Example value: <ul><li><code>Barn</code></li><li><code>Helse</code></li><li><code>Mennesker</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "vis_alt",
            "in": "query",
            "description": "If false or default: Show only list of uno_ids selected for display in sammenlign.utdanning.no.\n        If true: Show even those uno_ids unpublished from sammenlign.utdanning.no.\n        Only takes one value.\n        Expected value: <ul><li><code>True</code></li><li><code>False</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "vis_kart",
            "in": "query",
            "description": "Filter occupations (uno_id) which are not relevant for display in map changes in Norwegian labour market. Comma separated.\n        Expected value: <ul><li><code>yes</code></li><li><code>not_q</code></li><li><code>no</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/stillinger-yrke": {
      "get": {
        "operationId": "api_sammenligningstillinger-yrke_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "StillingerYrke collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StillingerYrke"
                  }
                }
              }
            }
          }
        },
        "summary": "Oversikt over NUS koder og hvor mange som er utdannet som det",
        "description": "Retrieves the collection of StillingerYrke resources.",
        "parameters": [
          {
            "name": "group_kortnavn",
            "in": "query",
            "description": "Summer antall gruppert pÃ¥ feltet nus_kortnavn? Dette vil slÃ¥ sammen utdanninger innen samme fagomrÃ¥de pÃ¥ tvers av reformer og navneendringer.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk08",
            "in": "query",
            "description": "Comma-separated string of yrkeskode_styrk08.\n        Example values:  <ul><li><code>2221</code></li><li><code>5223</code></li><li><code>0110</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/suggest": {
      "get": {
        "operationId": "api_sammenligningsuggest_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Suggest collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggest"
                  }
                }
              }
            }
          }
        },
        "summary": "Autosuggest for sÃ¸ket pÃ¥ sammenlign.utdanning.no",
        "description": "Retrieves the collection of Suggest resources.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Single valued string. Used to search for parts of a title.\n        Example value: <ul><li><code>adv</code></li><li><code>Ã¸ko</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "innholdstype",
            "in": "query",
            "description": "Single value string.\n        Expected value: <ul><li><code>yrke</code></li><li><code>utdanningsbeskrivelse</code></li><li><code>styrk08</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/utdanning-yrke-rr": {
      "get": {
        "operationId": "api_sammenligningutdanning-yrke-rr_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Utdanning_Yrke_RR collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utdanning_Yrke_RR"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir relativ risiko for en kombinasjon nus-styrk08",
        "description": "Retrieves the collection of Utdanning_Yrke_RR resources.",
        "parameters": [
          {
            "name": "nus",
            "in": "query",
            "description": "Multi-valued string.\n        Example value: <ul><li><code>661120</code></li><li><code>457129</code></li><li><code>754115</code></li><li><code>641115</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk08",
            "in": "query",
            "description": "Comma-separated string of yrkeskode_styrk08.\n        Example values:  <ul><li><code>2221</code></li><li><code>5223</code></li><li><code>0110</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/utdanning2yrke": {
      "get": {
        "operationId": "api_sammenligningutdanning2yrke_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Utdanning2yrke collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utdanning2yrke"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om utdanninger personer har tatt for hvert yrke",
        "description": "Retrieves the collection of Utdanning2yrke resources.",
        "parameters": [
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dataset",
            "in": "query",
            "description": "Single value string. Used to get a total dataset instead of top 5.\n        Expected value: <ul><li><code>total</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/utdanningsniva": {
      "get": {
        "operationId": "api_sammenligningutdanningsniva_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Utdanningsniva collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utdanningsniva"
                  }
                }
              }
            }
          }
        },
        "summary": "Oversikt over utdanningskoder (6-siffret NUS) og hvor mange personer som har denne NUS-koden som sin hÃ¸yste registrere utdanning",
        "description": "Retrieves the collection of Utdanningsniva resources.",
        "parameters": [
          {
            "name": "nus",
            "in": "query",
            "description": "Multi-valued string.\n        Example value: <ul><li><code>661120</code></li><li><code>457129</code></li><li><code>754115</code></li><li><code>641115</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "group_kortnavn",
            "in": "query",
            "description": "Summer antall gruppert pÃ¥ feltet nus_kortnavn? Dette vil slÃ¥ sammen utdanninger innen samme fagomrÃ¥de pÃ¥ tvers av reformer og navneendringer.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/yrke": {
      "get": {
        "operationId": "api_sammenligningyrke_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Yrke collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Yrke.jsonld-yrke.collection"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Yrke resources.",
        "description": "Retrieves the collection of Yrke resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "styrk98[]",
            "in": "query",
            "description": "Comma-separated string of yrkeskode_styrk98.\n        Example values:  <ul><li><code>1210188</code></li><li><code>4113103</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "deepObject",
            "explode": true,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/yrke/{uno_id}": {
      "get": {
        "operationId": "api_sammenligningyrke_uno_id_get",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Yrke resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Yrke.jsonld-yrke.item"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Yrke resource.",
        "description": "Retrieves a Yrke resource.",
        "parameters": [
          {
            "name": "uno_id",
            "in": "path",
            "description": "Yrke identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/sammenligning/yrke2utdanning": {
      "get": {
        "operationId": "api_sammenligningyrke2utdanning_get_collection",
        "tags": [
          "Sammenligning"
        ],
        "responses": {
          "200": {
            "description": "Yrke2utdanning collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Yrke2utdanning"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en informasjon om hvilke yrker personer dom har tatt en gitt utdanning.",
        "description": "Retrieves the collection of Yrke2utdanning resources.",
        "parameters": [
          {
            "name": "sprak",
            "in": "query",
            "description": "Only takes one value.\n        Expected value: <ul><li><code>nb</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Multi-value string of uno_id values. Must start with either 'y_' or 'u_'.\n          Some example values: <ul><li><code>y_advokat</code></li><li><code>y_adjunkt</code></li><li><code>u_medisin</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "dataset",
            "in": "query",
            "description": "Single value string. Used to get a total dataset instead of top 5.\n        Expected value: <ul><li><code>total</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/search/facet": {
      "get": {
        "operationId": "api_searchfacet_get_collection",
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "SearchFacet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SearchFacet.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Brukt i sÃ¸ket pÃ¥ utdanning.no",
        "description": "Retrieves the collection of SearchFacet resources.",
        "parameters": [
          {
            "name": "facet",
            "in": "query",
            "description": "The facet name.<br>The supported values, and their equivalent indexed field ids are: <ul><li><code>hovedfasett</code>: <samp>sm_facet_type</samp></li><li><code>innholdstype</code>: <samp>ss_type_tittel</samp></li><li><code>omrade</code>: <samp>sm_facet_omrade</samp></li><li><code>utdanningsniva</code>: <samp>sm_facet_utd_niva</samp></li><li><code>utdanningsprogram</code>: <samp>sm_facet_utdanningsprogram</samp></li><li><code>interesse</code>: <samp>sm_facet_interesse</samp></li><li><code>linje</code>: <samp>sm_facet_linje</samp></li><li><code>organisasjon</code>: <samp>sm_facet_organisasjon</samp></li><li><code>fagomrade</code>: <samp>sm_facet_fagomrade</samp></li><li><code>niva</code>: <samp>sm_facet_niva</samp></li><li><code>studieform</code>: <samp>sm_facet_studieform</samp></li><li><code>fagretning</code>: <samp>ss_facet_fagretning</samp></li><li><code>sektor</code>: <samp>sm_facet_sektor</samp></li><li><code>artikkeltype</code>: <samp>sm_facet_artikkeltype</samp></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "query_value",
            "in": "query",
            "description": "Sets the query search value. If multiple fields are set, the same value will apply to all. Defaults to <code>*</code>.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "query_fields[]",
            "in": "query",
            "description": "Sets the query field(s) to run the search on. Defaults to <code>tm_X3b_nb_title</code>, <code>tm_X3b_nb_ingress</code>, <code>tm_X3b_nb_beskrivelse</code>, <code>tm_X3b_nb_high_importance</code>, <code>tm_X3b_nb_medium_importance</code>, <code>tm_X3b_nb_alltext</code>, <code>tcedgestringm_X3b_nb_title_starts_with</code>, <code>tcngramm_X3b_nb_title_wildcard</code>, <code>tcngramm_X3b_nb_other_wildcard</code>.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "innholdstype",
            "in": "query",
            "description": "Filter the query by <i>innholdstype</i> (Drupal's entity type machine name). Use a comma to separate multiple values. Example: <code>fagskole_tilbud</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "hovedfasett",
            "in": "query",
            "description": "Filter the query by <i>hovedfasett</i> (Used to filter based on hovedfassett values). Use a comma to separate multiple values. Example: <code>Utdanninger,LÃ¦resteder</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "omrade",
            "in": "query",
            "description": "Filter the query by <i>omrade</i> (Used to only show values in the specific omrade.). Use a comma to separate multiple values. Example: <code>Oslo,Viken</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsniva",
            "in": "query",
            "description": "Filter the query by <i>utdanningsniva</i> (Used to filter based on the utdanningsniva of hÃ¸yere utdanning). Use a comma to separate multiple values. Example: <code>Fagskole,FolkehÃ¸gskole</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "linje",
            "in": "query",
            "description": "Filter the query by <i>linje</i> (Used to filter based on the different VGS linjer.). Use a comma to separate multiple values. Example: <code>Musikk, scene og teater</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjon",
            "in": "query",
            "description": "Filter the query by <i>organisasjon</i> (Used to filter based on the organisasjonsform.). Use a comma to separate multiple values. Example: <code>HÃ¸gskole</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fagomrade",
            "in": "query",
            "description": "Filter the query by <i>fagomrade</i> (Used to filter based on different fagomrader in hÃ¸yere utdanning.). Use a comma to separate multiple values. Example: <code>Musikk, lavere nivÃ¥</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "niva",
            "in": "query",
            "description": "Filter the query by <i>niva</i> (Used to filter based on the length of the study. e.g. bachelor, master etc...). Use a comma to separate multiple values. Example: <code>Master, 2 Ã¥r</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "studieform",
            "in": "query",
            "description": "Filter the query by <i>studieform</i> (Used to filter on different types of studies e.g. nettbasert, samlingsbasert etc...). Use a comma to separate multiple values. Example: <code>Nettstudium</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fagretning",
            "in": "query",
            "description": "Filter the query by <i>fagretning</i> (Used to filter on fagretninger). Use a comma to separate multiple values. Example: <code>Datateknikk,Bygg og anlegg</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sektor",
            "in": "query",
            "description": "Filter the query by <i>sektor</i> (Used to filter based on the sektor a occupation is in.). Use a comma to separate multiple values. Example: <code>Offentlig</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "artikkeltype",
            "in": "query",
            "description": "Filter the query by <i>artikkeltype</i> (Used to filter on different artikkeltyper.). Use a comma to separate multiple values. Example: <code>Arbeidsmarkedet</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsprogram",
            "in": "query",
            "description": "Filter the query by <i>utdanningsprogram</i> (Used to filter based on the different utdanningsprogram that exist in VGS). Use a comma to separate multiple values. Example: <code>Teknikk og industriell produksjon</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/search/result": {
      "get": {
        "operationId": "api_searchresult_get_collection",
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "SearchResult collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SearchResult.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Brukt i sÃ¸ket pÃ¥ utdanning.no",
        "description": "Retrieves the collection of SearchResult resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "query_value",
            "in": "query",
            "description": "Sets the query search value. If multiple fields are set, the same value will apply to all. Defaults to <code>*</code>.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "query_fields[]",
            "in": "query",
            "description": "Sets the query field(s) to run the search on. Defaults to <code>tm_X3b_nb_title</code>, <code>tm_X3b_nb_ingress</code>, <code>tm_X3b_nb_beskrivelse</code>, <code>tm_X3b_nb_high_importance</code>, <code>tm_X3b_nb_medium_importance</code>, <code>tm_X3b_nb_alltext</code>, <code>tcedgestringm_X3b_nb_title_starts_with</code>, <code>tcngramm_X3b_nb_title_wildcard</code>, <code>tcngramm_X3b_nb_other_wildcard</code>.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "innholdstype",
            "in": "query",
            "description": "Filter the query by <i>innholdstype</i> (Drupal's entity type machine name). Use a comma to separate multiple values. Example: <code>fagskole_tilbud</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "hovedfasett",
            "in": "query",
            "description": "Filter the query by <i>hovedfasett</i> (Used to filter based on hovedfassett values). Use a comma to separate multiple values. Example: <code>Utdanninger,LÃ¦resteder</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "omrade",
            "in": "query",
            "description": "Filter the query by <i>omrade</i> (Used to only show values in the specific omrade.). Use a comma to separate multiple values. Example: <code>Oslo,Viken</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsniva",
            "in": "query",
            "description": "Filter the query by <i>utdanningsniva</i> (Used to filter based on the utdanningsniva of hÃ¸yere utdanning). Use a comma to separate multiple values. Example: <code>Fagskole,FolkehÃ¸gskole</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "interesse",
            "in": "query",
            "description": "Filter the query by <i>interesse</i> (Use to find studies with a specific interests.). Use a comma to separate multiple values. Example: <code>Arkitektur</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "linje",
            "in": "query",
            "description": "Filter the query by <i>linje</i> (Used to filter based on the different VGS linjer.). Use a comma to separate multiple values. Example: <code>Musikk, scene og teater</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjon",
            "in": "query",
            "description": "Filter the query by <i>organisasjon</i> (Used to filter based on the organisasjonsform.). Use a comma to separate multiple values. Example: <code>HÃ¸gskole</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fagomrade",
            "in": "query",
            "description": "Filter the query by <i>fagomrade</i> (Used to filter based on different fagomrader in hÃ¸yere utdanning.). Use a comma to separate multiple values. Example: <code>Musikk, lavere nivÃ¥</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "niva",
            "in": "query",
            "description": "Filter the query by <i>niva</i> (Used to filter based on the length of the study. e.g. bachelor, master etc...). Use a comma to separate multiple values. Example: <code>Master, 2 Ã¥r</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "studieform",
            "in": "query",
            "description": "Filter the query by <i>studieform</i> (Used to filter on different types of studies e.g. nettbasert, samlingsbasert etc...). Use a comma to separate multiple values. Example: <code>Nettstudium</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fagretning",
            "in": "query",
            "description": "Filter the query by <i>fagretning</i> (Used to filter on fagretninger). Use a comma to separate multiple values. Example: <code>Datateknikk,Bygg og anlegg</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sektor",
            "in": "query",
            "description": "Filter the query by <i>sektor</i> (Used to filter based on the sektor a occupation is in.). Use a comma to separate multiple values. Example: <code>Offentlig</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "artikkeltype",
            "in": "query",
            "description": "Filter the query by <i>artikkeltype</i> (Used to filter on different artikkeltyper.). Use a comma to separate multiple values. Example: <code>Arbeidsmarkedet</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsprogram",
            "in": "query",
            "description": "Filter the query by <i>utdanningsprogram</i> (Used to filter based on the different utdanningsprogram that exist in VGS). Use a comma to separate multiple values. Example: <code>Teknikk og industriell produksjon</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/search_logs": {
      "get": {
        "operationId": "api_search_logs_get_collection",
        "tags": [
          "SearchLog"
        ],
        "responses": {
          "200": {
            "description": "SearchLog collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SearchLog.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchLog"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchLog"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of SearchLog resources.",
        "description": "Retrieves the collection of SearchLog resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_search_logs_post",
        "tags": [
          "SearchLog"
        ],
        "responses": {
          "201": {
            "description": "SearchLog resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a SearchLog resource.",
        "description": "Creates a SearchLog resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new SearchLog resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/search_logs/{id}": {
      "get": {
        "operationId": "api_search_logs_id_get",
        "tags": [
          "SearchLog"
        ],
        "responses": {
          "200": {
            "description": "SearchLog resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a SearchLog resource.",
        "description": "Retrieves a SearchLog resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SearchLog identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "api_search_logs_id_put",
        "tags": [
          "SearchLog"
        ],
        "responses": {
          "200": {
            "description": "SearchLog resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the SearchLog resource.",
        "description": "Replaces the SearchLog resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SearchLog identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated SearchLog resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "api_search_logs_id_delete",
        "tags": [
          "SearchLog"
        ],
        "responses": {
          "204": {
            "description": "SearchLog resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the SearchLog resource.",
        "description": "Removes the SearchLog resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SearchLog identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_search_logs_id_patch",
        "tags": [
          "SearchLog"
        ],
        "responses": {
          "200": {
            "description": "SearchLog resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SearchLog"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the SearchLog resource.",
        "description": "Updates the SearchLog resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SearchLog identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated SearchLog resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLog"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/studievelgeren/facet": {
      "get": {
        "operationId": "api_studievelgerenfacet_get_collection",
        "tags": [
          "Studievelgeren"
        ],
        "responses": {
          "200": {
            "description": "StudievelgerenFacet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StudievelgerenFacet.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over antall studier basert pÃ¥ fasetten. Brukes pÃ¥ karakterkalkulator/studievelger",
        "description": "Retrieves the collection of StudievelgerenFacet resources.",
        "parameters": [
          {
            "name": "facet",
            "in": "query",
            "description": "The facet name.<br>The supported values, and their equivalent indexed field ids are: <ul><li><code>utdanningsbeskrivelse</code>: <samp>sm_utdanningsbeskrivelse_title</samp></li><li><code>studieniva</code>: <samp>ss_studieniva</samp></li><li><code>fylke</code>: <samp>sm_fylke</samp></li><li><code>interesse</code>: <samp>sm_interesser</samp></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "query_value",
            "in": "query",
            "description": "Sets the query search value. If multiple fields are set, the same value will apply to all. Defaults to <code>*</code>.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylke",
            "in": "query",
            "description": "Filter the query by <i>fylke</i> (Fylke). Use a comma to separate multiple values. Example: <code>Vestland</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "studieniva",
            "in": "query",
            "description": "Filter the query by <i>studieniva</i> (StudienivÃ¥). Use a comma to separate multiple values. Example: <code>\"Master, 5 Ã¥r\"</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsbeskrivelse",
            "in": "query",
            "description": "Filter the query by <i>utdanningsbeskrivelse</i> (Utdanningsbeskrivelse). Use a comma to separate multiple values. Example: <code>Lektorutdanning</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "interesse",
            "in": "query",
            "description": "Filter the query by <i>interesse</i> (Interesser). Use a comma to separate multiple values. Example: <code>mekanikk</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "deltid",
            "in": "query",
            "description": "True/False value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "nettbasert",
            "in": "query",
            "description": "True/False value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "samlingsbasert",
            "in": "query",
            "description": "True/False value",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/studievelgeren/result": {
      "get": {
        "operationId": "api_studievelgerenresult_get_collection",
        "tags": [
          "Studievelgeren"
        ],
        "responses": {
          "200": {
            "description": "StudievelgerenResult collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StudievelgerenResult.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om hvert studietilbud. Brukes pÃ¥ karakterkalkulator/studievelger.",
        "description": "Retrieves the collection of StudievelgerenResult resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 30,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "query_value",
            "in": "query",
            "description": "Sets the query search value. If multiple fields are set, the same value will apply to all. Defaults to <code>*</code>.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylke",
            "in": "query",
            "description": "Filter the query by <i>fylke</i> (Fylke). Use a comma to separate multiple values. Example: <code>Vestland</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "studieniva",
            "in": "query",
            "description": "Filter the query by <i>studieniva</i> (StudienivÃ¥). Use a comma to separate multiple values. Example: <code>\"Master, 5 Ã¥r\"</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "utdanningsbeskrivelse",
            "in": "query",
            "description": "Filter the query by <i>utdanningsbeskrivelse</i> (Utdanningsbeskrivelse). Use a comma to separate multiple values. Example: <code>Lektorutdanning</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "interesse",
            "in": "query",
            "description": "Filter the query by <i>interesse</i> (Interesser). Use a comma to separate multiple values. Example: <code>mekanikk</code>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/utdanningsdata/fylke": {
      "get": {
        "operationId": "api_utdanningsdatafylke_get_collection",
        "tags": [
          "Utdanningsdata"
        ],
        "responses": {
          "200": {
            "description": "Fylke collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Fylke.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Get fylkenr",
        "description": "Retrieves the collection of Fylke resources.",
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "description": "A comma-separated list of Regions",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenavn",
            "in": "query",
            "description": "Comma-separated string of fylke names.<br> NB: Quotes are necessary for names with spaces eg: \"Troms og Finnmark\"",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/utdanningsdata/region": {
      "get": {
        "operationId": "api_utdanningsdataregion_get_collection",
        "tags": [
          "Utdanningsdata"
        ],
        "responses": {
          "200": {
            "description": "Region collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Region.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Get fylkenr",
        "description": "Retrieves the collection of Region resources.",
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "description": "A comma-separated list of Regions",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenavn",
            "in": "query",
            "description": "Comma-separated string of fylke names.<br> NB: Quotes are necessary for names with spaces eg: \"Troms og Finnmark\"",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/utdanningsdata/stedsvelger": {
      "get": {
        "operationId": "api_utdanningsdatastedsvelger_get_collection",
        "tags": [
          "Utdanningsdata"
        ],
        "responses": {
          "200": {
            "description": "Stedsvelger_Fylke collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Stedsvelger_Fylke"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all counties and municipalities given certain criteria",
        "description": "Retrieves the collection of Stedsvelger_Fylke resources.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "har_videregaende_skoler",
            "in": "query",
            "description": "returner bare entiteter som har minst en videregÃ¥ende skole",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "har_bedrifter",
            "in": "query",
            "description": "returner bare entiteter som har minst en bedrift",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/utdanningsdata/undervisningssted": {
      "get": {
        "operationId": "api_utdanningsdataundervisningssted_get_collection",
        "tags": [
          "Utdanningsdata"
        ],
        "responses": {
          "200": {
            "description": "Undervisningssted collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Undervisningssted.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Get fylkenr",
        "description": "Retrieves the collection of Undervisningssted resources.",
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "description": "A comma-separated list of Regions",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of fylke codes.",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenavn",
            "in": "query",
            "description": "Comma-separated string of fylke names.<br> NB: Quotes are necessary for names with spaces eg: \"Troms og Finnmark\"",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "organisasjon_id",
            "in": "query",
            "description": "Comma-separated string of org_ids",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "undervisningssted_id",
            "in": "query",
            "description": "Comma-separated string of undervisningssted_ids",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "har_organisasjon",
            "in": "query",
            "description": "returner bare entiteter som har minst en organisasjon",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/veientilfagbrev/fag": {
      "get": {
        "operationId": "api_veientilfagbrevfag_get_collection",
        "tags": [
          "Veien til fagbrev"
        ],
        "responses": {
          "200": {
            "description": "Fag collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fag"
                  }
                }
              }
            }
          }
        },
        "summary": "Get fylkenr",
        "description": "Retrieves the collection of Fag resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/veientilfagbrev/fag_gruppe": {
      "get": {
        "operationId": "api_veientilfagbrevfag_gruppe_get_collection",
        "tags": [
          "Veien til fagbrev"
        ],
        "responses": {
          "200": {
            "description": "FagGruppe collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FagGruppe"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en nested liste med fagGrupper",
        "description": "Retrieves the collection of FagGruppe resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/veientilfagbrev/opsjon": {
      "get": {
        "operationId": "api_veientilfagbrevopsjon_get_collection",
        "tags": [
          "Veien til fagbrev"
        ],
        "responses": {
          "200": {
            "description": "Opsjon collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Opsjon"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en liste med opsjoner og fagene som tilhÃ¸rer de",
        "description": "Retrieves the collection of Opsjon resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/veientilfagbrev/veier/1.3": {
      "get": {
        "operationId": "api_veientilfagbrevveier1.3_get_collection",
        "tags": [
          "Veien til fagbrev"
        ],
        "responses": {
          "200": {
            "description": "Vtf__1_3 collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vtf__1_3.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en liste med opsjoner og fagene som tilhÃ¸rer de",
        "description": "Retrieves the collection of Vtf__1_3 resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/veientilfagbrev/veier/1.3/{id}": {
      "get": {
        "operationId": "api_veientilfagbrevveier1.3_id_get",
        "tags": [
          "Veien til fagbrev"
        ],
        "responses": {
          "200": {
            "description": "Vtf__1_3 resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Vtf__1_3.jsonld"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Veien til fagbrev",
        "description": "Retrieves a Vtf__1_3 resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vtf__1_3 identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/vgs/lop": {
      "get": {
        "operationId": "api_vgslop_get_collection",
        "tags": [
          "Vgs"
        ],
        "responses": {
          "200": {
            "description": "VgsLop collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VgsLop"
                  }
                }
              }
            }
          }
        },
        "summary": "Lar deg skape det videregÃ¥ende lÃ¸pet",
        "description": "Retrieves the collection of VgsLop resources.",
        "parameters": [
          {
            "name": "vilbli_org_ids",
            "in": "query",
            "description": "Modify <i>tilbys</i> to use this\n        Some example values: <ul><li><code>Vilbli_no_adr_8862</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Modify <i>tilbys</i> to use this\n        Some example values: <ul><li><code>55</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Modify <i>tilbys</i> to use this\n        Some example values: <ul><li><code>5601</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "skoleregionnr",
            "in": "query",
            "description": "Modify <i>tilbys</i> to use this\n        Some example values: <ul><li><code>5528</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent_path",
            "in": "query",
            "description": "Which path to get the child codes of\n        Some example values: <ul><li><code>BABAT1----</code></li><li><code>BABAT1----;BAKEM2----</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/vgs/programomrade_info": {
      "get": {
        "operationId": "api_vgsprogramomrade_info_get_collection",
        "tags": [
          "Vgs"
        ],
        "responses": {
          "200": {
            "description": "VgsProgramomradeInfo collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VgsProgramomradeInfo"
                  }
                }
              }
            }
          }
        },
        "summary": "Oversikt over alle programmer",
        "description": "Retrieves the collection of VgsProgramomradeInfo resources.",
        "parameters": [],
        "deprecated": false
      },
      "parameters": []
    },
    "/vgs/programomrade_info/{programomradekode10}": {
      "get": {
        "operationId": "api_vgsprogramomrade_info_programomradekode10_get",
        "tags": [
          "Vgs"
        ],
        "responses": {
          "200": {
            "description": "VgsProgramomradeInfo resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VgsProgramomradeInfo"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir all informasjon relatert til et programomrÃ¥de",
        "description": "Retrieves a VgsProgramomradeInfo resource.",
        "parameters": [
          {
            "name": "programomradekode10",
            "in": "path",
            "description": "VgsProgramomradeInfo identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/vgs/skole": {
      "get": {
        "operationId": "api_vgsskole_get_collection",
        "tags": [
          "Vgs"
        ],
        "responses": {
          "200": {
            "description": "VgsSkole collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VgsSkole"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en liste over alle VideregÃ¥ende skoler",
        "description": "Retrieves the collection of VgsSkole resources.",
        "parameters": [
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Only show schools in this county\n        Some example values: <ul><li><code>55</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Only show schools in this municipality\n        Some example values: <ul><li><code>5601</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/vgs/skole/{vilbli_org_id}": {
      "get": {
        "operationId": "api_vgsskole_vilbli_org_id_get",
        "tags": [
          "Vgs"
        ],
        "responses": {
          "200": {
            "description": "VgsSkole resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VgsSkole"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Gir utvidet informasjon om en skole",
        "description": "Retrieves a VgsSkole resource.",
        "parameters": [
          {
            "name": "vilbli_org_id",
            "in": "path",
            "description": "VgsSkole identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/vov/fagkode_velger": {
      "get": {
        "operationId": "api_vovfagkode_velger_get_collection",
        "tags": [
          "Vov"
        ],
        "responses": {
          "200": {
            "description": "VovFagkodeVelger collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VovFagkodeVelger"
                  }
                }
              }
            }
          }
        },
        "summary": "SÃ¸k i en liste over alle fagkoder",
        "description": "calculated_status can be one of `GYLDIG`, `KOMMENDE` or `UTGAATT`",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search by kode or title\n        Some example values: <ul><li><code>AKT2004</code></li><li><code>Biologi og miljÃ¸</code></li></ul>",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/larlinger-indikatorrapport": {
      "get": {
        "operationId": "api_yrkearbeidslivlarlinger-indikatorrapport_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "LarlingerIndikatorrapport collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LarlingerIndikatorrapport.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over lÃ¦rlinger i alle fag.",
        "description": "Retrieves the collection of LarlingerIndikatorrapport resources.",
        "parameters": [
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id codes.\n        Example values: <ul><li><code>y_advokat</code></li><li><code>y_bonde</code></li><li><code>y_snekker,y_tomrer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "programomradekode6",
            "in": "query",
            "description": "Comma-separated string of programomradekode6 codes.\n        Example values: <ul><li><code>SSSLG3</code></li><li><code>HSBUA3</code></li><li><code>BARLF3,TPIME3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer).\n        Some example values: <ul><li><code>5001</code></li><li><code>5001,5035</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrke_nid",
            "in": "query",
            "description": "Comma-separated string of yrke_nid id fields.\n        Example values: <ul><li><code>396030</code></li><li><code>395767</code></li><li><code>396100,395745</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of county IDs (fylkenummer).\n        Some example values: <ul><li><code>55</code></li><li><code>55,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/opplaringskontor": {
      "get": {
        "operationId": "api_yrkearbeidslivopplaringskontor_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "Opplaringskontor collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opplaringskontor.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over alle opplÃ¦ringskontor.",
        "description": "Retrieves the collection of Opplaringskontor resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id codes.\n        Example values: <ul><li><code>y_advokat</code></li><li><code>y_bonde</code></li><li><code>y_snekker,y_tomrer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "programomradekode6",
            "in": "query",
            "description": "Comma-separated string of programomradekode6 codes.\n        Example values: <ul><li><code>SSSLG3</code></li><li><code>HSBUA3</code></li><li><code>BARLF3,TPIME3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of county IDs (fylkenummer).\n        Some example values: <ul><li><code>55</code></li><li><code>55,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer).\n        Some example values: <ul><li><code>5001</code></li><li><code>5001,5035</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/potensielle-bedrifter": {
      "get": {
        "operationId": "api_yrkearbeidslivpotensielle-bedrifter_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "PotensielleBedrifter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PotensielleBedrifter.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om potensielle bedrifter",
        "description": "Retrieves the collection of PotensielleBedrifter resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id codes.\n        Example values: <ul><li><code>y_advokat</code></li><li><code>y_bonde</code></li><li><code>y_snekker,y_tomrer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of county IDs (fylkenummer).\n        Some example values: <ul><li><code>55</code></li><li><code>55,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer).\n        Some example values: <ul><li><code>5001</code></li><li><code>5001,5035</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrkeskode_styrk98",
            "in": "query",
            "description": "Comma-separated string of styrk98 codes.\n        Example values: <ul><li><code>5221105</code></li><li><code>5221126</code></li><li><code>5221157,5221156</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting of results. It can be 'normal_asc/desc' which gives Approved in same, Approved in other and alphabetically sorted,\n        or it can be 'name_asc/desc'. The standard is 'normal_asc'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/potensielle-bedrifter-info": {
      "get": {
        "operationId": "api_yrkearbeidslivpotensielle-bedrifter-info_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "PotensielleBedrifterInfo collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PotensielleBedrifterInfo"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om poteniselle bedrifter basert pÃ¥ fylke, kommune eller styrk98.",
        "description": "Retrieves the collection of PotensielleBedrifterInfo resources.",
        "parameters": [
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id codes.\n        Example values: <ul><li><code>y_advokat</code></li><li><code>y_bonde</code></li><li><code>y_snekker,y_tomrer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of county IDs (fylkenummer).\n        Some example values: <ul><li><code>55</code></li><li><code>55,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer).\n        Some example values: <ul><li><code>5001</code></li><li><code>5001,5035</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrkeskode_styrk98",
            "in": "query",
            "description": "Comma-separated string of styrk98 codes.\n        Example values: <ul><li><code>5221105</code></li><li><code>5221126</code></li><li><code>5221157,5221156</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/potensielle-larebedrifter": {
      "get": {
        "operationId": "api_yrkearbeidslivpotensielle-larebedrifter_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "PotensielleLarebedrifter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PotensielleLarebedrifter.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om potensielle lÃ¦rebedrifter.",
        "description": "Retrieves the collection of PotensielleLarebedrifter resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id codes.\n        Example values: <ul><li><code>y_advokat</code></li><li><code>y_bonde</code></li><li><code>y_snekker,y_tomrer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "programomradekode6",
            "in": "query",
            "description": "Comma-separated string of programomradekode6 codes.\n        Example values: <ul><li><code>SSSLG3</code></li><li><code>HSBUA3</code></li><li><code>BARLF3,TPIME3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of county IDs (fylkenummer).\n        Some example values: <ul><li><code>55</code></li><li><code>55,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer).\n        Some example values: <ul><li><code>5001</code></li><li><code>5001,5035</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrkeskode_styrk98",
            "in": "query",
            "description": "Comma-separated string of styrk98 codes.\n        Example values: <ul><li><code>5221105</code></li><li><code>5221126</code></li><li><code>5221157,5221156</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting of results. It can be 'normal_asc/desc' which gives Approved in same, Approved in other and alphabetically sorted,\n        or it can be 'name_asc/desc'. The standard is 'normal_asc'",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/potensielle-larebedrifter-info": {
      "get": {
        "operationId": "api_yrkearbeidslivpotensielle-larebedrifter-info_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "PotensielleLarebedrifterInfo collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PotensielleLarebedrifterInfo"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir informasjon om potensielle lÃ¦rebedrifter basert pÃ¥ fylke, kommune eller styrk98.",
        "description": "Retrieves the collection of PotensielleLarebedrifterInfo resources.",
        "parameters": [
          {
            "name": "uno_id",
            "in": "query",
            "description": "Comma-separated string of uno_id codes.\n        Example values: <ul><li><code>y_advokat</code></li><li><code>y_bonde</code></li><li><code>y_snekker,y_tomrer</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "programomradekode6",
            "in": "query",
            "description": "Comma-separated string of programomradekode6 codes.\n        Example values: <ul><li><code>SSSLG3</code></li><li><code>HSBUA3</code></li><li><code>BARLF3,TPIME3</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fylkenr",
            "in": "query",
            "description": "Comma-separated string of county IDs (fylkenummer).\n        Some example values: <ul><li><code>55</code></li><li><code>55,18</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kommunenr",
            "in": "query",
            "description": "Comma-separated string of municipality IDs (kommunenummer).\n        Some example values: <ul><li><code>5001</code></li><li><code>5001,5035</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrkeskode_styrk98",
            "in": "query",
            "description": "Comma-separated string of styrk98 codes.\n        Example values: <ul><li><code>5221105</code></li><li><code>5221126</code></li><li><code>5221157,5221156</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/yrkearbeidsliv/yrkeskategori": {
      "get": {
        "operationId": "api_yrkearbeidslivyrkeskategori_get_collection",
        "tags": [
          "YrkeArbeidsliv"
        ],
        "responses": {
          "200": {
            "description": "Yrkeskategori collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Yrkeskategori"
                  }
                }
              }
            }
          }
        },
        "summary": "Gir en oversikt over antall ansatte per yrkeskategori.",
        "description": "Retrieves the collection of Yrkeskategori resources.",
        "parameters": [
          {
            "name": "yrkeskode_styrk08",
            "in": "query",
            "description": "Comma-separated string of styrk08 codes.\n        Example values: <ul><li><code>0110</code></li><li><code>7124</code></li><li><code>0110,7124</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "yrkeskode_styrk98",
            "in": "query",
            "description": "Comma-separated string of styrk98 codes.\n        Example values: <ul><li><code>5221105</code></li><li><code>5221126</code></li><li><code>5221157,5221156</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "kategori",
            "in": "query",
            "description": "Choose which occupational category (yrkeskategori) to fetch\n        Accepted values: <ul><li><code>styrk08</code></li><li><code>styrk98</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tittel",
            "in": "query",
            "description": "Case insensitive string. Must be a complete word to get a match for a tittel\n        Example values: <ul><li><code>Offiserer fra fenrik og hÃ¸yere grad</code></li><li><code>offiserer</code></li><li><code>hÃ¸yere</code></li></ul>",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Aarsverk.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "unike": {
            "description": "TODO write description",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Antall_stillinger.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "stillinger": {
            "description": "antall stillinger i alle utlysningene",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Arbeidsledighet": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {},
          "arbeidstakere_antall13": {},
          "arbeidsledige_antall710": {},
          "arbeidsledige_andel_menn": {},
          "tittel": {},
          "title_suggest": {},
          "title_suggest_edge": {},
          "title_suggest_ngram": {},
          "title_s": {},
          "nus_kortnavn_id": {},
          "arbeiedstakere_antall": {},
          "arbeidsledige_antall13": {},
          "arbeidsledige_andel13": {},
          "arbeidsledige_andel40": {},
          "arbeidsledige_antall": {},
          "arbeidstakere_antall710": {},
          "arbeidstakere_andel710": {},
          "arbeidsledige_andel710": {},
          "arbeidsledige_andel_kvinner": {},
          "nus_kortnavn": {},
          "arbeidsledige_andel": {},
          "uno_id": {},
          "nus_navn": {},
          "nus": {},
          "path": {},
          "_version_": {},
          "kildedato": {},
          "funksjon": {}
        }
      },
      "Arbeidsmarked": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {},
          "uno_id": {},
          "tittel": {},
          "title_suggest": {},
          "title_suggest_ngram": {},
          "title_suggest_edge": {},
          "title_s": {},
          "innholdstype": {},
          "retning": {},
          "styrk08": {},
          "styrk08_navn": {},
          "antall_personer": {},
          "antall_13": {},
          "antall_40": {},
          "antall_710": {},
          "antall_menn": {},
          "antall_kvinner": {},
          "antall_ukjent_kjonn": {},
          "antall_privat": {},
          "antall_offentlig": {},
          "antall_ukjent_sektor": {},
          "andel_personer": {},
          "path": {},
          "_version_": {},
          "kildedato": {},
          "funksjon": {}
        }
      },
      "Barn.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "_nest_parent_": {
            "type": "string"
          },
          "element_id": {
            "description": "ID for ett gitt element",
            "type": "string"
          },
          "i_data_value": {
            "type": "number"
          },
          "aarsverk": {
            "description": "antall Ã¥rsverk for ett gitt yrke i en gitt kommune",
            "type": "integer"
          },
          "kommunenr": {
            "description": "kommunenummer",
            "type": "string"
          },
          "larlinger": {
            "description": "antall lÃ¦rlinger for ett gitt yrke i en gitt kommune",
            "type": "integer"
          }
        }
      },
      "Bedrift.jsonld-bedrift.collection": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "navn": {
            "description": "name of each bedrift",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "postnummer of the bedrift",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "city name where the bedrift is",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "fylke name where the bedrift is",
            "type": "string"
          },
          "hovedenhet": {
            "description": "orgnr of the hovedenhet",
            "type": "integer"
          },
          "organisasjonsform_kode": {
            "description": "Short form of the organisasjonsform tittel",
            "type": "string"
          },
          "forretningsadr": {
            "description": "address of the bedrift",
            "type": "string"
          },
          "telefon": {
            "description": "telefon nummer of the bedrift",
            "type": "integer"
          },
          "mobil": {
            "description": "mobil number of the bedrift",
            "type": "integer"
          },
          "hovedenhet_navn": {
            "description": "name of the hovedenhet",
            "type": "string"
          }
        }
      },
      "Bedrift.jsonld-bedrift.item": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "navn": {
            "description": "name of each bedrift",
            "type": "string"
          },
          "sektorkode": {
            "description": "What sektor they work in",
            "type": "string"
          },
          "forradrkommnr": {
            "description": "kommune nummer of the bedrift",
            "type": "string"
          },
          "forradrkommnavn": {
            "description": "name of the kommune the bedrift is in",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "postnummer of the bedrift",
            "type": "string"
          },
          "latlng_1_coordinate": {
            "description": "lat coordinate of the bedrift",
            "type": "number"
          },
          "latlng_0_coordinate": {
            "description": "lon coordinate of the bedrift",
            "type": "number"
          },
          "ansatte_totalt": {
            "description": "total numer of ansatte at the bedfrift. If > 5 it will be automatically set to 2.",
            "type": "integer"
          },
          "ansatte_dato": {
            "description": "the dato when ansatte_totalt was fetched",
            "type": "integer"
          },
          "antall_stillinger": {
            "description": "antall stillingsutlysninger(LÃ¦rling) akkurat nÃ¥.",
            "type": "integer"
          },
          "postadresse": {
            "description": "the address of the bedrift",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "city name where the bedrift is",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "fylke name where the bedrift is",
            "type": "string"
          },
          "leaf_node": {
            "type": "integer"
          },
          "organisasjonsform_tittel": {
            "description": "what type of organisasjon",
            "type": "string"
          },
          "forradrland": {
            "description": "what country the bedrift is located in",
            "type": "string"
          },
          "hovedenhet": {
            "description": "orgnr of the hovedenhet",
            "type": "integer"
          },
          "tilbyr_arbeidskrafttjenester": {
            "description": "true/false if the tilbyr arbeidskraft tjenester",
            "type": "boolean"
          },
          "lopende_kontrakter_totalt": {
            "description": "ammount of lÃ¸pende kontrakter the bedrift has",
            "type": "integer"
          },
          "ppostland": {
            "description": "country the bedrift is located",
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "ppostnr": {
            "type": "integer"
          },
          "organisasjonsform_kode": {
            "description": "Short form of the organisasjonsform tittel",
            "type": "string"
          },
          "forradrfylkenr": {
            "description": "the fylke number the bedrift is located in",
            "type": "integer"
          },
          "ppoststed": {
            "type": "integer"
          },
          "sektorkode_tittel": {
            "type": "string"
          },
          "forretningsadr": {
            "description": "address of the bedrift",
            "type": "string"
          },
          "telefon": {
            "description": "telefon nummer of the bedrift",
            "type": "integer"
          },
          "children_orgnames": {
            "description": "names of all the children bedrifter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "children_orgnumbers": {
            "description": "orgnr of all the children bedrifter",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "children_distances": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "bedriftens_aarsverk": {
            "description": "antall aarsverk at the bedrift",
            "type": "integer"
          },
          "mobil": {
            "description": "mobil number of the bedrift",
            "type": "integer"
          },
          "hovedenhet_navn": {
            "description": "name of the hovedenhet",
            "type": "string"
          },
          "parent_orgnames": {
            "description": "names of all parent bedrifts",
            "type": "string"
          },
          "parent_orgnumbers": {
            "description": "orgnr of the parent bedrift",
            "type": "integer"
          },
          "parent_vigo_contracts": {
            "description": "number of contracts total for all parenst",
            "type": "integer"
          },
          "url": {
            "description": "url to the bedrift",
            "type": "string"
          },
          "leaf_and_parent_vigo_uten_godkjenninger": {
            "type": "string"
          },
          "programomradekode6_med_ansatte": {
            "type": "string"
          },
          "godkjenninger": {
            "description": "bedriftens godkjenninger",
            "type": "string"
          },
          "leaf_godkjenninger": {
            "type": "string"
          },
          "parent_godkjenninger": {
            "description": "Parent bedrifts godkjenninger",
            "type": "string"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnavn": {
            "type": "string"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnr": {
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_m_larling": {
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_u_larling": {
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_utlopte": {
            "type": "string"
          },
          "leaf_and_parent_avtaler_yff": {
            "type": "string"
          },
          "laerested_presentasjon_url": {
            "description": "utdanning.no URL to bedrifter that are lÃ¦resteder",
            "type": "string"
          },
          "yrkeskode_styrk98": {
            "type": "string"
          },
          "yrkeskode_styrk98_tittel_str": {
            "type": "string"
          },
          "naringskode_nace": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "naringskode_nace_tittel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "medlemsbedrifter_larlinger_totalt": {},
          "childrens_yrkeskode_styrk98": {
            "description": "styrk98 koder for children bedrifter",
            "type": "string"
          },
          "yrker": {
            "description": "Yrker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "childrens_yrker": {
            "description": "list of all yrker at the bedrift and the styrk98 codes.\nFetched from sammenligning/yrke/{id}",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_other_data": {
            "type": "string"
          },
          "_child_documents": {
            "description": "Contains information about key-employees at the bedrift and possible godkjenninger",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_parents_child_documents": {
            "type": "string"
          },
          "_childrens_child_documents": {
            "type": "string"
          },
          "_legacy_result": {
            "type": "string"
          },
          "medlemsbedrift_info": {}
        }
      },
      "Bedrifter_alle.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "forradrkommnavn": {
            "description": "forradrkommnavn",
            "type": "string"
          },
          "leaf_node": {
            "description": "leaf_node",
            "type": "string"
          },
          "path": {
            "description": "path",
            "type": "string"
          },
          "hovedenhet_navn": {
            "description": "Navn pÃ¥ hovedenhet",
            "type": "string"
          },
          "orgnr": {
            "description": "organisasjonsnummer for bedriften",
            "type": "string"
          },
          "forradrkommnr": {
            "description": "forradrkommnr",
            "type": "string"
          },
          "navn": {
            "description": "navn pÃ¥ bedriften",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "forradrfylkenavn",
            "type": "string"
          },
          "organisasjonsform_tittel": {
            "description": "organisasjonsform_tittel",
            "type": "string"
          },
          "sektorkode": {
            "description": "sektorkode",
            "type": "string"
          },
          "postadresse": {
            "description": "postadresse",
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_m_larling": {
            "description": "leaf_and_parent_vigo_godkjenninger_m_larling",
            "type": "string"
          },
          "hovedenhet": {
            "description": "hovedenhet",
            "type": "string"
          },
          "leaf_and_parent_vigo_uten_godkjenninger": {
            "description": "leaf_and_parent_vigo_uten_godkjenninger",
            "type": "string"
          },
          "ppostnr": {
            "description": "ppostnr",
            "type": "string"
          },
          "tilbyr_arbeidskrafttjenester": {
            "description": "tilbyr_arbeidskrafttjenester",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "forradrpostnr",
            "type": "string"
          },
          "ppoststed": {
            "description": "ppoststed",
            "type": "string"
          },
          "forradrfylkenr": {
            "description": "forradrfylkenr",
            "type": "string"
          },
          "bedriftens_aarsverk": {
            "description": "Bedriftens totale Ã¥rsverk. ( Verdien settes til -1 om den orginale verdien er <= 5)",
            "type": "integer"
          },
          "forradrland": {
            "description": "forradrland",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "forradrpoststed",
            "type": "string"
          },
          "telefon": {},
          "organisasjonsform_kode": {},
          "lopende_kontrakter_totalt": {},
          "leaf_and_parent_medlem_opplaringskontor_orgnavn": {},
          "ppostland": {},
          "ansatte_totalt": {
            "description": "Antall ansatte i en gitt bedrift (Verdien settes til 2 om den er <= 3)",
            "type": "integer"
          },
          "antall_stillinger": {},
          "forretningsadr": {},
          "latlng_1_coordinate": {},
          "parent_orgnumbers": {},
          "parent_vigo_contracts": {
            "description": "Antall vigo-kontrakter for foreldre",
            "type": "integer"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnr": {},
          "latlng_0_coordinate": {},
          "programomradekode6_med_ansatte": {},
          "parent_godkjenninger": {},
          "yrke_aarsverk": {},
          "children_orgnumbers": {},
          "vigo_navn_opplaringskontor": {},
          "vigo_orgnr": {},
          "godkjenning_url": {},
          "godkjenning_beskrivelse": {},
          "leaf_and_parent_vigo_godkjenninger_utlopte": {},
          "children_orgnames": {},
          "yrke_orgnr": {},
          "leaf_and_parent_vigo_godkjenninger_u_larling": {},
          "vigo_forradrfylkenr": {},
          "forelder_avstand": {},
          "avtale_yff_skole_navn": {},
          "godkjenning_registernavn": {},
          "vigo_fylkenr": {},
          "url": {},
          "avtale_yff_avtale_nid": {},
          "vigo_programomradekode6": {},
          "vigo_programomradekode5": {},
          "avtale_yff_sluttkompetanse_navn": {},
          "vigo_lopenr": {},
          "rolle_person": {},
          "yrke_nid": {},
          "yrke_programomradekode6_hovedlop": {},
          "avtale_yff_orgnr": {},
          "forelder_orgnr": {},
          "rolle": {},
          "avtale_yff_skole_nid": {},
          "vigo_forradrfylkenavn": {},
          "mobil": {},
          "leaf_godkjenninger": {},
          "yrkeskode_styrk98_programomradekode6_hovedlop": {},
          "yrkeskode_styrk98": {},
          "avtale_yff_programomradekode6": {},
          "vigo_godkjent_til_dato": {},
          "godkjenning_godkjenner": {},
          "forelder_navn": {},
          "vigo_programomrade_tittel": {},
          "vigo_sum_kontrakter": {},
          "rolle_person_poststed": {},
          "leaf_and_parent_avtaler_yff": {},
          "aarsverk": {},
          "godkjenninger": {},
          "children_distances": {},
          "sektorkode_tittel": {},
          "vigo_fylkenavn": {},
          "vigo_orgnr_opplaringskontor": {},
          "medlemsbedrifter_larlinger_totalt": {},
          "_other_data": {},
          "_child_documents": {}
        }
      },
      "Bedrifter_alle_facet.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Bedrifter_godkjente.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "forradrkommnavn": {
            "description": "forradrkommnavn",
            "type": "string"
          },
          "leaf_node": {
            "description": "leaf_node",
            "type": "string"
          },
          "path": {
            "description": "path",
            "type": "string"
          },
          "hovedenhet_navn": {
            "description": "Navn pÃ¥ hovedenhet",
            "type": "string"
          },
          "orgnr": {
            "description": "organisasjonsnummer for bedriften",
            "type": "string"
          },
          "forradrkommnr": {
            "description": "forradrkommnr",
            "type": "string"
          },
          "navn": {
            "description": "navn pÃ¥ bedriften",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "forradrfylkenavn",
            "type": "string"
          },
          "organisasjonsform_tittel": {
            "description": "organisasjonsform_tittel",
            "type": "string"
          },
          "sektorkode": {
            "description": "sektorkode",
            "type": "string"
          },
          "postadresse": {
            "description": "postadresse",
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_m_larling": {
            "description": "leaf_and_parent_vigo_godkjenninger_m_larling",
            "type": "string"
          },
          "hovedenhet": {
            "description": "hovedenhet",
            "type": "string"
          },
          "leaf_and_parent_vigo_uten_godkjenninger": {
            "description": "leaf_and_parent_vigo_uten_godkjenninger",
            "type": "string"
          },
          "ppostnr": {
            "description": "ppostnr",
            "type": "string"
          },
          "tilbyr_arbeidskrafttjenester": {
            "description": "tilbyr_arbeidskrafttjenester",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "forradrpostnr",
            "type": "string"
          },
          "ppoststed": {
            "description": "ppoststed",
            "type": "string"
          },
          "forradrfylkenr": {
            "description": "forradrfylkenr",
            "type": "string"
          },
          "bedriftens_aarsverk": {
            "description": "Bedriftens totale Ã¥rsverk. ( Verdien settes til -1 om den orginale verdien er <= 5)",
            "type": "integer"
          },
          "forradrland": {
            "description": "forradrland",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "forradrpoststed",
            "type": "string"
          },
          "telefon": {},
          "organisasjonsform_kode": {},
          "lopende_kontrakter_totalt": {},
          "leaf_and_parent_medlem_opplaringskontor_orgnavn": {},
          "ppostland": {},
          "ansatte_totalt": {
            "description": "Antall ansatte i en gitt bedrift (Verdien settes til 2 om den er <= 3)",
            "type": "integer"
          },
          "antall_stillinger": {},
          "forretningsadr": {},
          "latlng_1_coordinate": {},
          "parent_orgnumbers": {},
          "parent_vigo_contracts": {
            "description": "Antall vigo-kontrakter for foreldre",
            "type": "integer"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnr": {},
          "latlng_0_coordinate": {},
          "programomradekode6_med_ansatte": {},
          "parent_godkjenninger": {},
          "yrke_aarsverk": {},
          "children_orgnumbers": {},
          "vigo_navn_opplaringskontor": {},
          "vigo_orgnr": {},
          "godkjenning_url": {},
          "godkjenning_beskrivelse": {},
          "leaf_and_parent_vigo_godkjenninger_utlopte": {},
          "children_orgnames": {},
          "yrke_orgnr": {},
          "leaf_and_parent_vigo_godkjenninger_u_larling": {},
          "vigo_forradrfylkenr": {},
          "forelder_avstand": {},
          "avtale_yff_skole_navn": {},
          "godkjenning_registernavn": {},
          "vigo_fylkenr": {},
          "url": {},
          "avtale_yff_avtale_nid": {},
          "vigo_programomradekode6": {},
          "vigo_programomradekode5": {},
          "avtale_yff_sluttkompetanse_navn": {},
          "vigo_lopenr": {},
          "rolle_person": {},
          "yrke_nid": {},
          "yrke_programomradekode6_hovedlop": {},
          "avtale_yff_orgnr": {},
          "forelder_orgnr": {},
          "rolle": {},
          "avtale_yff_skole_nid": {},
          "vigo_forradrfylkenavn": {},
          "mobil": {},
          "leaf_godkjenninger": {},
          "yrkeskode_styrk98_programomradekode6_hovedlop": {},
          "yrkeskode_styrk98": {},
          "avtale_yff_programomradekode6": {},
          "vigo_godkjent_til_dato": {},
          "godkjenning_godkjenner": {},
          "forelder_navn": {},
          "vigo_programomrade_tittel": {},
          "vigo_sum_kontrakter": {},
          "rolle_person_poststed": {},
          "leaf_and_parent_avtaler_yff": {},
          "aarsverk": {},
          "godkjenninger": {},
          "children_distances": {},
          "sektorkode_tittel": {},
          "vigo_fylkenavn": {},
          "vigo_orgnr_opplaringskontor": {},
          "medlemsbedrifter_larlinger_totalt": {},
          "_other_data": {},
          "_child_documents": {}
        }
      },
      "Bedrifter_godkjente_facet.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Bedrifter_ikke_godkjente.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "forradrkommnavn": {
            "description": "forradrkommnavn",
            "type": "string"
          },
          "leaf_node": {
            "description": "leaf_node",
            "type": "string"
          },
          "path": {
            "description": "path",
            "type": "string"
          },
          "hovedenhet_navn": {
            "description": "Navn pÃ¥ hovedenhet",
            "type": "string"
          },
          "orgnr": {
            "description": "organisasjonsnummer for bedriften",
            "type": "string"
          },
          "forradrkommnr": {
            "description": "forradrkommnr",
            "type": "string"
          },
          "navn": {
            "description": "navn pÃ¥ bedriften",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "forradrfylkenavn",
            "type": "string"
          },
          "organisasjonsform_tittel": {
            "description": "organisasjonsform_tittel",
            "type": "string"
          },
          "sektorkode": {
            "description": "sektorkode",
            "type": "string"
          },
          "postadresse": {
            "description": "postadresse",
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_m_larling": {
            "description": "leaf_and_parent_vigo_godkjenninger_m_larling",
            "type": "string"
          },
          "hovedenhet": {
            "description": "hovedenhet",
            "type": "string"
          },
          "leaf_and_parent_vigo_uten_godkjenninger": {
            "description": "leaf_and_parent_vigo_uten_godkjenninger",
            "type": "string"
          },
          "ppostnr": {
            "description": "ppostnr",
            "type": "string"
          },
          "tilbyr_arbeidskrafttjenester": {
            "description": "tilbyr_arbeidskrafttjenester",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "forradrpostnr",
            "type": "string"
          },
          "ppoststed": {
            "description": "ppoststed",
            "type": "string"
          },
          "forradrfylkenr": {
            "description": "forradrfylkenr",
            "type": "string"
          },
          "bedriftens_aarsverk": {
            "description": "Bedriftens totale Ã¥rsverk. ( Verdien settes til -1 om den orginale verdien er <= 5)",
            "type": "integer"
          },
          "forradrland": {
            "description": "forradrland",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "forradrpoststed",
            "type": "string"
          },
          "telefon": {},
          "organisasjonsform_kode": {},
          "lopende_kontrakter_totalt": {},
          "leaf_and_parent_medlem_opplaringskontor_orgnavn": {},
          "ppostland": {},
          "ansatte_totalt": {
            "description": "Antall ansatte i en gitt bedrift (Verdien settes til 2 om den er <= 3)",
            "type": "integer"
          },
          "antall_stillinger": {},
          "forretningsadr": {},
          "latlng_1_coordinate": {},
          "parent_orgnumbers": {},
          "parent_vigo_contracts": {
            "description": "Antall vigo-kontrakter for foreldre",
            "type": "integer"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnr": {},
          "latlng_0_coordinate": {},
          "programomradekode6_med_ansatte": {},
          "parent_godkjenninger": {},
          "yrke_aarsverk": {},
          "children_orgnumbers": {},
          "vigo_navn_opplaringskontor": {},
          "vigo_orgnr": {},
          "godkjenning_url": {},
          "godkjenning_beskrivelse": {},
          "leaf_and_parent_vigo_godkjenninger_utlopte": {},
          "children_orgnames": {},
          "yrke_orgnr": {},
          "leaf_and_parent_vigo_godkjenninger_u_larling": {},
          "vigo_forradrfylkenr": {},
          "forelder_avstand": {},
          "avtale_yff_skole_navn": {},
          "godkjenning_registernavn": {},
          "vigo_fylkenr": {},
          "url": {},
          "avtale_yff_avtale_nid": {},
          "vigo_programomradekode6": {},
          "vigo_programomradekode5": {},
          "avtale_yff_sluttkompetanse_navn": {},
          "vigo_lopenr": {},
          "rolle_person": {},
          "yrke_nid": {},
          "yrke_programomradekode6_hovedlop": {},
          "avtale_yff_orgnr": {},
          "forelder_orgnr": {},
          "rolle": {},
          "avtale_yff_skole_nid": {},
          "vigo_forradrfylkenavn": {},
          "mobil": {},
          "leaf_godkjenninger": {},
          "yrkeskode_styrk98_programomradekode6_hovedlop": {},
          "yrkeskode_styrk98": {},
          "avtale_yff_programomradekode6": {},
          "vigo_godkjent_til_dato": {},
          "godkjenning_godkjenner": {},
          "forelder_navn": {},
          "vigo_programomrade_tittel": {},
          "vigo_sum_kontrakter": {},
          "rolle_person_poststed": {},
          "leaf_and_parent_avtaler_yff": {},
          "aarsverk": {},
          "godkjenninger": {},
          "children_distances": {},
          "sektorkode_tittel": {},
          "vigo_fylkenavn": {},
          "vigo_orgnr_opplaringskontor": {},
          "medlemsbedrifter_larlinger_totalt": {},
          "_other_data": {},
          "_child_documents": {}
        }
      },
      "Bedrifter_ikke_godkjente_facet.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Bedrifter_m_lareplass.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "forradrkommnavn": {
            "description": "forradrkommnavn",
            "type": "string"
          },
          "leaf_node": {
            "description": "leaf_node",
            "type": "string"
          },
          "path": {
            "description": "path",
            "type": "string"
          },
          "hovedenhet_navn": {
            "description": "Navn pÃ¥ hovedenhet",
            "type": "string"
          },
          "orgnr": {
            "description": "organisasjonsnummer for bedriften",
            "type": "string"
          },
          "forradrkommnr": {
            "description": "forradrkommnr",
            "type": "string"
          },
          "navn": {
            "description": "navn pÃ¥ bedriften",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "forradrfylkenavn",
            "type": "string"
          },
          "organisasjonsform_tittel": {
            "description": "organisasjonsform_tittel",
            "type": "string"
          },
          "sektorkode": {
            "description": "sektorkode",
            "type": "string"
          },
          "postadresse": {
            "description": "postadresse",
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_m_larling": {
            "description": "leaf_and_parent_vigo_godkjenninger_m_larling",
            "type": "string"
          },
          "hovedenhet": {
            "description": "hovedenhet",
            "type": "string"
          },
          "leaf_and_parent_vigo_uten_godkjenninger": {
            "description": "leaf_and_parent_vigo_uten_godkjenninger",
            "type": "string"
          },
          "ppostnr": {
            "description": "ppostnr",
            "type": "string"
          },
          "tilbyr_arbeidskrafttjenester": {
            "description": "tilbyr_arbeidskrafttjenester",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "forradrpostnr",
            "type": "string"
          },
          "ppoststed": {
            "description": "ppoststed",
            "type": "string"
          },
          "forradrfylkenr": {
            "description": "forradrfylkenr",
            "type": "string"
          },
          "bedriftens_aarsverk": {
            "description": "Bedriftens totale Ã¥rsverk. ( Verdien settes til -1 om den orginale verdien er <= 5)",
            "type": "integer"
          },
          "forradrland": {
            "description": "forradrland",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "forradrpoststed",
            "type": "string"
          },
          "telefon": {},
          "organisasjonsform_kode": {},
          "lopende_kontrakter_totalt": {},
          "leaf_and_parent_medlem_opplaringskontor_orgnavn": {},
          "ppostland": {},
          "ansatte_totalt": {
            "description": "Antall ansatte i en gitt bedrift (Verdien settes til 2 om den er <= 3)",
            "type": "integer"
          },
          "antall_stillinger": {},
          "forretningsadr": {},
          "latlng_1_coordinate": {},
          "parent_orgnumbers": {},
          "parent_vigo_contracts": {
            "description": "Antall vigo-kontrakter for foreldre",
            "type": "integer"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnr": {},
          "latlng_0_coordinate": {},
          "programomradekode6_med_ansatte": {},
          "parent_godkjenninger": {},
          "yrke_aarsverk": {},
          "children_orgnumbers": {},
          "vigo_navn_opplaringskontor": {},
          "vigo_orgnr": {},
          "godkjenning_url": {},
          "godkjenning_beskrivelse": {},
          "leaf_and_parent_vigo_godkjenninger_utlopte": {},
          "children_orgnames": {},
          "yrke_orgnr": {},
          "leaf_and_parent_vigo_godkjenninger_u_larling": {},
          "vigo_forradrfylkenr": {},
          "forelder_avstand": {},
          "avtale_yff_skole_navn": {},
          "godkjenning_registernavn": {},
          "vigo_fylkenr": {},
          "url": {},
          "avtale_yff_avtale_nid": {},
          "vigo_programomradekode6": {},
          "vigo_programomradekode5": {},
          "avtale_yff_sluttkompetanse_navn": {},
          "vigo_lopenr": {},
          "rolle_person": {},
          "yrke_nid": {},
          "yrke_programomradekode6_hovedlop": {},
          "avtale_yff_orgnr": {},
          "forelder_orgnr": {},
          "rolle": {},
          "avtale_yff_skole_nid": {},
          "vigo_forradrfylkenavn": {},
          "mobil": {},
          "leaf_godkjenninger": {},
          "yrkeskode_styrk98_programomradekode6_hovedlop": {},
          "yrkeskode_styrk98": {},
          "avtale_yff_programomradekode6": {},
          "vigo_godkjent_til_dato": {},
          "godkjenning_godkjenner": {},
          "forelder_navn": {},
          "vigo_programomrade_tittel": {},
          "vigo_sum_kontrakter": {},
          "rolle_person_poststed": {},
          "leaf_and_parent_avtaler_yff": {},
          "aarsverk": {},
          "godkjenninger": {},
          "children_distances": {},
          "sektorkode_tittel": {},
          "vigo_fylkenavn": {},
          "vigo_orgnr_opplaringskontor": {},
          "medlemsbedrifter_larlinger_totalt": {},
          "_other_data": {},
          "_child_documents": {}
        }
      },
      "Bedrifter_m_lareplass_facet.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Bedriftsinfo.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "stillinger": {
            "description": "antall stillinger i alle utlysningene",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Bedriftsstorrelse.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Children.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "ID for en gitt child",
            "type": "string"
          },
          "element_id": {
            "description": "ID for ett gitt element",
            "type": "string"
          },
          "element_description_en": {
            "description": "Engelsk beskrivelse av elementet",
            "type": "string"
          },
          "l_recommend_suppress": {
            "description": "Annbefalt Ã¥ prikke?",
            "type": "string"
          },
          "i_reccoment_suppress": {
            "description": "Annbefalt Ã¥ prikke?",
            "type": "string"
          },
          "element_name_en": {
            "description": "Engelsk navn pÃ¥ et element",
            "type": "string"
          },
          "element_name_nb": {
            "description": "Norsk navn for et element",
            "type": "string"
          },
          "element_description_nb": {
            "description": "Norsk beskrivelse av et element",
            "type": "string"
          },
          "l_upper_ci": {
            "type": "number"
          },
          "i_upper_ci": {
            "type": "number"
          },
          "l_data_value": {
            "type": "number"
          },
          "l_not_relevant": {
            "description": "Ikke relevant data?",
            "type": "string"
          },
          "i_data_value": {
            "type": "number"
          },
          "i_lower_ci": {
            "type": "number"
          },
          "l_se": {
            "type": "number"
          },
          "i_se": {
            "type": "number"
          },
          "l_lower_ci": {
            "type": "number"
          }
        }
      },
      "Collection": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "empty": {
            "readOnly": true,
            "description": "Checks whether the collection is empty (contains no elements).",
            "type": "boolean"
          },
          "keys": {
            "readOnly": true,
            "description": "Gets all keys/indices of the collection.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "values": {
            "readOnly": true,
            "description": "Gets all values of the collection.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iterator": {
            "readOnly": true
          }
        }
      },
      "Collection.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "empty": {
            "readOnly": true,
            "description": "Checks whether the collection is empty (contains no elements).",
            "type": "boolean"
          },
          "keys": {
            "readOnly": true,
            "description": "Gets all keys/indices of the collection.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "values": {
            "readOnly": true,
            "description": "Gets all values of the collection.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iterator": {
            "readOnly": true
          }
        }
      },
      "Endring_arbeidsmarked.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "Id for hvert yrke, per Ã¥r per kommune"
          },
          "uno_id": {
            "description": "Utdanning.no id for hvert yrke",
            "type": "string"
          },
          "yrkeskode_styrk08": {
            "description": "styrk08 for hvert yrke",
            "type": "integer"
          },
          "yrke_navn": {
            "description": "yrke navn for hver uno_id",
            "type": "string"
          },
          "yrke_navn_flertallsform": {
            "description": "yrkes navn i flertallsform for hver uno_id",
            "type": "string"
          },
          "antall_ansatte": {
            "description": "antall ansatte for hver uno_id, i hver kommune for hvert Ã¥r",
            "type": "number"
          },
          "antall_aarsverk": {
            "description": "antall Ã¥rsvekr for hver uno_id, i hver kommune for hvert Ã¥r",
            "type": "number"
          },
          "antall_org": {
            "description": "antall organisasjoner med ansatte for hver uno_id",
            "type": "integer"
          },
          "andel_ansatte": {
            "description": "andel av ansatte i en kommune per yrke",
            "type": "number"
          },
          "andel_aarsverk": {
            "description": "andel Ã¥rsverk i kommunen per yrke",
            "type": "number"
          },
          "andel_org": {
            "description": "andel virksomheter i kommunen per yrke",
            "type": "number"
          },
          "dato": {
            "description": "dato for datauttrekk",
            "type": "string"
          },
          "kommunenr": {
            "description": "kommunenummeret for hver uno_id",
            "type": "integer"
          },
          "kommunenavn": {
            "description": "kommune navn for hver uno_id",
            "type": "string"
          },
          "forradrland": {
            "description": "land hvor uno_id er",
            "type": "string"
          },
          "fylkenr": {
            "description": "fylkenummeret for hver uno_id",
            "type": "integer"
          },
          "fylkenavn": {
            "description": "fylkenavn for hver uno_id",
            "type": "string"
          },
          "region": {
            "description": "region",
            "type": "string"
          },
          "ba_region_nr": {
            "description": "ba_region_nr",
            "type": "string"
          },
          "ba_region_navn": {
            "description": "ba_region_navn",
            "type": "string"
          }
        }
      },
      "Entrepenorskap": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "selvstendige_andel": {},
          "selvstendige_andel710": {},
          "selvstendige_andel_menn": {},
          "selvstendige_antall13": {},
          "selvstendige_andel40": {},
          "tittel": {},
          "title_suggest": {},
          "title_suggest_edge": {},
          "title_suggest_ngram": {},
          "title_s": {},
          "selvstendige_antall": {},
          "aggregert": {},
          "selvstendige_andel_kvinner": {},
          "id": {},
          "selvstendige_antall710": {},
          "uno_id": {},
          "selvstendige_andel13": {},
          "path": {},
          "_version_": {},
          "kildedato": {},
          "funksjon": {}
        }
      },
      "Fag": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode10": {
            "type": "string",
            "summary": "Programomradekode fra GREP"
          },
          "name": {
            "description": "Programomradenavn",
            "type": "string"
          },
          "url": {
            "description": "Lenke til vgs programmet pÃ¥ utdanning.no",
            "type": "string",
            "nullable": true
          },
          "yrkesbeskrivelse_url": {
            "description": "Lenke til yrkesbeskrivelsen pÃ¥ utdanning.no",
            "type": "string",
            "nullable": true
          },
          "utdanningsprogram_kode": {
            "description": "utdanningsprogram kode",
            "type": "string"
          }
        }
      },
      "FagGruppe": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "utdanningsprogram_kode": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "name": {
            "description": "utdanningsprogram navn",
            "type": "string"
          }
        }
      },
      "FellesStyrk98": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {},
          "uno_id": {}
        }
      },
      "Finnlarebedrift_Combinations": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode6": {
            "type": "string"
          },
          "bedrifter": {
            "type": "integer"
          },
          "fylker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Finnlarebedrift_Combinations_Fylke"
            }
          }
        }
      },
      "Finnlarebedrift_Combinations_Fylke": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "forradrfylkenr": {
            "type": "string"
          },
          "bedrifter": {
            "type": "integer"
          },
          "kommuner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Finnlarebedrift_Combinations_Kommune"
            }
          }
        }
      },
      "Finnlarebedrift_Combinations_Kommune": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "forradrkommnr": {
            "type": "string"
          },
          "bedrifter": {
            "type": "integer"
          }
        }
      },
      "Finnlarebedrift_Fagvelger": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode6": {
            "type": "string",
            "summary": "programomradekode6"
          },
          "programomradekode10": {
            "type": "string"
          },
          "programomrade_tittel": {
            "type": "string"
          },
          "utdanningsprogram_tittel": {
            "type": "string"
          },
          "utdanningsprogram_type": {
            "type": "string"
          },
          "opplaeringssted": {
            "type": "string"
          },
          "programomrade_type": {
            "type": "string"
          },
          "utgatt": {
            "type": "boolean"
          },
          "is_laerefag": {
            "type": "boolean"
          },
          "is_krysslop": {
            "type": "boolean"
          },
          "children": {},
          "utdanningsbeskrivelse": {
            "$ref": "#/components/schemas/Finnlarebedrift_Fagvelger_Utdanningsbeskrivelse"
          },
          "yrkesbeskrivelse": {
            "$ref": "#/components/schemas/Finnlarebedrift_Fagvelger_Yrkesbeskrivelse"
          }
        }
      },
      "Finnlarebedrift_Fagvelger_Utdanningsbeskrivelse": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "utdanningsbeskrivelse_uno_id": {
            "type": "string"
          },
          "utdanningsbeskrivelse_tittel": {
            "type": "string"
          },
          "utdanningsbeskrivelse_url": {
            "type": "string"
          }
        }
      },
      "Finnlarebedrift_Fagvelger_Yrkesbeskrivelse": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "yrkesbeskrivelse_uno_id": {
            "type": "string"
          },
          "yrkesbeskrivelse_tittel": {
            "type": "string"
          },
          "yrkesbeskrivelse_url": {
            "type": "string"
          }
        }
      },
      "Finnlarebedrift_Naringskodevelger": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "description": "NÃ¦ringskoden",
            "type": "string"
          },
          "name": {
            "description": "NÃ¦ringskodenavn",
            "type": "string"
          },
          "shortname": {
            "description": "Kortversjon av nÃ¦ringskodenavnet",
            "type": "string"
          },
          "children": {
            "description": "Barn til hovednÃ¦ringskoden",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Finnlarebedrift_Stedsvelger": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "fylker": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Forside.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Identifier for each tema. ID consists of name of result with whitespace replaced with '_'"
          },
          "tema": {
            "type": "string",
            "description": "Name of the result. Used in parameters for Kategori and Yrkeliste"
          },
          "kategori": {
            "description": "Alle underliggende kategorier",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForsideKategori.jsonld"
            }
          }
        }
      },
      "ForsideInteresse.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Identifier for each kategori. ID consists of name of result with whitespace replaced with '_'"
          },
          "interesse": {
            "type": "string",
            "description": "Name of each interesse"
          }
        }
      },
      "ForsideKategori.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Identifier for each kategori. ID consists of name of result with whitespace replaced with '_'"
          },
          "kategori": {
            "type": "string",
            "description": "Name of the result. Used in parameters for Yrkeliste"
          },
          "interesse": {
            "description": "Alle underliggende kategorier",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForsideInteresse.jsonld"
            }
          }
        }
      },
      "Fylke.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "navn": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "fylkenr": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "Garanti.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "lpg_koordinator_orgnr": {
            "type": "string",
            "tags": [
              "Finnlarebedrift"
            ]
          },
          "lpg_koordinator_url": {
            "type": "string"
          },
          "lpg_koordinator_navn": {
            "type": "string"
          }
        }
      },
      "GarantiGarantier.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "utdanning": {
            "type": "string"
          },
          "fylker": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Godkjenninger.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Interesser": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "uno_id": {
            "description": "utdanning.no ID",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KategorisystemerNus": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "nus_kode": {
            "type": "string"
          },
          "nus_kode_forelder": {
            "type": "string",
            "nullable": true
          },
          "nus_niva": {
            "type": "integer"
          },
          "nus_aktiv": {
            "type": "boolean"
          },
          "nus_navn_nb": {
            "type": "string"
          },
          "nus_kortnavn_nb": {
            "type": "string",
            "nullable": true
          },
          "nus_navn_nn": {
            "type": "string"
          },
          "nus_kortnavn_nn": {
            "type": "string",
            "nullable": true
          },
          "nus_navn_en": {
            "type": "string"
          },
          "nus_kortnavn_en": {
            "type": "string",
            "nullable": true
          },
          "isced2013_kode": {
            "type": "string",
            "nullable": true
          },
          "isced2013_navn": {
            "type": "string",
            "nullable": true
          },
          "drupal_last_updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KategorisystemerStyrk98": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "styrk98_kode": {
            "type": "string"
          },
          "styrk98_kategori": {
            "type": "string"
          },
          "styrk98_lopenr": {
            "type": "string"
          },
          "styrk98_tittel": {
            "type": "string"
          },
          "styrk08_kode": {
            "type": "string",
            "nullable": true
          },
          "styrk98_uno_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "styrk98_antall_ansatte": {
            "type": "integer",
            "nullable": true
          },
          "styrk98_antall_aarsverk": {
            "type": "number",
            "nullable": true
          },
          "styrk98_antall_orgs": {
            "type": "integer"
          },
          "styrk98_status": {
            "type": "boolean"
          }
        }
      },
      "Kategorisystemer_Styrk08": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "yrkeskode_styrk08": {
            "description": "Identifier for result",
            "type": "string"
          },
          "styrk08_navn": {
            "type": "string"
          },
          "styrk08_navn_en": {
            "type": "string"
          },
          "styrk08_kortnavn": {
            "type": "string"
          },
          "antall_personer": {
            "type": "integer"
          },
          "antall_menn": {
            "type": "integer"
          },
          "antall_kvinner": {
            "type": "integer"
          },
          "antall_40": {
            "type": "integer"
          },
          "antall_offentlig": {
            "type": "integer"
          },
          "antall_privat": {
            "type": "integer"
          },
          "antall_13": {
            "type": "integer"
          },
          "antall_710": {
            "type": "integer"
          },
          "andel_av_personer": {
            "type": "number"
          },
          "andel_av_13": {
            "type": "number"
          },
          "andel_av_710": {
            "type": "number"
          },
          "kildedato": {
            "type": "string"
          },
          "relaterte_yrker": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kategorisystemer_Styrk08_Yrke"
            }
          }
        }
      },
      "Kategorisystemer_Styrk08_Yrke": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "uno_id": {
            "type": "string"
          },
          "yrke_navn": {
            "type": "string"
          },
          "stat_vis_lonnstat": {
            "type": "boolean"
          },
          "stat_vis_sammenligning": {
            "type": "boolean"
          },
          "stat_vis_utdanningsbakgrunn": {
            "type": "boolean"
          }
        }
      },
      "Kommune": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "kommunenr": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "kommunenavn": {
            "type": "string"
          },
          "skoleregionnr": {
            "type": "string"
          },
          "skoleregionnavn": {
            "type": "string",
            "nullable": true
          },
          "visning": {
            "type": "boolean"
          }
        }
      },
      "Kontakt.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "epost": {
            "type": "string"
          },
          "telefon": {
            "type": "string"
          },
          "lenke": {
            "type": "string"
          }
        }
      },
      "Larling.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Larlinger.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "LarlingerIndikatorrapport.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "fylkenr": {
            "type": "string"
          },
          "fylkenavn": {
            "type": "string"
          },
          "kommunenr": {
            "type": "string"
          },
          "kommunenavn": {
            "type": "string"
          },
          "stillinger": {
            "type": "string"
          },
          "aarsverk": {
            "type": "string"
          },
          "ekstrahjelp": {
            "type": "string"
          },
          "larlinger_faget": {
            "type": "string"
          },
          "larlingtetthet": {
            "type": "string"
          },
          "godkjente_bedr": {
            "type": "string"
          },
          "utlopte_bedr": {
            "type": "string"
          },
          "bedr_med_larling": {
            "type": "string"
          },
          "bedr_med_larling_3aar": {
            "type": "string"
          },
          "potensielle_bedr1": {
            "type": "string"
          },
          "potensielle_bedr2": {
            "type": "string"
          },
          "yrke_nid": {
            "type": "string"
          },
          "yrke_tittel": {
            "type": "string"
          },
          "yrke_uno_id": {
            "type": "string"
          },
          "yrke_alias_url": {
            "type": "string"
          },
          "studiebeskrivelse_nid": {
            "type": "string"
          },
          "studiebeskrivelse_tittel": {
            "type": "string"
          },
          "studiebeskrivelse_uno_id": {
            "type": "string"
          },
          "studiebeskrivelse_alias_url": {
            "type": "string"
          },
          "programomradekode6": {
            "type": "string"
          },
          "nivaa": {
            "type": "string"
          },
          "yrkeskode_styrk98": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Larlinger_Valgte_Fag.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Larlinger_aarsverk_naringer.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "antall": {
            "description": "antall",
            "type": "integer"
          },
          "sum": {
            "description": "sum",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Latefy.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "antall": {
            "description": "antall",
            "type": "integer"
          },
          "sum": {
            "description": "sum",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Lateko.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "antall": {
            "description": "antall",
            "type": "integer"
          },
          "sum": {
            "description": "sum",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Legacy_Lopet_Sted": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "Identifier for result",
            "type": "string"
          }
        }
      },
      "Linje_Artikkel": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "nid": {
            "type": "int",
            "summary": "Identifier for result"
          },
          "tittel": {
            "type": "string"
          },
          "ingress": {
            "description": "A short description",
            "type": "string"
          },
          "kategori": {
            "description": "The category of the article",
            "type": "string"
          },
          "bilde_src": {
            "type": "string"
          },
          "bilde_alt": {
            "type": "string"
          },
          "paragraphs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Paragraph"
            }
          }
        }
      },
      "Linje_Artikkel_Kategori": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tittel": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "antall": {
            "description": "How many articles of this category",
            "type": "integer"
          }
        }
      },
      "Linje_FAQ": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "nid": {
            "type": "int",
            "summary": "Identifier for result"
          },
          "tittel": {
            "type": "string"
          },
          "tekst": {
            "description": "The answer to the question",
            "type": "string"
          },
          "kategori": {
            "description": "The category of the question",
            "type": "string"
          }
        }
      },
      "Linje_FAQ_Kategori": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tittel": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "antall": {
            "description": "How many faq of this category",
            "type": "integer"
          }
        }
      },
      "Linje_Kalender": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "nid": {
            "type": "int",
            "summary": "Identifier for result"
          },
          "tittel": {
            "type": "string"
          },
          "tekst": {
            "type": "string"
          },
          "dato": {
            "type": "string"
          },
          "knapp_href": {
            "type": "string"
          },
          "knapp_tekst": {
            "type": "string"
          }
        }
      },
      "Lonn": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {},
          "uno_id": {},
          "tittel": {},
          "title_suggest": {},
          "title_suggest_edge": {},
          "title_suggest_ngram": {},
          "title_s": {},
          "innholdstype": {},
          "nus": {},
          "nus_navn": {},
          "sektor": {},
          "ansiennnitet": {},
          "arbeidstid": {},
          "aldersklasse": {},
          "kilde": {},
          "styrk08_navn": {},
          "styrk08": {},
          "A_wage_median": {},
          "A_wage_avtalt_median": {},
          "A_wage_avtalt_avg": {},
          "A_wage_avtalt_q1": {},
          "A_wage_avtalt_q3": {},
          "A_wage_avg": {},
          "A_wage_q1": {},
          "A_wage_q3": {},
          "A_wage_bonus_avg": {},
          "A_wage_bonus_median": {},
          "A_wage_bonus_q1": {},
          "A_wage_bonus_q3": {},
          "A_wage_overtime_median": {},
          "A_wage_overtime_avg": {},
          "A_wage_overtime_q1": {},
          "A_wage_overtime_q3": {},
          "A_wage_uregtil_avg": {},
          "A_wage_uregtil_median": {},
          "A_wage_uregtil_q1": {},
          "A_wage_uregtil_q3": {},
          "A_antall_asnatte": {},
          "M_wage_median": {},
          "M_wage_avtalt_median": {},
          "M_wage_avtalt_avg": {},
          "M_wage_avtalt_q1": {},
          "M_wage_avtalt_q3": {},
          "M_wage_avg": {},
          "M_wage_q1": {},
          "M_wage_q3": {},
          "M_wage_bonus_avg": {},
          "M_wage_bonus_median": {},
          "M_wage_bonus_q1": {},
          "M_wage_bonus_q3": {},
          "M_wage_overtime_median": {},
          "M_wage_overtime_avg": {},
          "M_wage_overtime_q1": {},
          "M_wage_overtime_q3": {},
          "M_wage_uregtil_avg": {},
          "M_wage_uregtil_median": {},
          "M_wage_uregtil_q1": {},
          "M_wage_uregtil_q3": {},
          "M_antall_asnatte": {},
          "K_wage_median": {},
          "K_wage_avtalt_median": {},
          "K_wage_avtalt_avg": {},
          "K_wage_avtalt_q1": {},
          "K_wage_avtalt_q3": {},
          "K_wage_avg": {},
          "K_wage_q1": {},
          "K_wage_q3": {},
          "K_wage_bonus_avg": {},
          "K_wage_bonus_median": {},
          "K_wage_bonus_q1": {},
          "K_wage_bonus_q3": {},
          "K_wage_overtime_median": {},
          "K_wage_overtime_avg": {},
          "K_wage_overtime_q1": {},
          "K_wage_overtime_q3": {},
          "K_wage_uregtil_avg": {},
          "K_wage_uregtil_median": {},
          "K_wage_uregtil_q1": {},
          "K_wage_uregtil_q3": {},
          "K_antall_asnatte": {},
          "path": {},
          "_version_": {},
          "ansiennitet": {},
          "dato": {},
          "funksjon": {}
        }
      },
      "Lopet": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "Main": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {},
          "uno_id": {},
          "innholdstype": {},
          "tittel": {},
          "title_suggest": {},
          "title_suggest_ngram": {},
          "title_suggest_edge": {},
          "title_s": {},
          "url": {},
          "utdanningstype": {},
          "interesser": {},
          "styrk08": {},
          "yrkeskode_styrk98": {},
          "nus": {},
          "stat_vis_sammenligning": {},
          "stat_vis_lonnstat": {},
          "stat_vis_arb_markedskart": {},
          "programomradekode10": {},
          "programomradekode6": {},
          "sektor_antall_personer": {},
          "sektor_antall_offentlig": {},
          "sektor_antall_privat": {},
          "sektor_antall_selvstendig": {},
          "sektor_antall_ikkearbeid": {},
          "sektor_antall_iutdanning": {},
          "sektor_antall_arbeidsledig": {},
          "yrke_utdanningbetegnelse": {},
          "sokeord": {},
          "sokeord_s": {},
          "sokeord_suggest": {},
          "sokeord_suggest_edge": {},
          "sokeord_suggest_ngram": {},
          "score": {},
          "path": {},
          "_version_": {},
          "kildedato": {},
          "funksjon": {}
        }
      },
      "Malgruppe": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "Unique identifier for this data object"
          },
          "tittel": {
            "type": "string"
          },
          "ingress": {
            "type": "string"
          },
          "side_url": {
            "type": "string"
          },
          "bilde_url": {
            "type": "string"
          },
          "bilde_alt": {
            "type": "string"
          },
          "malgrupper": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NavExportProgramomraade": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode10": {
            "type": "string"
          },
          "programomrade_tittel": {
            "type": "string"
          },
          "nasjonal_linje": {
            "type": "boolean"
          },
          "utdanningsprogram_type": {
            "type": "string",
            "enum": [
              "Yrkesfaglig utdanningsprogram",
              "Studieforberedende utdanningsprogram",
              null
            ],
            "nullable": true
          },
          "opplaringssted": {
            "type": "string",
            "enum": [
              "Skole",
              "Bedrift",
              null
            ],
            "nullable": true
          },
          "programomrade_type": {
            "type": "string",
            "enum": [
              "Skole(Elev)",
              "Bedrift(LÃ¦rling)",
              "SÃ¦rlÃ¸p"
            ]
          },
          "forste_semester": {
            "type": "string"
          },
          "siste_semester": {
            "type": "string",
            "nullable": true
          },
          "sluttkompetanse": {
            "type": "string",
            "enum": [
              "Fagbrev",
              "Svennebrev",
              "Studiekompetanse",
              "Yrkeskompetanse",
              null
            ],
            "nullable": true
          },
          "aktiv": {
            "description": "Om entiteten er gyldig pÃ¥ det nÃ¥vÃ¦rende tidspunkt",
            "type": "boolean"
          },
          "calculated_status": {
            "type": "string",
            "enum": [
              "GYLDIG",
              "KOMMENDE",
              "UTGAAENDE",
              "UTGAATT"
            ]
          },
          "canonical_path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "utdanningsbeskrivelse_uno_id": {
            "type": "string",
            "nullable": true
          },
          "nus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavExportProgramomraadeNus"
            }
          }
        }
      },
      "NavExportProgramomraadeNus": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "nus_kode": {
            "type": "string"
          },
          "nus_niva": {
            "type": "string"
          },
          "nus_aktiv": {
            "type": "boolean"
          },
          "nus_navn_nb": {
            "type": "string"
          },
          "nus_navn_nn": {
            "type": "string"
          },
          "nus_navn_en": {
            "type": "string"
          }
        }
      },
      "Navnesok": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "orgnr": {
            "type": "int",
            "summary": "Identifier for result"
          },
          "navn": {
            "description": "navn",
            "type": "string"
          }
        }
      },
      "Onet_by_occupation.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uno_id": {
            "type": "string",
            "summary": "Utdanning.no id for et gitt yrke"
          },
          "yrke_nid": {
            "type": "string",
            "summary": "id for et gitt yrke"
          },
          "yrke_tittel": {
            "type": "string",
            "summary": "Tittel pÃ¥ yrke"
          },
          "stat_vis_onet": {
            "type": "string",
            "summary": "1|0 for Ã¥ vite om yrket skal vises i O*Net"
          },
          "soc_kode": {
            "type": "string",
            "summary": "Amerikansk kode for yrke"
          },
          "soc_yrke_en": {
            "type": "string",
            "summary": "Amerikansk tittel pÃ¥ yrke"
          },
          "abilities": {
            "description": "Alle abilities fra O*Net",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Children.jsonld"
            }
          },
          "work_activities": {
            "description": "Alle work_activities fra O*Net",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Children.jsonld"
            }
          },
          "work_values": {
            "description": "Alle work_values fra O*Net",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Children.jsonld"
            }
          },
          "skills": {
            "description": "Alle skills fra O*Net",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Children.jsonld"
            }
          },
          "work_styles": {
            "description": "Alle work_styles fra O*Net",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Children.jsonld"
            }
          },
          "knowledge": {
            "description": "Alle knowledge fra O*Net",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Children.jsonld"
            }
          }
        }
      },
      "Onet_by_value.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uno_id": {
            "type": "string",
            "summary": "Utdanning.no id for et gitt yrke"
          },
          "yrke_nid": {
            "type": "string",
            "summary": "id for et gitt yrke"
          },
          "yrke_tittel": {
            "type": "string",
            "summary": "Tittel pÃ¥ yrke"
          },
          "stat_vis_onet": {
            "type": "string",
            "summary": "1|0 for Ã¥ vite om yrket skal vises i O*Net"
          },
          "soc_kode": {
            "type": "string",
            "summary": "Amerikansk kode for yrket"
          },
          "lonn": {
            "type": "float",
            "summary": "lonn for et gitt yrke"
          },
          "interesser": {
            "summary": "alle interesser for et yrke",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "element_id": {
            "type": "string",
            "summary": "Id of a element"
          },
          "soc_yrke_en": {
            "type": "string",
            "summary": "Amerikans tittel pÃ¥ yrke"
          },
          "l_data_value": {
            "type": "float",
            "summary": "Level required"
          },
          "i_data_value": {
            "type": "float",
            "summary": "Importance of a given element"
          },
          "l_lower_ci": {
            "type": "float"
          },
          "l_upper_ci": {
            "type": "float"
          },
          "i_lower_ci": {
            "type": "float"
          },
          "i_upper_ci": {
            "type": "float",
            "summary": "id for et gitt yrke"
          }
        }
      },
      "Onet_by_yrke.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {},
          "uno_id": {
            "type": "string",
            "summary": "Utdanning.no id for et gitt yrke"
          },
          "yrke_nid": {
            "type": "string",
            "summary": "id for et gitt yrke"
          },
          "yrke_tittel": {
            "type": "string",
            "summary": "Tittel pÃ¥ yrke"
          },
          "soc_kode": {
            "type": "string",
            "summary": "Amerikansk kode for yrket"
          },
          "lonn": {
            "type": "float",
            "summary": "Median lÃ¸nn for hvert yrke"
          },
          "utdniva_nus0": {
            "type": "int",
            "summary": ""
          },
          "utdniva_nus4": {
            "type": "int",
            "summary": ""
          },
          "utdniva_nus5": {
            "type": "int",
            "summary": ""
          },
          "utdniva_nus6": {
            "type": "int",
            "summary": ""
          },
          "utdniva_nus7": {
            "type": "int",
            "summary": ""
          },
          "utdniva_nus8": {
            "type": "int",
            "summary": ""
          },
          "barn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Barn.jsonld"
            }
          }
        }
      },
      "Onet_by_yrker.jsonld": {
        "type": "object",
        "description": "Class Onet",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uno_id": {
            "description": "Utdanning.no id for et gitt yrke",
            "type": "string"
          },
          "yrke_nid": {
            "description": "id for et gitt yrke",
            "type": "string"
          },
          "yrke_tittel": {
            "description": "Tittel pÃ¥ yrke",
            "type": "string"
          },
          "soc_kode": {
            "description": "Amerikansk kode for yrket",
            "type": "string"
          },
          "lonn": {
            "description": "Median lÃ¸nn for hvert yrke",
            "type": "number"
          },
          "yrke_summary": {
            "description": "Beskrivelse av yrket",
            "type": "string"
          },
          "yrke_beskrivelse_url": {
            "description": "Url til yrket pÃ¥ utdanning.no",
            "type": "string"
          },
          "utdanning_beskrivelse_url": {
            "description": "Url til utdanning pÃ¥ utdanning.no",
            "type": "string"
          },
          "interesser": {
            "description": "Interesser som er knyttet til yrket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "programomrade_lop": {
            "description": "ProgramomrÃ¥de hovedlop som er knyttet til yrket",
            "type": "string"
          },
          "programomrade_krysslop": {
            "description": "ProgramomrÃ¥de krysslop som er knyttet til yrket",
            "type": "string"
          },
          "programomradekode6": {
            "description": "ProgramomrÃ¥dekode6 som er knyttet til yrket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "yrke_illustrasjon": {
            "description": "Illustrasjon av yrker med stiler",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Onet_types.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "ID for en enkel onet_type"
          },
          "onet_type": {
            "type": "string",
            "summary": "Navn pÃ¥ typen"
          },
          "element_id": {
            "type": "string",
            "summary": "Element ID"
          },
          "element_description_en": {
            "type": "string",
            "summary": "Engelsk besrkvielse av elementet"
          },
          "element_name_en": {
            "type": "string",
            "summary": "Engelsk navn pÃ¥ elementet"
          },
          "element_description_nb": {
            "type": "string",
            "summary": "Norsk besrkvielse av elementet"
          },
          "element_name_nb": {
            "type": "string",
            "summary": "Norsk navn pÃ¥ elementet"
          }
        }
      },
      "Opplaring.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "unike": {
            "description": "TODO write description",
            "type": "integer"
          },
          "opplaring_navn": {
            "description": "TODO write description",
            "type": "integer"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Opplaringskontor.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Opsjon": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "int",
            "summary": "En statisk, men vilkÃ¥rlig id"
          },
          "tittel": {
            "description": "Tittel",
            "type": "string",
            "nullable": true
          },
          "beskrivelse": {
            "description": "Beskrivelse",
            "type": "string",
            "nullable": true
          },
          "ingress": {
            "description": "Utfyllende tekst",
            "type": "string",
            "nullable": true
          },
          "info": {
            "description": "Utfyllende tekst",
            "type": "string",
            "nullable": true
          },
          "ordningslenke": {
            "type": "string",
            "nullable": true
          },
          "fag": {
            "description": "Fagene som opsjonen inneholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vei": {
            "description": "MÃ¥ten du fÃ¸lger innholdet I solr er dette distributionOfYears",
            "$ref": "#/components/schemas/YearPath"
          },
          "vei_beskrivelse": {
            "description": "MÃ¥ten du fÃ¸lger innholdet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/YearDescription"
            }
          },
          "vei_varighet": {
            "description": "MÃ¥ten du fÃ¸lger innholdet",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Organisasjon.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "organisasjon_id": {
            "description": "The organisation identifier",
            "type": "string"
          },
          "organisasjon_navn": {
            "type": "string"
          },
          "organisasjon_type": {
            "type": "string"
          }
        }
      },
      "OvttasEmne": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "OvttasInnholdstype": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "OvttasLanguage": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "OvttasNivaa": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "OvttasSearchResult": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "OvttasSuggest": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "OvttasTilgjengelighet": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "Paragraph": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tittel": {
            "type": "string"
          },
          "tekst": {
            "type": "string"
          },
          "bilde_src": {
            "type": "string"
          },
          "bilde_alt": {
            "type": "string"
          },
          "knapp_href": {
            "type": "string"
          },
          "knapp_tekst": {
            "type": "string"
          }
        }
      },
      "Paths": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "summary": "Url for sidene pÃ¥ utdanning.no som vi viser data for pÃ¥ ga4/views"
          }
        }
      },
      "Points.jsonld-points.collection": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "ID"
          }
        }
      },
      "PotensielleBedrifter.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "orgnr": {
            "type": "string"
          },
          "navn": {
            "type": "string"
          },
          "fylkenr": {
            "type": "string"
          },
          "fylkenavn": {
            "type": "string"
          },
          "kommunenr": {
            "type": "string"
          },
          "kommunenavn": {
            "type": "string"
          },
          "stillinger": {
            "type": "string"
          }
        }
      },
      "PotensielleBedrifterInfo": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "count": {
            "description": "The amount of companies in the set",
            "type": "integer"
          },
          "aarsverk": {
            "description": "The total sum of man hours where 1.0 means a 100% position. Nb: 1.0 can also be two 50% positions\n(This value will be set to 2 if the original value was between 1 and 4)",
            "type": "number"
          }
        }
      },
      "PotensielleLarebedrifter.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "orgnr": {
            "type": "string"
          },
          "hovedenhet": {
            "type": "string"
          },
          "navn": {
            "type": "string"
          },
          "fylkenr": {
            "type": "string"
          },
          "fylkenavn": {
            "type": "string"
          },
          "kommunenr": {
            "type": "string"
          },
          "kommunenavn": {
            "type": "string"
          },
          "stillinger": {
            "description": "(Verdien settes til 2 om den opprinnelige verdien var mindre enn 5)",
            "type": "string"
          },
          "aarsverk": {
            "description": "(Verdien settes til 2 om den opprinnelige verdien var mindre enn 5)",
            "type": "string"
          },
          "vikarstillinger": {
            "type": "string"
          },
          "programomradekode6": {
            "type": "string"
          },
          "telefon_virksomhet": {
            "type": "string"
          },
          "mobil_virksomhet": {
            "type": "string"
          },
          "url_virksomhet": {
            "type": "string"
          },
          "besoksadr_virksomhet": {
            "type": "string"
          },
          "postnr_virksomhet": {
            "type": "string"
          },
          "poststed_virksomhet": {
            "type": "string"
          },
          "studiebeskrivelse_nid": {
            "type": "string"
          },
          "studiebeskrivelse_tittel": {
            "type": "string"
          },
          "programomradekode10": {
            "type": "string"
          },
          "yrke_nid": {
            "type": "string"
          },
          "yrke_tittel": {
            "type": "string"
          },
          "yrkeskode_styrk98": {
            "type": "string"
          },
          "larebedrift_faget": {
            "type": "string"
          },
          "larebedrift_annet_fag": {
            "type": "string"
          },
          "larlinger_faget": {
            "type": "string"
          },
          "larlinger_totalt": {
            "type": "string"
          },
          "medlem_ok_faget": {
            "type": "string"
          },
          "navn_daglig_leder": {
            "type": "string"
          },
          "adresse_daglig_leder": {
            "type": "string"
          },
          "postnr_daglig_leder": {
            "type": "string"
          },
          "poststed_daglig_leder": {
            "type": "string"
          },
          "land_daglig_leder": {
            "type": "string"
          }
        }
      },
      "PotensielleLarebedrifterInfo": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "count": {
            "description": "The amount of companies in the set",
            "type": "integer"
          },
          "aarsverk": {
            "description": "The total sum of man hours where 1.0 means a 100% position. Nb: 1.0 can also be two 50% positions\n(This value will be set to 2 if the original value was between 1 and 4)",
            "type": "number"
          },
          "larlinger": {
            "description": "Sums the amount of apprentices",
            "type": "integer"
          },
          "larebedrifter": {
            "description": "Sums the amount of businesses which can accept lÃ¦arlinger",
            "type": "integer"
          },
          "opplaringskontor": {
            "description": "Sums the amount of opplaringskontor",
            "type": "integer"
          }
        }
      },
      "Program": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "Programomrade": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode10": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "programomradekode6": {
            "type": "string"
          },
          "programomrade_tittel": {
            "description": "The name of the program in the GREP database",
            "type": "string"
          },
          "utdanningsprogram_type": {
            "description": "Is the base program a profession-based (Yrkesfag), or general (Studie) education",
            "type": "string"
          },
          "opplaeringssted": {
            "description": "Is the program done in school or as an apprenticeship",
            "type": "string"
          },
          "varighet": {
            "type": "string"
          },
          "sluttkompetanse": {
            "type": "string"
          },
          "yrkestittel": {
            "description": "The title of the profession this program gives you",
            "type": "string"
          },
          "utdanningsbeskrivelse_tittel": {
            "description": "The name given by the editorial staff. NB. Not for every program",
            "type": "string"
          },
          "utdanningsprogram_tittel": {
            "description": "The name of the base program",
            "type": "string"
          },
          "is_krysslop": {
            "description": "Is it crossing over from another base program. In the individual endpoint this will always be false",
            "type": "boolean"
          },
          "children": {},
          "nasjonal_linje": {
            "type": "boolean"
          },
          "skoler": {
            "description": "A list of schools offering this program",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timefordeling": {
            "description": "A list of schools offering this program",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timefordeling"
            }
          },
          "interesser": {
            "description": "En liste med interesser du trenger",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Region.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "navn": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "fylker_nummer": {
            "type": "string"
          },
          "fylker_navn": {
            "type": "string"
          }
        }
      },
      "Result.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "forradrkommnavn": {
            "description": "forradrkommnavn",
            "type": "string"
          },
          "leaf_node": {
            "description": "leaf_node",
            "type": "string"
          },
          "path": {
            "description": "path",
            "type": "string"
          },
          "hovedenhet_navn": {
            "description": "Navn pÃ¥ hovedenhet",
            "type": "string"
          },
          "orgnr": {
            "description": "organisasjonsnummer for bedriften",
            "type": "string"
          },
          "forradrkommnr": {
            "description": "forradrkommnr",
            "type": "string"
          },
          "navn": {
            "description": "navn pÃ¥ bedriften",
            "type": "string"
          },
          "forradrfylkenavn": {
            "description": "forradrfylkenavn",
            "type": "string"
          },
          "organisasjonsform_tittel": {
            "description": "organisasjonsform_tittel",
            "type": "string"
          },
          "sektorkode": {
            "description": "sektorkode",
            "type": "string"
          },
          "postadresse": {
            "description": "postadresse",
            "type": "string"
          },
          "leaf_and_parent_vigo_godkjenninger_m_larling": {
            "description": "leaf_and_parent_vigo_godkjenninger_m_larling",
            "type": "string"
          },
          "hovedenhet": {
            "description": "hovedenhet",
            "type": "string"
          },
          "leaf_and_parent_vigo_uten_godkjenninger": {
            "description": "leaf_and_parent_vigo_uten_godkjenninger",
            "type": "string"
          },
          "ppostnr": {
            "description": "ppostnr",
            "type": "string"
          },
          "tilbyr_arbeidskrafttjenester": {
            "description": "tilbyr_arbeidskrafttjenester",
            "type": "string"
          },
          "forradrpostnr": {
            "description": "forradrpostnr",
            "type": "string"
          },
          "ppoststed": {
            "description": "ppoststed",
            "type": "string"
          },
          "forradrfylkenr": {
            "description": "forradrfylkenr",
            "type": "string"
          },
          "bedriftens_aarsverk": {
            "description": "Bedriftens totale Ã¥rsverk. ( Verdien settes til -1 om den orginale verdien er <= 5)",
            "type": "integer"
          },
          "forradrland": {
            "description": "forradrland",
            "type": "string"
          },
          "forradrpoststed": {
            "description": "forradrpoststed",
            "type": "string"
          },
          "telefon": {},
          "organisasjonsform_kode": {},
          "lopende_kontrakter_totalt": {},
          "leaf_and_parent_medlem_opplaringskontor_orgnavn": {},
          "ppostland": {},
          "ansatte_totalt": {
            "description": "Antall ansatte i en gitt bedrift (Verdien settes til 2 om den er <= 3)",
            "type": "integer"
          },
          "antall_stillinger": {},
          "forretningsadr": {},
          "latlng_1_coordinate": {},
          "parent_orgnumbers": {},
          "parent_vigo_contracts": {
            "description": "Antall vigo-kontrakter for foreldre",
            "type": "integer"
          },
          "leaf_and_parent_medlem_opplaringskontor_orgnr": {},
          "latlng_0_coordinate": {},
          "programomradekode6_med_ansatte": {},
          "parent_godkjenninger": {},
          "yrke_aarsverk": {},
          "children_orgnumbers": {},
          "vigo_navn_opplaringskontor": {},
          "vigo_orgnr": {},
          "godkjenning_url": {},
          "godkjenning_beskrivelse": {},
          "leaf_and_parent_vigo_godkjenninger_utlopte": {},
          "children_orgnames": {},
          "yrke_orgnr": {},
          "leaf_and_parent_vigo_godkjenninger_u_larling": {},
          "vigo_forradrfylkenr": {},
          "forelder_avstand": {},
          "avtale_yff_skole_navn": {},
          "godkjenning_registernavn": {},
          "vigo_fylkenr": {},
          "url": {},
          "avtale_yff_avtale_nid": {},
          "vigo_programomradekode6": {},
          "vigo_programomradekode5": {},
          "avtale_yff_sluttkompetanse_navn": {},
          "vigo_lopenr": {},
          "rolle_person": {},
          "yrke_nid": {},
          "yrke_programomradekode6_hovedlop": {},
          "avtale_yff_orgnr": {},
          "forelder_orgnr": {},
          "rolle": {},
          "avtale_yff_skole_nid": {},
          "vigo_forradrfylkenavn": {},
          "mobil": {},
          "leaf_godkjenninger": {},
          "yrkeskode_styrk98_programomradekode6_hovedlop": {},
          "yrkeskode_styrk98": {},
          "avtale_yff_programomradekode6": {},
          "vigo_godkjent_til_dato": {},
          "godkjenning_godkjenner": {},
          "forelder_navn": {},
          "vigo_programomrade_tittel": {},
          "vigo_sum_kontrakter": {},
          "rolle_person_poststed": {},
          "leaf_and_parent_avtaler_yff": {},
          "aarsverk": {},
          "godkjenninger": {},
          "children_distances": {},
          "sektorkode_tittel": {},
          "vigo_fylkenavn": {},
          "vigo_orgnr_opplaringskontor": {},
          "medlemsbedrifter_larlinger_totalt": {},
          "_other_data": {},
          "_child_documents": {}
        }
      },
      "SearchFacet.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "val": {
            "type": "string",
            "summary": "Facet value"
          },
          "count": {
            "type": "int",
            "summary": "Facet count"
          }
        }
      },
      "SearchLog": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "search_keyword": {
            "readOnly": true,
            "type": "string"
          },
          "log_time": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "search_domain": {
            "readOnly": true,
            "type": "string"
          },
          "result_count": {
            "readOnly": true,
            "type": "integer",
            "nullable": true
          },
          "result_time_msec": {
            "readOnly": true,
            "type": "integer",
            "nullable": true
          },
          "search_parameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchLogParameter"
            }
          },
          "error_message": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "starting_from": {
            "readOnly": true,
            "type": "integer"
          },
          "search_session": {
            "readOnly": true,
            "type": "string"
          },
          "searchKeyword": {
            "type": "string"
          },
          "logTime": {
            "type": "string",
            "format": "date-time"
          },
          "searchDomain": {
            "type": "string"
          },
          "resultCount": {
            "type": "integer",
            "nullable": true
          },
          "resultTimeMsec": {
            "type": "integer",
            "nullable": true
          },
          "searchParameters": {
            "$ref": "#/components/schemas/Collection"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "startingFrom": {
            "type": "integer"
          },
          "searchSession": {
            "type": "string"
          }
        }
      },
      "SearchLog.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "search_keyword": {
            "readOnly": true,
            "type": "string"
          },
          "log_time": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "search_domain": {
            "readOnly": true,
            "type": "string"
          },
          "result_count": {
            "readOnly": true,
            "type": "integer",
            "nullable": true
          },
          "result_time_msec": {
            "readOnly": true,
            "type": "integer",
            "nullable": true
          },
          "search_parameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchLogParameter.jsonld"
            }
          },
          "error_message": {
            "readOnly": true,
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "starting_from": {
            "readOnly": true,
            "type": "integer"
          },
          "search_session": {
            "readOnly": true,
            "type": "string"
          },
          "searchKeyword": {
            "type": "string"
          },
          "logTime": {
            "type": "string",
            "format": "date-time"
          },
          "searchDomain": {
            "type": "string"
          },
          "resultCount": {
            "type": "integer",
            "nullable": true
          },
          "resultTimeMsec": {
            "type": "integer",
            "nullable": true
          },
          "searchParameters": {
            "$ref": "#/components/schemas/Collection.jsonld"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "startingFrom": {
            "type": "integer"
          },
          "searchSession": {
            "type": "string"
          }
        }
      },
      "SearchLogParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "search_log_id": {
            "readOnly": true,
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "searchLogId": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "SearchLogParameter.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "search_log_id": {
            "readOnly": true,
            "type": "string",
            "format": "iri-reference"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "searchLogId": {
            "type": "string",
            "format": "iri-reference",
            "nullable": true
          }
        }
      },
      "SearchResult.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "title": {
            "description": "The entity label",
            "type": "string"
          },
          "type": {
            "description": "Drupal's entity type label",
            "type": "string"
          },
          "entity_type_id": {
            "description": "Drupal's entity type machine name",
            "type": "string"
          },
          "entity_id": {
            "description": "Drupal's entity id",
            "type": "string"
          },
          "description": {
            "description": "Indexed field_beskrivelse",
            "type": "string"
          },
          "url": {
            "description": "The url to the entity",
            "type": "string"
          },
          "image_url": {
            "description": "Image url to an image belonging to the entity",
            "type": "string"
          },
          "image_title": {
            "description": "Image title to an image belonging to the entity",
            "type": "string"
          },
          "image_alt": {
            "description": "Image alt to an image belonging to the entity",
            "type": "string"
          },
          "main_facet": {
            "description": "The main facet group",
            "type": "string"
          },
          "larested": {
            "description": "LÃ¦rested",
            "type": "string"
          },
          "d7_nid": {
            "description": "D7 nid (temporary)",
            "type": "string"
          },
          "site": {
            "description": "Site",
            "type": "string"
          },
          "stedsnavn": {
            "description": "Stedsnavn",
            "type": "string"
          },
          "organisasjon": {
            "description": "Organisasjon",
            "type": "string"
          },
          "utdanningsniva": {
            "description": "Utdanningsniva",
            "type": "string"
          },
          "score": {
            "description": "Score",
            "type": "number"
          },
          "forste_semester": {
            "description": "The first semester this program is valid from eg \"HÃ¸st 2021\"",
            "type": "string"
          },
          "siste_semester": {
            "description": "The last semester this program is valid from eg \"HÃ¸st 2090\"",
            "type": "string"
          },
          "program_status": {
            "description": "Is the program GYLDIG, UTLÃPENDE, UTLÃPT or KOMMENDE. Calculated from forste_semester and siste_semester",
            "type": "string"
          }
        }
      },
      "Skole": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "vilbli_org_id": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "skolenavn": {
            "type": "string"
          },
          "skoleregionnr": {
            "type": "string"
          },
          "visning": {
            "type": "boolean"
          }
        }
      },
      "Skoleliste": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "fylkenr": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "fylkenavn": {
            "description": "County name",
            "type": "string"
          },
          "visning": {
            "description": "Should this be shown",
            "type": "boolean"
          },
          "skoler": {
            "description": "The schools in the county",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skole"
            }
          },
          "kommuner": {
            "description": "The Municipalities in this county",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kommune"
            }
          }
        }
      },
      "Sted.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "Stedsvelger": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "regionkode": {},
          "regionnavn": {},
          "gyldig_fra": {},
          "gyldig_til": {},
          "gyldig": {}
        }
      },
      "Stedsvelger_Fylke": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "fylkenr": {
            "description": "The id of the county",
            "type": "string"
          },
          "fylkenavn": {
            "type": "string"
          },
          "fylketype": {
            "description": "Is it part of the mainland fylker, or extras. Either `HOVED` or `EXTRA`",
            "type": "string"
          },
          "har_videregaende_skoler": {
            "description": "Does the county contain high schools",
            "type": "string"
          },
          "har_bedrifter": {
            "description": "Does the county contain companies",
            "type": "string"
          },
          "region": {
            "description": "Region in utdanning.nos region system",
            "type": "string"
          },
          "kommuner": {
            "description": "The municipalities in this county",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stedsvelger_Kommune"
            }
          }
        }
      },
      "Stedsvelger_Kommune": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "kommunenr": {
            "description": "Identifier for the Municipality",
            "type": "string"
          },
          "kommunenavn": {
            "description": "Name of the municipality",
            "type": "string"
          },
          "fylkenr": {
            "description": "The id of the county",
            "type": "string"
          }
        }
      },
      "StillingerYrke": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {},
          "uno_ids": {
            "description": "List of uno_ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uno_ids_titler": {
            "description": "List of the titles of the uno_ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "styrk08": {
            "type": "string"
          },
          "styrk08_navn": {
            "type": "string"
          },
          "styrk08_kortnavn": {
            "type": "string"
          },
          "antall_personer": {
            "type": "integer"
          },
          "antall_menn": {
            "type": "integer"
          },
          "antall_kvinner": {
            "type": "integer"
          },
          "antall_13": {
            "type": "integer"
          },
          "antall_40": {
            "type": "integer"
          },
          "antall_710": {
            "type": "integer"
          },
          "andel_13": {
            "type": "number"
          },
          "andel_710": {
            "type": "number"
          },
          "andel_personer": {
            "type": "number"
          },
          "kildedato": {
            "type": "string"
          }
        }
      },
      "Stillingsutlysning.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "id for hvert yrke, per Ã¥r per kommune.",
            "type": "string"
          },
          "aar": {
            "description": "aar for stillingsutlysninger",
            "type": "string"
          },
          "yrkeskode_styrk08": {
            "description": "styrk08 kode",
            "type": "string"
          },
          "yrkeskode_styrk08_navn": {
            "description": "styrk08 kode navn",
            "type": "string"
          },
          "innholdstype": {
            "description": "innholdstye",
            "type": "string"
          },
          "kommunenr": {
            "description": "kommune nummer",
            "type": "integer"
          },
          "kommunenavn": {
            "description": "kommune navn",
            "type": "string"
          },
          "antall_stillinger": {
            "description": "antall stillinger for hver styrk08 kode",
            "type": "integer"
          },
          "antall_utlysninger": {
            "description": "antall utlysninger for hver styrk08 kode",
            "type": "integer"
          },
          "antall_org": {
            "description": "antall organisasjoner med ansatte per styrk08, kommune nummer og Ã¥r",
            "type": "integer"
          },
          "opprinnelig_kommunenr": {
            "description": "opprinnelig kommune nummer",
            "type": "integer"
          },
          "opprinnelig_kommunenavn": {
            "description": "opprinnelig kommune navn",
            "type": "string"
          },
          "fylkenr": {
            "description": "fylkenummeret for hver uno_id",
            "type": "integer"
          },
          "fylkenavn": {
            "description": "fylkenavn for hver uno_id",
            "type": "string"
          },
          "region": {
            "description": "region",
            "type": "string"
          },
          "ba_region_nr": {
            "description": "ba_region_nr",
            "type": "string"
          },
          "ba_region_navn": {
            "description": "ba_region_navn",
            "type": "string"
          }
        }
      },
      "StudievelgerenFacet.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "val": {
            "type": "string",
            "summary": "Facet value"
          },
          "count": {
            "type": "int",
            "summary": "Facet count"
          }
        }
      },
      "StudievelgerenResult.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {},
          "title": {
            "description": "The entity label",
            "type": "string"
          },
          "type": {
            "description": "Drupal's entity type",
            "type": "string"
          },
          "entity_id": {
            "description": "Drupal's entity id",
            "type": "string"
          },
          "url": {
            "description": "The url to the entity",
            "type": "string"
          },
          "score": {
            "description": "Score",
            "type": "number"
          },
          "adgangstype": {
            "description": "adgangstype",
            "type": "string"
          },
          "alltext": {
            "description": "alltext",
            "type": "string"
          },
          "interesse": {
            "description": "interesse",
            "type": "string"
          },
          "fotnote": {
            "description": "fotnote",
            "type": "string"
          },
          "uh_tilbud_id": {
            "description": "uh_tilbud_id",
            "type": "string"
          },
          "utdanningsbeskrivelse_title": {
            "description": "utdanningsbeskrivelse_title",
            "type": "string"
          },
          "utdanningsbeskrivelse_url": {
            "description": "utdanningsbeskrivelse_url",
            "type": "string"
          },
          "uh_tilbud_title": {
            "description": "uh_tilbud_title",
            "type": "string"
          },
          "uh_tilbud_url": {
            "description": "uh_tilbud_url",
            "type": "string"
          },
          "so_kode": {
            "description": "so_kode",
            "type": "string"
          },
          "fylke": {
            "description": "fylke",
            "type": "string"
          },
          "hjemmeside": {
            "description": "hjemmeside",
            "type": "string"
          },
          "orgnr": {
            "description": "orgnr",
            "type": "string"
          },
          "organisasjon": {
            "description": "organisasjon",
            "type": "string"
          },
          "studieniva": {
            "description": "studieniva",
            "type": "string"
          },
          "studieplasser": {
            "description": "studieplasser",
            "type": "integer"
          },
          "poeng_forste": {
            "description": "poeng_forste",
            "type": "number"
          },
          "poeng_ordinar": {
            "description": "poeng_ordinar",
            "type": "number"
          },
          "kravkode": {
            "description": "kravkode",
            "type": "string"
          },
          "sokeord": {
            "description": "sokeord",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "studiepoeng": {
            "description": "studiepoeng",
            "type": "integer"
          },
          "deltid": {
            "description": "true/false verdi",
            "type": "boolean"
          },
          "nettbasert": {
            "description": "true/false verdi",
            "type": "boolean"
          },
          "samlingsbasert": {
            "description": "true/false verdi",
            "type": "boolean"
          }
        }
      },
      "Suggest": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tittel": {},
          "uno_id": {
            "type": "string",
            "summary": "Utdanning.no ID"
          }
        }
      },
      "Tidsserie.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "id for hver kommune/fylke. SlÃ¥tt sammen av kommune/fylke og dato.",
            "type": "string"
          },
          "dato": {
            "description": "dato for nÃ¥r dataen er fra",
            "type": "string"
          },
          "antall_ansatte": {
            "description": "antall ansatte per kommune/fylke for en gitt dato",
            "type": "integer"
          },
          "antall_aarsverk": {
            "description": "antall aarsverk per kommune/fylke for en gitt dato",
            "type": "integer"
          },
          "kommunenr": {
            "description": "kommunenummer hvor antall ansatte og antall aarsverk er",
            "type": "string"
          },
          "kommunenavn": {
            "description": "kommunenavnet tilhÃ¸rende kommunenummeret.",
            "type": "string"
          },
          "fylkenr": {
            "description": "fylkenummer hvor antall ansatte og antall aarsverk er.",
            "type": "string"
          },
          "fylkenavn": {
            "description": "fylkenavnet tilhÃ¸rende fylkenummer",
            "type": "string"
          },
          "region": {
            "description": "hvilken type region er dataen fra",
            "type": "string"
          }
        }
      },
      "Timefordeling": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "fag_tittel": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "timetall": {
            "type": "integer"
          },
          "alternativ": {
            "type": "boolean"
          },
          "timefordeling": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timefordeling"
            }
          },
          "farge": {
            "type": "string"
          }
        }
      },
      "Undervisningssted.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "undervisningssted_id": {},
          "undervisningssted_navn": {
            "type": "string"
          },
          "undervisningssted_breddegrad": {
            "type": "string"
          },
          "undervisningssted_lengdegrad": {
            "type": "string"
          },
          "undervisningssted_by": {
            "type": "string"
          },
          "undervisningssted_postnr": {
            "type": "string"
          },
          "undervisningssted_adresse": {
            "type": "string"
          },
          "fylkenr": {
            "type": "string"
          },
          "fylkenavn": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "organisasjoner": {
            "description": "The organisations using this campus",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisasjon.jsonld"
            }
          }
        }
      },
      "Utdanning2yrke": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "antall_personer": {},
          "styrk08_navn": {}
        }
      },
      "Utdanning_Yrke_RR": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "uno_ids": {
            "description": "List of uno_ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uno_ids_titler": {
            "description": "List of the titles of the uno_ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nus": {
            "type": "string"
          },
          "nus_navn": {
            "type": "string"
          },
          "nus_kortnavn": {
            "type": "string"
          },
          "nus_kortnavn_id": {
            "type": "string"
          },
          "styrk08": {
            "type": "string"
          },
          "styrk08_navn": {
            "type": "string"
          },
          "styrk08_kortnavn": {
            "type": "string"
          },
          "antall_styrk": {
            "type": "integer"
          },
          "antall_nus": {
            "type": "integer"
          },
          "antall_personer": {
            "type": "integer"
          },
          "antall_13": {
            "type": "integer"
          },
          "antall_710": {
            "type": "integer"
          },
          "andel_nus": {
            "type": "number"
          },
          "andel_styrk": {
            "type": "number"
          },
          "signifikant": {
            "type": "integer"
          },
          "misforhold": {
            "type": "number"
          },
          "misforhold_13": {
            "type": "number"
          },
          "misforhold_710": {
            "type": "number"
          },
          "forventet_antall": {
            "type": "number"
          },
          "forventet_antall_13": {
            "type": "number"
          },
          "forventet_antall_710": {
            "type": "number"
          },
          "kildedato": {
            "type": "string"
          }
        }
      },
      "Utdanningsniva": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "uno_ids": {
            "description": "List of uno_ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uno_ids_titler": {
            "description": "List of the titles of the uno_ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nus": {
            "type": "string"
          },
          "nus_navn": {
            "type": "string"
          },
          "nus_kortnavn": {
            "type": "string"
          },
          "nus_kortnavn_id": {
            "type": "string"
          },
          "antall_personer": {
            "type": "integer"
          },
          "antall_menn": {
            "type": "integer"
          },
          "antall_kvinner": {
            "type": "integer"
          },
          "antall_13": {
            "type": "integer"
          },
          "antall_40": {
            "type": "integer"
          },
          "antall_710": {
            "type": "integer"
          },
          "antall_offentlig": {
            "type": "integer"
          },
          "antall_privat": {
            "type": "integer"
          },
          "andel_13": {
            "type": "number"
          },
          "andel_710": {
            "type": "number"
          },
          "andel_personer": {
            "type": "number"
          },
          "kildedato": {
            "type": "string"
          }
        }
      },
      "Utdanningsprogram": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "summary": "Identifier for result"
          }
        }
      },
      "VgsLop": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode10": {
            "description": "Identifier for result",
            "type": "string"
          },
          "programomrade_tittel": {
            "description": "The name of the program in the GREP database",
            "type": "string"
          },
          "utdanningsprogram_type": {
            "description": "Is the base program a profession-based (Yrkesfag), or general (Studie) education",
            "type": "string"
          },
          "programomrade_type": {
            "type": "string"
          },
          "opplaringssted": {
            "description": "Is the program done in school or as an apprenticeship",
            "type": "string"
          },
          "varighet": {
            "type": "string"
          },
          "forste_semester": {
            "description": "The first time this programomrade was available",
            "type": "string"
          },
          "siste_semester": {
            "description": "The last time this programomrade was available",
            "type": "string"
          },
          "program_status": {
            "description": "Is the program GYLDIG, UTLÃPENDE, UTLÃPT or KOMMENDE. Calculated from forste_semester and siste_semester",
            "type": "string"
          },
          "is_krysslop": {
            "description": "Is it crossing over from another base program.",
            "type": "boolean"
          },
          "nasjonal_linje": {
            "type": "boolean"
          },
          "tilbys": {
            "description": "Tilbyr det gitte filteret dette programmet",
            "type": "boolean"
          },
          "canonical_path": {
            "description": "Hvordan komme til dette programmet",
            "type": "boolean"
          }
        }
      },
      "VgsNus": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "nus_kode": {
            "type": "string"
          },
          "nus_niva": {
            "type": "string"
          },
          "nus_aktiv": {
            "type": "boolean"
          },
          "nus_navn_nb": {
            "type": "string"
          },
          "nus_navn_nn": {
            "type": "string"
          },
          "nus_navn_en": {
            "type": "string"
          }
        }
      },
      "VgsProgramomradeInfo": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode10": {},
          "programomrade_tittel": {
            "description": "The name of the program in the GREP database",
            "type": "string"
          },
          "utdanningsprogram_type": {
            "description": "Is the base program a profession-based (Yrkesfag), or general (Studie) education",
            "type": "string"
          },
          "programomrade_type": {
            "type": "string"
          },
          "opplaringssted": {
            "description": "Is the program done in school or as an apprenticeship",
            "type": "string"
          },
          "varighet": {
            "type": "string"
          },
          "forste_semester": {
            "description": "The first time this programomrade was available",
            "type": "string"
          },
          "siste_semester": {
            "description": "The last time this programomrade was available",
            "type": "string"
          },
          "program_status": {
            "description": "Is the program GYLDIG, UTLÃPENDE, UTLÃPT or KOMMENDE. Calculated from forste_semester and siste_semester",
            "type": "string"
          },
          "nasjonal_linje": {
            "type": "boolean"
          },
          "sluttkompetanse": {
            "description": "Hvilken type sluttkompetanse fÃ¸rer dette til [Fagbrev, Svennebrev, Studiekompetanse, Ykeskompetanse]",
            "type": "string"
          },
          "vilbli_org_ids": {
            "description": "Hvilke skoler tilbyr denne utdanningsbeskrivelsen",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gyldige_kommuner": {
            "description": "Hvilke kommuner tilbyr dette programmet",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gyldige_fylker": {
            "description": "Hvilke fylker tilbyr dette programmet",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gyldige_skoleregioner": {
            "description": "Hvilke skoleregioner tilbyr dette programmet",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "varianter": {
            "description": "Liste over varianter som eksisterer",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VgsVarianter"
            }
          },
          "timefordeling": {
            "description": "Timefordelingen til programmet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VgsTimefordeling"
            }
          },
          "utdanningsbeskrivelse": {
            "description": "Utdanningsbeskrivelsen til programmet",
            "$ref": "#/components/schemas/VgsUtdanningsbeskrivelse"
          },
          "canonical_path": {
            "description": "Hvordan komme til dette programmet",
            "type": "boolean"
          },
          "interesser": {
            "description": "Hvilke interesser bÃ¸r du ha for Ã¥ ta programmet",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "VgsSkole": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "vilbli_org_id": {
            "description": "IDen til skolen i Vilblis systemer",
            "type": "string"
          },
          "skolenummer": {
            "description": "IDen til skolen i vigos systemer",
            "type": "string"
          },
          "skolenavn": {
            "description": "Navnet til skolen",
            "type": "string"
          },
          "fylkenr": {
            "description": "Fylket skolen ligger i",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunen skolen ligger i",
            "type": "string"
          },
          "tilbyr_programmer": {
            "description": "Hvilke programomrÃ¥der tilbyr skolen i",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gyldige_kommuner": {
            "description": "Hvilke kommuner mÃ¥ du bo i for Ã¥ kunne gÃ¥ pÃ¥ denne skolen i",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sektor": {
            "description": "Er denne [Offentlig, Privat, Fylkeskommunal]",
            "type": "string"
          },
          "telefon": {
            "type": "string"
          },
          "lenke": {
            "type": "string"
          },
          "lengdegrad": {
            "type": "string"
          },
          "breddegrad": {
            "type": "string"
          },
          "adresse": {
            "type": "string"
          },
          "by": {
            "type": "string"
          },
          "postnr": {
            "type": "string"
          }
        }
      },
      "VgsTimefordeling": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "fag_tittel": {
            "description": "Identifier for result",
            "type": "string"
          },
          "timetall": {
            "type": "integer"
          },
          "alternativ": {
            "type": "boolean"
          },
          "timefordeling": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VgsTimefordeling"
            }
          },
          "farge": {
            "type": "string"
          }
        }
      },
      "VgsUtdanningsbeskrivelse": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "uno_id": {
            "description": "Utdanningsbeskrivelsens id pÃ¥ utdanning.no",
            "type": "string"
          },
          "lenke": {
            "description": "Lenken til utdanningsbeskrivelsen pÃ¥ utdanning.no",
            "type": "string"
          },
          "tittel": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "opptakskrav": {
            "type": "string"
          },
          "varighet": {
            "type": "string"
          },
          "nus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VgsNus"
            }
          }
        }
      },
      "VgsVarianter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "programomradekode10": {
            "description": "Identifier for result",
            "type": "string"
          },
          "programomrade_tittel": {
            "description": "The name of the program in the GREP database",
            "type": "string"
          },
          "vilbli_org_ids": {
            "description": "Hvilke skoler tilbyr denne utdanningsbeskrivelsen",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Views": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "path": {
            "type": "string",
            "summary": "Id for hvert yrke, per Ã¥r per kommune"
          },
          "total_views": {},
          "date_start": {},
          "date_end": {},
          "date_range": {}
        }
      },
      "VovFagkodeVelger": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "kode": {
            "type": "string"
          },
          "tittel": {
            "type": "string"
          },
          "grep_status": {
            "type": "string"
          },
          "calculated_status": {
            "type": "string"
          },
          "gyldig_fra": {
            "type": "string",
            "nullable": true
          },
          "gylidg_til": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Vtf__1_3.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "string",
            "summary": "Identifier for VTF"
          },
          "tittel": {
            "description": "Title of VTF",
            "type": "string"
          },
          "opprettet": {
            "description": "NÃ¥r er veien oppprettet",
            "type": "string"
          },
          "oppdatert": {
            "description": "NÃ¥r er veien oppdatert",
            "type": "string"
          },
          "fylke": {
            "description": "Hvilket fylke hÃ¸rer veien til",
            "type": "string"
          },
          "kommune": {
            "description": "Hvilken kommune hÃ¸rer veien til",
            "type": "string"
          },
          "ingress": {
            "description": "Info om veien",
            "type": "string"
          },
          "info": {
            "description": "Informasjon",
            "type": "string"
          },
          "vises_under_25": {
            "type": "boolean"
          },
          "fagbrev_fra_foer": {
            "type": "boolean"
          },
          "beskrivelse": {
            "type": "string"
          },
          "ordningslenke": {
            "type": "string"
          },
          "vei_varighet": {
            "type": "string"
          },
          "regionalt_navn": {
            "type": "string"
          },
          "vei": {
            "description": "MÃ¥ten du fÃ¸lger innholdet I solr er dette distributionOfYears",
            "$ref": "#/components/schemas/YearPath.jsonld"
          },
          "vei_beskrivelse": {
            "description": "MÃ¥ten du fÃ¸lger innholdet",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/YearDescription.jsonld"
            }
          },
          "kontakt": {
            "description": "Kontaktinformasjon",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kontakt.jsonld"
            }
          },
          "erfaring": {
            "description": "erfaring",
            "type": "string"
          }
        }
      },
      "YFF.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Facet value",
            "type": "integer"
          },
          "count": {
            "description": "Facet count",
            "type": "integer"
          }
        }
      },
      "YearDescription": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "length": {
            "type": "string"
          }
        }
      },
      "YearDescription.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "length": {
            "type": "string"
          }
        }
      },
      "YearPath": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "aar1": {
            "type": "string",
            "nullable": true
          },
          "aar2": {
            "type": "string",
            "nullable": true
          },
          "aar3": {
            "type": "string",
            "nullable": true
          },
          "aar4": {
            "type": "string",
            "nullable": true
          },
          "aar5": {
            "type": "string",
            "nullable": true
          },
          "aar6": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "YearPath.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "aar1": {
            "type": "string",
            "nullable": true
          },
          "aar2": {
            "type": "string",
            "nullable": true
          },
          "aar3": {
            "type": "string",
            "nullable": true
          },
          "aar4": {
            "type": "string",
            "nullable": true
          },
          "aar5": {
            "type": "string",
            "nullable": true
          },
          "aar6": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Yrke.jsonld-yrke.collection": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "uno_id": {
            "description": "utdanning.no ID",
            "type": "string"
          },
          "tittel": {
            "description": "Tittel",
            "type": "string"
          },
          "url": {
            "description": "Url",
            "type": "string"
          },
          "yrkeskode_styrk98": {
            "description": "Yrkeskode_styrk98",
            "type": "string"
          }
        }
      },
      "Yrke.jsonld-yrke.item": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "uno_id": {
            "description": "utdanning.no ID",
            "type": "string"
          },
          "tittel": {
            "description": "Tittel",
            "type": "string"
          },
          "url": {
            "description": "Url",
            "type": "string"
          },
          "yrkeskode_styrk98": {
            "description": "Yrkeskode_styrk98",
            "type": "string"
          }
        }
      },
      "Yrke2utdanning": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "antall_personer": {},
          "nus_kortnavn": {}
        }
      },
      "Yrker.jsonld": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier for each tema. ID consists of name of result\nwith whitespace replaced with '_'",
            "type": "string"
          },
          "temaer": {
            "description": "Name of the parent tema.",
            "type": "string"
          },
          "kategorier": {
            "description": "Name of the parent kategori.",
            "type": "string"
          },
          "interesser": {
            "description": "Name of the interesse.",
            "type": "string"
          },
          "entity_id": {
            "description": "Entity ID for the yrke. Used to save the yrke as a\nfavourite.",
            "type": "string"
          },
          "tittel": {
            "description": "Tittel of the yrke.",
            "type": "string"
          },
          "url": {
            "description": "Utdanning.no url for the yrke.",
            "type": "string"
          },
          "ingress": {
            "description": "Short description of the yrke-",
            "type": "string"
          },
          "bilde": {
            "description": "URI for a picture.",
            "type": "string"
          },
          "sammenligning_id": {
            "description": "ID used to redirect to\nsammenlign.utdanning.no.",
            "type": "string"
          }
        }
      },
      "Yrker_interesse": {
        "type": "object",
        "description": "Class Onet",
        "deprecated": false,
        "properties": {
          "id": {
            "description": "identifier of result",
            "type": "string"
          },
          "uno_id": {
            "type": "string"
          },
          "yrke_tittel": {
            "type": "string"
          },
          "yrke_nus": {
            "type": "integer"
          },
          "yrke_summary": {
            "description": "Kort beskrivelse av yrke",
            "type": "string"
          },
          "yrke_beskrivelse_url": {
            "description": "url til yrkebeskrivelse pÃ¥ utdanning.no",
            "type": "string"
          },
          "sum_importance": {
            "description": "summen av alle importance verdiene basert pÃ¥ element_id",
            "type": "number"
          },
          "elements": {
            "description": "list of element_id => i_data_value",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Yrkeskategori": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "styrk08": {
            "type": "string",
            "summary": "Identifier for result"
          },
          "styrk08_tittel": {},
          "styrk98": {},
          "styrk98_tittel": {},
          "antall_styrk08": {},
          "aarsverk_styrk08": {},
          "vikarstillinger_styrk08": {},
          "antall_ansatte98": {},
          "aarsverk_styrk98": {},
          "vikarstillinger_styrk98": {}
        }
      },
      "i1": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "innvandrerkategori": {
            "description": "The code for the immigrant group the associated numbers apply to",
            "type": "string"
          },
          "alle": {
            "description": "All in the group for this year and region. Usually (but not guaranteed to be) equal to the sum of innenforarbeid and utenforarbeid",
            "type": "integer"
          },
          "innenforarbeid": {
            "description": "Everyone that are part of the workforce within the given group for this year and region",
            "type": "integer"
          },
          "utenforarbeid": {
            "description": "Everyone outside the workforce within the given group for this year and region",
            "type": "integer"
          },
          "ratio": {
            "description": "Precentage of people in the workforce compared to the entire group",
            "type": "number"
          }
        }
      },
      "i10": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "year": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "month": {
            "description": "The month this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "kjonn": {
            "description": "The gender code for the associated data",
            "type": "string"
          },
          "heltledige": {
            "type": "string"
          },
          "delvisledige": {
            "type": "string"
          },
          "heltledige_andel": {
            "type": "string"
          },
          "delvisledige_andel": {
            "type": "string"
          }
        }
      },
      "i11": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "year": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "month": {
            "description": "The month this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "kjonn": {
            "description": "The gender code for the associated data",
            "type": "string"
          },
          "arbeidsledige": {
            "description": "Number of fully unemployed people for this time, region and gender group",
            "type": "string"
          },
          "tilgjengeligestillinger": {
            "description": "Total available jobs for this time and region",
            "type": "string"
          },
          "ratio": {
            "description": "Number of unemployed per available position.",
            "type": "string"
          }
        }
      },
      "i13i14i15": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "kjonn": {
            "description": "Whether the numbers apply to females (F), males (M) or both (B)",
            "type": "string"
          },
          "grunnskole": {
            "description": "Grunnskole som hÃ¸yeste utdanningsnivÃ¥",
            "type": "integer"
          },
          "videregande": {
            "description": "VideregÃ¥ende skolenivÃ¥ inkluderer 'PÃ¥bygging til videregÃ¥ende utdanning' som omfatter utdanninger som bygger pÃ¥ videregÃ¥ende skole, men som ikke er godkjent som hÃ¸yere utdanning",
            "type": "integer"
          },
          "fagskole": {
            "description": "Note: always zero for 2015 and earlier",
            "type": "integer"
          },
          "hoyereutdanning_kort": {
            "description": "Universitets- og hÃ¸gskolenivÃ¥ kort, omfatter hÃ¸yere utdanning t.o.m. 4 Ã¥r",
            "type": "integer"
          },
          "hoyereutdanning_lang": {
            "description": "Universitets- og hÃ¸gskolenivÃ¥ lang, omfatter utdanninger pÃ¥ mer enn 4 Ã¥r, samt forskerutdanning",
            "type": "integer"
          },
          "total": {
            "description": "Sum of grunnskole, videregande, fagskole, hoyereutdanning_kort and hoyereutdanning_lang",
            "type": "integer"
          },
          "ratio": {
            "description": "Calculated percentage ratio of '(sum of selected utdanningsniva)/total'\"",
            "type": "number"
          }
        }
      },
      "i16": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "studieforberedende": {
            "type": "integer"
          },
          "yrkesfag": {
            "type": "integer"
          },
          "ratio": {
            "description": "Equal to yrkesfag/(yrkesfag + studieforberedende).",
            "type": "number"
          }
        }
      },
      "i17": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "utdanningsprogram": {
            "type": "string"
          },
          "ratio": {
            "type": "string"
          }
        }
      },
      "i18": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {},
          "regionstype": {},
          "dato": {},
          "studiested": {},
          "studieplasser": {},
          "forstevalg": {},
          "ratio": {}
        }
      },
      "i19i20i21i22": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "laeringstype": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "kjonn": {
            "description": "Whether the numbers apply to the female (F), male (M) combined (B) population",
            "type": "string"
          },
          "arbeidsstyrkestatus_i_alt_andel": {
            "type": "string"
          },
          "ikke_sysselsatte_andel": {
            "type": "string"
          },
          "sysselsatte_andel": {
            "type": "string"
          },
          "ikke_sysselsatte_uten_studender_andel": {
            "type": "string"
          },
          "sysselsatte_uten_studenter_andel": {
            "type": "string"
          }
        }
      },
      "i2": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "total": {
            "description": "Total population. Equal to the sum of antall for all objects for this region and year",
            "type": "integer"
          },
          "antall": {
            "description": "Population count for the associated age range for this region and year",
            "type": "integer"
          },
          "ratio": {
            "description": "The ratio (antall/total)",
            "type": "string"
          }
        }
      },
      "i23": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "sysselsatte": {
            "description": "Employed people of the associated age group within a region.",
            "type": "integer"
          },
          "fagogsvennebrev": {
            "description": "Adults (25+) that earned a fag/svenne-brev this year in a region.",
            "type": "integer"
          },
          "ratio": {
            "description": "Equal to fagogsvennebrev/(sysselsatte/1000).",
            "type": "number"
          }
        }
      },
      "i24": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "utdanningsniva": {
            "description": "Education level for this object applies to",
            "type": "string"
          },
          "kjonn": {
            "description": "Whether the numbers apply to females (F), males (M) or both (B)",
            "type": "string"
          },
          "ratio": {
            "type": "number"
          }
        }
      },
      "i25i26": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "innvandrerkategori": {
            "description": "The code for the immigrant group the associated numbers apply to",
            "type": "string"
          },
          "alle": {
            "description": "All in the group for this year and region. Usually (but not guaranteed to be) equal to the sum of innenforarbeid and utenforarbeid",
            "type": "integer"
          },
          "innenforarbeid": {
            "description": "Everyone that is part of the workforce, in education or under labor measures in the given group for this year and region",
            "type": "integer"
          },
          "utenforarbeid": {
            "description": "Everyone outside the workforce, not in education and not under labor measures in the given group for this year and region (NEET)",
            "type": "integer"
          },
          "ratio": {
            "description": "Percentage of people in the workforce compared to the entire group or (utenforarbeid/alle)",
            "type": "number"
          }
        }
      },
      "i27": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "kvartal": {
            "type": "string"
          },
          "kjonn": {
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "ratio": {
            "type": "string"
          }
        }
      },
      "i29": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "ratio": {
            "description": "Equal to yrkesfag/(yrkesfag + studieforberedende).",
            "type": "string"
          }
        }
      },
      "i3": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "tags": [
              "Regionalkompetanse"
            ],
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "alle": {
            "description": "All in the group for this year and region. Usually (but not guaranteed to be) equal\nto the sum of heltid and deltid. May appear as a string with the value \":\" meaning \"non-zero but hidden\nfor privacy protection.\"",
            "type": "integer"
          },
          "heltid": {
            "description": "Everyone with full employment within the given group for this year and region.\nMay appear as a string with the value \":\" meaning \"non-zero but hidden for privacy protection.\"",
            "type": "integer"
          },
          "deltid": {
            "description": "Everyone with part-time employment within the given group for this year and region.\nMay appear as a string with the value \":\" meaning \"non-zero but hidden for privacy protection.\"",
            "type": "integer"
          },
          "ratio": {
            "description": "Precalculated precentage ration of heltid/alle.\nMay appear as a string with the value \":\" meaning \"non-zero but hidden for privacy protection.\"",
            "type": "number"
          }
        }
      },
      "i30i31": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this batch of students started",
            "type": "string"
          },
          "utdanningsprogram": {
            "description": "The code for the education program these numbers apply to",
            "type": "string"
          },
          "kjonn": {
            "description": "Gender group these numbers apply to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "ialt": {
            "description": "Sum of all other value fields",
            "type": "integer"
          },
          "normtid": {
            "description": "Finished within expected time",
            "type": "integer"
          },
          "overnormtid": {
            "description": "Finished, but took longer than the expected time",
            "type": "integer"
          },
          "ferdiginnenperioden": {
            "description": "Finished within this time period",
            "type": "integer"
          },
          "fortsattiundervisning": {
            "description": "Still in education",
            "type": "integer"
          },
          "stryk": {
            "description": "Finished their education programme, but failed to pass qualifications",
            "type": "integer"
          },
          "sluttet": {
            "description": "Dropped out of their education programme",
            "type": "integer"
          },
          "ratio": {
            "description": "Precalculated ratio of (stryk + sluttet) / ialt, in percent",
            "type": "number"
          }
        }
      },
      "i4i5": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "kjonn": {
            "description": "Whether the numbers apply to the female (F) or male (M) population",
            "type": "string"
          },
          "aldersgruppe": {
            "description": "The age range this data object applies to",
            "type": "string"
          },
          "grunnskole": {
            "description": "Sysselsatte med grunnskole som hÃ¸yeste utdanningsnivÃ¥",
            "type": "integer"
          },
          "videregande": {
            "description": "Sysselsatte med videregÃ¥ende som hÃ¸yeste utdanningsnivÃ¥. Inkluderer 'PÃ¥bygging til\nvideregÃ¥ende utdanning' som omfatter utdanninger som bygger pÃ¥ videregÃ¥ende skole, men som ikke er godkjent\nsom hÃ¸yere utdanning",
            "type": "integer"
          },
          "hoyereutdanning_kort": {
            "description": "Sysselsatte med hÃ¸yere utdanning t.o.m. 4 Ã¥r",
            "type": "integer"
          },
          "hoyereutdanning_lang": {
            "description": "Universitets- og hÃ¸gskolenivÃ¥ lang, omfatter utdanninger pÃ¥ mer enn 4 Ã¥r,\nsamt forskerutdanning",
            "type": "integer"
          },
          "uoppgittutdanning": {
            "description": "Ukjent utdanningsnivÃ¥",
            "type": "integer"
          },
          "total": {
            "description": "Sum of grunnskole, videregande, hoyereutdanning_kort, hoyereutdanning_lang and uopgittutdanning",
            "type": "integer"
          },
          "ratio": {
            "description": "Calculated percentage ratio of '(sum of selected utdanningsniva)/total'\"",
            "type": "number"
          }
        }
      },
      "i6": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "nace": {
            "description": "The nace code for the associated data",
            "type": "string"
          },
          "sysselsatte": {
            "description": "Everyone working within the given industry in this region during the associated year",
            "type": "integer"
          }
        }
      },
      "i7": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "kjonn": {
            "type": "string"
          },
          "innvandrerkategori": {
            "type": "string"
          },
          "bosatte": {
            "description": "Totalt antall sysselsatte som bor i regionen, innkludert ikke-innvandrere",
            "type": "integer"
          },
          "personer": {
            "type": "integer"
          }
        }
      },
      "i8": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this data object"
          },
          "fylkenr": {
            "description": "Fylkenr of this data object. Set to 00 if a country wide data object",
            "type": "string"
          },
          "kommunenr": {
            "description": "Kommunenr of this data object. Set to 0000 if a fylke or country wide data object",
            "type": "string"
          },
          "dato": {
            "description": "The year this data object applies to",
            "type": "string"
          },
          "regionstype": {
            "description": "The region type of this data object",
            "type": "string"
          },
          "nace": {
            "description": "The nace code for the associated data",
            "type": "string"
          },
          "sysselsatte": {
            "description": "Everyone working within the given industry in this region during the associated year",
            "type": "string"
          },
          "lonnstakere": {
            "description": "Sysselsatte without a registered place of residence (immigrant workers)",
            "type": "string"
          },
          "ratio": {
            "description": "Equal to lonnstakere/(sysselsatte/1000).",
            "type": "number"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {}
  },
  "security": [],
  "tags": []
}